<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcon_1_1CBLayout" kind="class" language="C++" prot="public">
    <compoundname>con::CBLayout</compoundname>
    <derivedcompoundref refid="classcon_1_1CookedLayout" prot="public" virt="non-virtual">con::CookedLayout</derivedcompoundref>
    <derivedcompoundref refid="classcon_1_1RawLayout" prot="public" virt="non-virtual">con::RawLayout</derivedcompoundref>
    <includes refid="dynamic__constant__buffer_8h" local="no">dynamic_constant_buffer.h</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classcon_1_1CBLayout_a87b6f773d0354ee3da4e455c08002867_1a87b6f773d0354ee3da4e455c08002867" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class LayoutMap</definition>
        <argsstring></argsstring>
        <name>LayoutMap</name>
        <qualifiedname>con::CBLayout::LayoutMap</qualifiedname>
        <param>
          <type><ref refid="classcon_1_1LayoutMap" kindref="compound">LayoutMap</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="267" column="14" bodyfile="inc/dynamic_constant_buffer.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classcon_1_1CBLayout_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class CBuffer</definition>
        <argsstring></argsstring>
        <name>CBuffer</name>
        <qualifiedname>con::CBLayout::CBuffer</qualifiedname>
        <param>
          <type><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="268" column="14" bodyfile="inc/dynamic_constant_buffer.h" bodystart="268" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcon_1_1CBLayout_a0b1d411cd40cd4aed65e330a385a03f2_1a0b1d411cd40cd4aed65e330a385a03f2" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref> &gt;</type>
        <definition>std::shared_ptr&lt;CBElement&gt; con::CBLayout::m_pLayoutRoot</definition>
        <argsstring></argsstring>
        <name>m_pLayoutRoot</name>
        <qualifiedname>con::CBLayout::m_pLayoutRoot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="270" column="17" bodyfile="inc/dynamic_constant_buffer.h" bodystart="270" bodyend="-1"/>
        <referencedby refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" compoundref="dynamic__constant__buffer_8h" startline="297" endline="300">con::RawLayout::add</referencedby>
        <referencedby refid="classcon_1_1CBLayout_ad0f25a176e697cb4a7c8a2bc938ea909_1ad0f25a176e697cb4a7c8a2bc938ea909" compoundref="dynamic__constant__buffer_8cpp" startline="281" endline="284">calcSignature</referencedby>
        <referencedby refid="classcon_1_1RawLayout_aa73c4eddf4e7b53a1bf873bc89f0044e_1aa73c4eddf4e7b53a1bf873bc89f0044e" compoundref="dynamic__constant__buffer_8cpp" startline="300" endline="306">con::RawLayout::cookLayout</referencedby>
        <referencedby refid="classcon_1_1CBLayout_a38fe5d51ff565b2f6089861086125341_1a38fe5d51ff565b2f6089861086125341" compoundref="dynamic__constant__buffer_8cpp" startline="276" endline="279">getSizeInBytes</referencedby>
        <referencedby refid="classcon_1_1CookedLayout_a2098dd9315a3d69a99cec5ff847f382c_1a2098dd9315a3d69a99cec5ff847f382c" compoundref="dynamic__constant__buffer_8cpp" startline="322" endline="325">con::CookedLayout::relinquishRoot</referencedby>
        <referencedby refid="classcon_1_1CookedLayout_a63181de6561e0352754e70caa846a317_1a63181de6561e0352754e70caa846a317" compoundref="dynamic__constant__buffer_8cpp" startline="327" endline="330">con::CookedLayout::shareRootElement</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcon_1_1CBLayout_a9b04357032146c78e74cce1e9843a788_1a9b04357032146c78e74cce1e9843a788" prot="protected" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>con::CBLayout::CBLayout</definition>
        <argsstring>(std::shared_ptr&lt; CBElement &gt; pRoot) noexcept</argsstring>
        <name>CBLayout</name>
        <qualifiedname>con::CBLayout::CBLayout</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref> &gt;</type>
          <declname>pRoot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="272" column="1" bodyfile="src/dynamic_constant_buffer.cpp" bodystart="269" bodyend="274"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcon_1_1CBLayout_a38fe5d51ff565b2f6089861086125341_1a38fe5d51ff565b2f6089861086125341" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t con::CBLayout::getSizeInBytes</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getSizeInBytes</name>
        <qualifiedname>con::CBLayout::getSizeInBytes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="274" column="8" bodyfile="src/dynamic_constant_buffer.cpp" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classcon_1_1CBLayout_ad0f25a176e697cb4a7c8a2bc938ea909_1ad0f25a176e697cb4a7c8a2bc938ea909" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string con::CBLayout::calcSignature</definition>
        <argsstring>() const cond_noex</argsstring>
        <name>calcSignature</name>
        <qualifiedname>con::CBLayout::calcSignature</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="275" column="13" bodyfile="src/dynamic_constant_buffer.cpp" bodystart="281" bodyend="284"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>the layout class serves as a shell to hold the root of the <ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref> tree </para>
    </briefdescription>
    <detaileddescription>
<para>=============================================================</para>
<para><simplesect kind="author"><para>KeyC0de </para>
</simplesect>
<simplesect kind="date"><para>2022/08/21 19:56</para>
</simplesect>
client does not create CBElements directly, create a raw layout and then</para>
<para>use it to access the elements and add on from there. When building is done,</para>
<para>raw layout is moved to <ref refid="classBindableRegistry" kindref="compound">BindableRegistry</ref> (usually via Buffer::make), and the internal layout</para>
<para>element tree is &quot;delivered&quot; (finalized and moved out). <ref refid="classBindableRegistry" kindref="compound">BindableRegistry</ref> returns a baked</para>
<para>layout, which the buffer can then use to initialize itself. Baked layout can</para>
<para>also be used to directly init multiple Buffers. Baked layouts are conceptually immutable. <heading level="1">Base <ref refid="classcon_1_1CBLayout" kindref="compound">CBLayout</ref> class cannot be constructed. </heading>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>con::CBLayout</label>
        <link refid="classcon_1_1CBLayout"/>
      </node>
      <node id="2">
        <label>con::CookedLayout</label>
        <link refid="classcon_1_1CookedLayout"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>con::RawLayout</label>
        <link refid="classcon_1_1RawLayout"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="inc/dynamic_constant_buffer.h" line="265" column="1" bodyfile="inc/dynamic_constant_buffer.h" bodystart="266" bodyend="276"/>
    <listofallmembers>
      <member refid="classcon_1_1CBLayout_ad0f25a176e697cb4a7c8a2bc938ea909_1ad0f25a176e697cb4a7c8a2bc938ea909" prot="public" virt="non-virtual"><scope>con::CBLayout</scope><name>calcSignature</name></member>
      <member refid="classcon_1_1CBLayout_a9b04357032146c78e74cce1e9843a788_1a9b04357032146c78e74cce1e9843a788" prot="protected" virt="non-virtual"><scope>con::CBLayout</scope><name>CBLayout</name></member>
      <member refid="classcon_1_1CBLayout_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" prot="private" virt="non-virtual"><scope>con::CBLayout</scope><name>CBuffer</name></member>
      <member refid="classcon_1_1CBLayout_a38fe5d51ff565b2f6089861086125341_1a38fe5d51ff565b2f6089861086125341" prot="public" virt="non-virtual"><scope>con::CBLayout</scope><name>getSizeInBytes</name></member>
      <member refid="classcon_1_1CBLayout_a87b6f773d0354ee3da4e455c08002867_1a87b6f773d0354ee3da4e455c08002867" prot="private" virt="non-virtual"><scope>con::CBLayout</scope><name>LayoutMap</name></member>
      <member refid="classcon_1_1CBLayout_a0b1d411cd40cd4aed65e330a385a03f2_1a0b1d411cd40cd4aed65e330a385a03f2" prot="protected" virt="non-virtual"><scope>con::CBLayout</scope><name>m_pLayoutRoot</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
