<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="operation_8h" kind="file" language="C++">
    <compoundname>operation.h</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes refid="non__copyable_8h" local="yes">non_copyable.h</includes>
    <includedby refid="entity_8cpp" local="yes">src/entity.cpp</includedby>
    <includedby refid="message_8cpp" local="yes">src/message.cpp</includedby>
    <includedby refid="operation_8cpp" local="yes">src/operation.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="1">
        <label>inc/operation.h</label>
        <link refid="operation_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>inc/operation.h</label>
        <link refid="operation_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/entity.cpp</label>
        <link refid="entity_8cpp"/>
      </node>
      <node id="3">
        <label>src/message.cpp</label>
        <link refid="message_8cpp"/>
      </node>
      <node id="4">
        <label>src/operation.cpp</label>
        <link refid="operation_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classOperation" prot="public">Operation</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="non__copyable_8h" kindref="compound">non_copyable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classOperation" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classOperation" kindref="compound">Operation</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18" refid="classOperation_aa3d6c997112b92e3f69a41212e70518e_1aa3d6c997112b92e3f69a41212e70518e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classOperation_aa3d6c997112b92e3f69a41212e70518e_1aa3d6c997112b92e3f69a41212e70518e" kindref="member">TF</ref><sp/>=<sp/>std::function&lt;void()&gt;;</highlight></codeline>
<codeline lineno="19" refid="classOperation_a1d65aa6390838c774e7032221d8e12bb_1a1d65aa6390838c774e7032221d8e12bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOperation_aa3d6c997112b92e3f69a41212e70518e_1aa3d6c997112b92e3f69a41212e70518e" kindref="member">TF</ref><sp/><ref refid="classOperation_a1d65aa6390838c774e7032221d8e12bb_1a1d65aa6390838c774e7032221d8e12bb" kindref="member">m_f</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOperation_a969d86df18a051bd684baf0bbda533c2_1a969d86df18a051bd684baf0bbda533c2" kindref="member">Operation</ref>(<sp/><ref refid="classOperation_aa3d6c997112b92e3f69a41212e70518e_1aa3d6c997112b92e3f69a41212e70518e" kindref="member">TF</ref><sp/>&amp;&amp;f<sp/>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOperation_a9608233a9ffb59244f68cd9ce0072ef5_1a9608233a9ffb59244f68cd9ce0072ef5" kindref="member">~Operation</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOperation" kindref="compound">Operation</ref>(<sp/><ref refid="classOperation" kindref="compound">Operation</ref><sp/>&amp;&amp;rhs<sp/>)<sp/>noexcept;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOperation" kindref="compound">Operation</ref>&amp;<sp/>operator=(<sp/><ref refid="classOperation" kindref="compound">Operation</ref><sp/>&amp;&amp;rhs<sp/>)<sp/>noexcept;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>TFunction,<sp/>typename...<sp/>TArgs&gt;</highlight></codeline>
<codeline lineno="29" refid="classOperation_ac186837829eb564b07a4eb233f3bc1a1_1ac186837829eb564b07a4eb233f3bc1a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>std::unique_ptr&lt;<ref refid="classOperation" kindref="compound">Operation</ref>&gt;<sp/><ref refid="classOperation_ac186837829eb564b07a4eb233f3bc1a1_1ac186837829eb564b07a4eb233f3bc1a1" kindref="member">setup</ref>(<sp/>TFunction<sp/>&amp;&amp;f,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TArgs<sp/>&amp;&amp;...args<sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;Operation&gt;(<sp/>std::bind(<sp/>std::forward&lt;TFunction&gt;(<sp/>f<sp/>),<sp/>std::forward&lt;TArgs&gt;(<sp/>args<sp/>)...<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TRet(<sp/>*f<sp/>)(<sp/>std::forward&lt;TArgs&gt;(<sp/>args<sp/>)...<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TMethod,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...TArgs&gt;</highlight></codeline>
<codeline lineno="38" refid="classOperation_a07f03d11f9e1a4e4a8aa9aee00bdeb7c_1a07f03d11f9e1a4e4a8aa9aee00bdeb7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Operation&gt;<sp/><ref refid="classOperation_a07f03d11f9e1a4e4a8aa9aee00bdeb7c_1a07f03d11f9e1a4e4a8aa9aee00bdeb7c" kindref="member">setup</ref>(<sp/>TMethod<sp/>&amp;&amp;mf,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>&amp;&amp;obj,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TArgs<sp/>&amp;&amp;...args<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Operation&gt;(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classOperation" kindref="compound">Operation</ref>{std::bind(<sp/>std::forward&lt;TMethod&gt;(<sp/>mf<sp/>),<sp/>std::forward&lt;T&gt;(<sp/>obj<sp/>),<sp/>std::forward&lt;TArgs&gt;(<sp/>args<sp/>)...<sp/>)}<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(<sp/>std::forward&lt;T&gt;(<sp/>obj<sp/>).*mf<sp/>)(<sp/>std::forward&lt;TArgs&gt;(<sp/>args<sp/>)...<sp/>);<sp/>-&gt;<sp/>TRet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOperation_a7d006b5788e6f0f6a818ad478e43f9d8_1a7d006b5788e6f0f6a818ad478e43f9d8" kindref="member">operator()</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOperation_a1a6693e431a3b4a6a2acd6b77df6203e_1a1a6693e431a3b4a6a2acd6b77df6203e" kindref="member">swap</ref>(<sp/><ref refid="classOperation" kindref="compound">Operation</ref><sp/>&amp;rhs<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOperation_a251f901c6cd9f7aa88d88af641d9b10d_1a251f901c6cd9f7aa88d88af641d9b10d" kindref="member">reset</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>inline<sp/>operator<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>inline<sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(<sp/>const<sp/><ref refid="classOperation" kindref="compound">Operation</ref><sp/>&amp;rhs<sp/>)<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>inline<sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(<sp/>const<sp/><ref refid="classOperation" kindref="compound">Operation</ref><sp/>&amp;rhs<sp/>)<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>inline<sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(<sp/>const<sp/><ref refid="classOperation" kindref="compound">Operation</ref><sp/>*rhs<sp/>)<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>inline<sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(<sp/>const<sp/><ref refid="classOperation" kindref="compound">Operation</ref><sp/>*rhs<sp/>)<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="inc/operation.h"/>
  </compounddef>
</doxygen>
