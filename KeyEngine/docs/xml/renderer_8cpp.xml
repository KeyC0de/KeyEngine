<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="renderer_8cpp" kind="file" language="C++">
    <compoundname>renderer.cpp</compoundname>
    <includes refid="renderer_8h" local="yes">renderer.h</includes>
    <includes refid="graphics_8h" local="yes">graphics.h</includes>
    <includes refid="graphics__mode_8h" local="yes">graphics_mode.h</includes>
    <includes refid="constant__buffer__ex_8h" local="yes">constant_buffer_ex.h</includes>
    <includes refid="renderer__exception_8h" local="yes">renderer_exception.h</includes>
    <includes refid="linker_8h" local="yes">linker.h</includes>
    <includes refid="dynamic__constant__buffer_8h" local="yes">dynamic_constant_buffer.h</includes>
    <includes refid="render__queue__pass_8h" local="yes">render_queue_pass.h</includes>
    <includes refid="render__surface__clear__pass_8h" local="yes">render_surface_clear_pass.h</includes>
    <includes refid="shadow__pass_8h" local="yes">shadow_pass.h</includes>
    <includes refid="opaque__pass_8h" local="yes">opaque_pass.h</includes>
    <includes refid="sky__pass_8h" local="yes">sky_pass.h</includes>
    <includes refid="blur__outline__mask__pass_8h" local="yes">blur_outline_mask_pass.h</includes>
    <includes refid="blur__outline__draw__pass_8h" local="yes">blur_outline_draw_pass.h</includes>
    <includes refid="horizontal__blur__pass_8h" local="yes">horizontal_blur_pass.h</includes>
    <includes refid="vertical__blur__pass_8h" local="yes">vertical_blur_pass.h</includes>
    <includes refid="solid__outline__mask__pass_8h" local="yes">solid_outline_mask_pass.h</includes>
    <includes refid="solid__outline__draw__pass_8h" local="yes">solid_outline_draw_pass.h</includes>
    <includes refid="depth__reversed__pass_8h" local="yes">depth_reversed_pass.h</includes>
    <includes refid="wireframe__pass_8h" local="yes">wireframe_pass.h</includes>
    <includes refid="transparent__pass_8h" local="yes">transparent_pass.h</includes>
    <includes refid="negative__pass_8h" local="yes">negative_pass.h</includes>
    <includes refid="blur__pass_8h" local="yes">blur_pass.h</includes>
    <includes refid="pass__through_8h" local="yes">pass_through.h</includes>
    <includes refid="pass__2d_8h" local="yes">pass_2d.h</includes>
    <includes refid="render__target_8h" local="yes">render_target.h</includes>
    <includes local="yes">imgui/imgui.h</includes>
    <includes refid="math__utils_8h" local="yes">math_utils.h</includes>
    <includes refid="assertions__console_8h" local="yes">assertions_console.h</includes>
    <incdepgraph>
      <node id="32">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>bindable.h</label>
        <link refid="bindable_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>bindable_pass.h</label>
        <link refid="bindable__pass_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>bindable_registry.h</label>
        <link refid="bindable__registry_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>binder.h</label>
        <link refid="binder_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>bitmap.h</label>
        <link refid="bitmap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>blur_outline_draw_pass.h</label>
        <link refid="blur__outline__draw__pass_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>blur_outline_mask_pass.h</label>
        <link refid="blur__outline__mask__pass_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>blur_pass.h</label>
        <link refid="blur__pass_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="24">
        <label>console.h</label>
        <link refid="console_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>constant_buffer.h</label>
        <link refid="constant__buffer_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>constant_buffer_ex.h</label>
        <link refid="constant__buffer__ex_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>depth_reversed_pass.h</label>
        <link refid="depth__reversed__pass_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>depth_stencil_view.h</label>
        <link refid="depth__stencil__view_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>dxgi_info_queue.h</label>
        <link refid="dxgi__info__queue_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>dynamic_constant_buffer.h</label>
        <link refid="dynamic__constant__buffer_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>fullscreen_pass.h</label>
        <link refid="fullscreen__pass_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>graphics_friend.h</label>
        <link refid="graphics__friend_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>graphics_mode.h</label>
        <link refid="graphics__mode_8h"/>
      </node>
      <node id="93">
        <label>horizontal_blur_pass.h</label>
        <link refid="horizontal__blur__pass_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>imgui_visitors.h</label>
        <link refid="imgui__visitors_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>job.h</label>
        <link refid="job_8h"/>
      </node>
      <node id="17">
        <label>key_exception.h</label>
        <link refid="key__exception_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>key_random.h</label>
        <link refid="key__random_8h"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>key_timer.h</label>
        <link refid="key__timer_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>key_wrl.h</label>
        <link refid="key__wrl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>light_source.h</label>
        <link refid="light__source_8h"/>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>linker.h</label>
        <link refid="linker_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>negative_pass.h</label>
        <link refid="negative__pass_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="89">
        <label>opaque_pass.h</label>
        <link refid="opaque__pass_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>os_utils.h</label>
        <link refid="os__utils_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>pass.h</label>
        <link refid="pass_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>pass_2d.h</label>
        <link refid="pass__2d_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>pass_through.h</label>
        <link refid="pass__through_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>render_queue_pass.h</label>
        <link refid="render__queue__pass_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>render_surface.h</label>
        <link refid="render__surface_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>render_surface_clear_pass.h</label>
        <link refid="render__surface__clear__pass_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>render_target.h</label>
        <link refid="render__target_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>renderer.h</label>
        <link refid="renderer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>renderer_exception.h</label>
        <link refid="renderer__exception_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>rendering_channel.h</label>
        <link refid="rendering__channel_8h"/>
      </node>
      <node id="72">
        <label>shadow_pass.h</label>
        <link refid="shadow__pass_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>sky_pass.h</label>
        <link refid="sky__pass_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>solid_outline_draw_pass.h</label>
        <link refid="solid__outline__draw__pass_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>solid_outline_mask_pass.h</label>
        <link refid="solid__outline__mask__pass_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>sprite.h</label>
        <link refid="sprite_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>texture.h</label>
        <link refid="texture_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>texture_desc.h</label>
        <link refid="texture__desc_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>transparent_pass.h</label>
        <link refid="transparent__pass_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>vertical_blur_pass.h</label>
        <link refid="vertical__blur__pass_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>wireframe_pass.h</label>
        <link refid="wireframe__pass_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/renderer.cpp</label>
        <link refid="renderer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>DirectXMath.h</label>
      </node>
      <node id="68">
        <label>DirectxMath.h</label>
      </node>
      <node id="80">
        <label>ShlObj.h</label>
      </node>
      <node id="9">
        <label>Windows.h</label>
      </node>
      <node id="40">
        <label>algorithm</label>
      </node>
      <node id="61">
        <label>array</label>
      </node>
      <node id="36">
        <label>bitset</label>
      </node>
      <node id="52">
        <label>cassert</label>
      </node>
      <node id="23">
        <label>chrono</label>
      </node>
      <node id="38">
        <label>cinttypes</label>
      </node>
      <node id="26">
        <label>cmath</label>
      </node>
      <node id="77">
        <label>comdef.h</label>
      </node>
      <node id="37">
        <label>cstddef</label>
      </node>
      <node id="27">
        <label>cstdint</label>
      </node>
      <node id="108">
        <label>d2d1.h</label>
      </node>
      <node id="13">
        <label>d3d11.h</label>
      </node>
      <node id="14">
        <label>d3dcompiler.h</label>
      </node>
      <node id="12">
        <label>dxgi1_4.h</label>
      </node>
      <node id="83">
        <label>dxgidebug.h</label>
      </node>
      <node id="69">
        <label>dxtex/DirectXTex.h</label>
      </node>
      <node id="44">
        <label>execution</label>
      </node>
      <node id="87">
        <label>filesystem</label>
      </node>
      <node id="79">
        <label>functional</label>
      </node>
      <node id="39">
        <label>future</label>
      </node>
      <node id="111">
        <label>imgui/imgui.h</label>
      </node>
      <node id="30">
        <label>iomanip</label>
      </node>
      <node id="33">
        <label>iostream</label>
      </node>
      <node id="42">
        <label>iterator</label>
      </node>
      <node id="31">
        <label>limits</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="41">
        <label>numeric</label>
      </node>
      <node id="53">
        <label>optional</label>
      </node>
      <node id="110">
        <label>random</label>
      </node>
      <node id="43">
        <label>regex</label>
      </node>
      <node id="8">
        <label>sdkddkver.h</label>
      </node>
      <node id="35">
        <label>set</label>
      </node>
      <node id="29">
        <label>sstream</label>
      </node>
      <node id="18">
        <label>stdexcept</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="22">
        <label>thread</label>
      </node>
      <node id="78">
        <label>tlhelp32.h</label>
      </node>
      <node id="28">
        <label>type_traits</label>
      </node>
      <node id="63">
        <label>typeinfo</label>
      </node>
      <node id="54">
        <label>unordered_map</label>
      </node>
      <node id="85">
        <label>variant</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="107">
        <label>wincodec.h</label>
      </node>
      <node id="81">
        <label>wincred.h</label>
      </node>
      <node id="76">
        <label>winternl.h</label>
      </node>
      <node id="11">
        <label>wrl.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceren">ren</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderer_8h" kindref="compound">renderer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphics_8h" kindref="compound">graphics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphics__mode_8h" kindref="compound">graphics_mode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="constant__buffer__ex_8h" kindref="compound">constant_buffer_ex.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderer__exception_8h" kindref="compound">renderer_exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linker_8h" kindref="compound">linker.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dynamic__constant__buffer_8h" kindref="compound">dynamic_constant_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="render__queue__pass_8h" kindref="compound">render_queue_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="render__surface__clear__pass_8h" kindref="compound">render_surface_clear_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shadow__pass_8h" kindref="compound">shadow_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="opaque__pass_8h" kindref="compound">opaque_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sky__pass_8h" kindref="compound">sky_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blur__outline__mask__pass_8h" kindref="compound">blur_outline_mask_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blur__outline__draw__pass_8h" kindref="compound">blur_outline_draw_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="horizontal__blur__pass_8h" kindref="compound">horizontal_blur_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vertical__blur__pass_8h" kindref="compound">vertical_blur_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="solid__outline__mask__pass_8h" kindref="compound">solid_outline_mask_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="solid__outline__draw__pass_8h" kindref="compound">solid_outline_draw_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="depth__reversed__pass_8h" kindref="compound">depth_reversed_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wireframe__pass_8h" kindref="compound">wireframe_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="transparent__pass_8h" kindref="compound">transparent_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="negative__pass_8h" kindref="compound">negative_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blur__pass_8h" kindref="compound">blur_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pass__through_8h" kindref="compound">pass_through.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pass__2d_8h" kindref="compound">pass_2d.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="render__target_8h" kindref="compound">render_target.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;imgui/imgui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="math__utils_8h" kindref="compound">math_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assertions__console_8h" kindref="compound">assertions_console.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceren" kindref="compound">ren</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classren_1_1Renderer_a0b75fa1102c3a19fa22f0ee847f85e49_1a0b75fa1102c3a19fa22f0ee847f85e49" refkind="member"><highlight class="normal"><ref refid="classren_1_1Renderer_a0b75fa1102c3a19fa22f0ee847f85e49_1a0b75fa1102c3a19fa22f0ee847f85e49" kindref="member">Renderer::Renderer</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawToOffscreen<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bUsesOffscreen{drawToOffscreen}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ae20ba92f5c1d98a6bcb0a04e258991f4_1ae20ba92f5c1d98a6bcb0a04e258991f4" kindref="member">recreate</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classren_1_1Renderer_ac73a62446f1263fb388eb41f0b739ddf_1ac73a62446f1263fb388eb41f0b739ddf" refkind="member"><highlight class="normal"><ref refid="classren_1_1Renderer_ac73a62446f1263fb388eb41f0b739ddf_1ac73a62446f1263fb388eb41f0b739ddf" kindref="member">Renderer::~Renderer</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classren_1_1Renderer_ae20ba92f5c1d98a6bcb0a04e258991f4_1ae20ba92f5c1d98a6bcb0a04e258991f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_ae20ba92f5c1d98a6bcb0a04e258991f4_1ae20ba92f5c1d98a6bcb0a04e258991f4" kindref="member">Renderer::recreate</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_af737ba7e14287ff34496ae7c9ba2cc3e_1af737ba7e14287ff34496ae7c9ba2cc3e" kindref="member">m_passes</ref>.clear();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a36dec28555a118fb8fda6da31b48f763_1a36dec28555a118fb8fda6da31b48f763" kindref="member">m_globalBinders</ref>.clear();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ac111bc3886db540e5304924719e06fea_1ac111bc3886db540e5304924719e06fea" kindref="member">m_globalLinkers</ref>.clear();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_abbbe922d48fe9c2f02cb2cf454bb3c96_1abbbe922d48fe9c2f02cb2cf454bb3c96" kindref="member">m_pFinalPostProcessPass</ref>.reset();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a7b79ebe1dd8b11bb7f762152f8f57720_1a7b79ebe1dd8b11bb7f762152f8f57720" kindref="member">m_pRtv</ref>.reset();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a97b542b21987b7df6560c3327f89e2aa_1a97b542b21987b7df6560c3327f89e2aa" kindref="member">m_pDsv</ref>.reset();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_aa06e4a5dce3c714d10c78b5034215c65_1aa06e4a5dce3c714d10c78b5034215c65" kindref="member">m_bValidatedPasses</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a7b79ebe1dd8b11bb7f762152f8f57720_1a7b79ebe1dd8b11bb7f762152f8f57720" kindref="member">m_pRtv</ref><sp/>=<sp/><ref refid="classren_1_1Renderer_af0aa20f264507605ced6ae4385799d8e_1af0aa20f264507605ced6ae4385799d8e" kindref="member">m_bUsesOffscreen</ref><sp/>?<sp/>gfx.<ref refid="classGraphics_a506691019858e4dbe5c5b4477f73f38f_1a506691019858e4dbe5c5b4477f73f38f" kindref="member">getRenderTargetOffscreen</ref>(<sp/>0u,<sp/><ref refid="texture__desc_8h_a6b4948cc0d12c93e6396540e02e2df58_1a6b4948cc0d12c93e6396540e02e2df58adf32226797485bb0becd7063638f54c5" kindref="member">RenderTargetViewMode::DefaultRT</ref><sp/>)-&gt;shareRenderTarget()<sp/>:<sp/>gfx.<ref refid="classGraphics_a937fe925bd73dc37c24c0b728fabacee_1a937fe925bd73dc37c24c0b728fabacee" kindref="member">getRenderTargetFromBackBuffer</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a97b542b21987b7df6560c3327f89e2aa_1a97b542b21987b7df6560c3327f89e2aa" kindref="member">m_pDsv</ref><sp/>=<sp/><ref refid="classren_1_1Renderer_af0aa20f264507605ced6ae4385799d8e_1af0aa20f264507605ced6ae4385799d8e" kindref="member">m_bUsesOffscreen</ref><sp/>?<sp/>gfx.<ref refid="classGraphics_a084646abddc266bd1098f7fec6fc6d93_1a084646abddc266bd1098f7fec6fc6d93" kindref="member">getDepthBufferOffscreen</ref>(<sp/>0u,<sp/><ref refid="texture__desc_8h_a5aacc2000fea78d975de8fe06e3698f2_1a5aacc2000fea78d975de8fe06e3698f2a968332242896839ab1a3ac1040c11ae9" kindref="member">DepthStencilViewMode::DefaultDS</ref><sp/>)-&gt;shareDepthBuffer()<sp/>:<sp/>gfx.<ref refid="classGraphics_aecb2784a1b3b55dd7b1f90f52cd09297_1aecb2784a1b3b55dd7b1f90f52cd09297" kindref="member">getDepthBufferFromBackBuffer</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_afefad320dd9bae3f7d22b382bfd1d5bc_1afefad320dd9bae3f7d22b382bfd1d5bc" kindref="member">addGlobalBinder</ref>(<sp/><ref refid="classren_1_1RenderSurfaceBinder" kindref="compound">RenderSurfaceBinder&lt;IRenderTargetView&gt;::make</ref>(<sp/></highlight><highlight class="stringliteral">&quot;backColorbuffer&quot;</highlight><highlight class="normal">,<sp/><ref refid="classren_1_1Renderer_a7b79ebe1dd8b11bb7f762152f8f57720_1a7b79ebe1dd8b11bb7f762152f8f57720" kindref="member">m_pRtv</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ac15c40de52d25e712c8f95b0b758114e_1ac15c40de52d25e712c8f95b0b758114e" kindref="member">addGlobalLinker</ref>(<sp/><ref refid="classren_1_1RenderSurfaceLinker" kindref="compound">RenderSurfaceLinker&lt;IRenderTargetView&gt;::make</ref>(<sp/></highlight><highlight class="stringliteral">&quot;backColorbuffer&quot;</highlight><highlight class="normal">,<sp/><ref refid="classren_1_1Renderer_a7b79ebe1dd8b11bb7f762152f8f57720_1a7b79ebe1dd8b11bb7f762152f8f57720" kindref="member">m_pRtv</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ac15c40de52d25e712c8f95b0b758114e_1ac15c40de52d25e712c8f95b0b758114e" kindref="member">addGlobalLinker</ref>(<sp/><ref refid="classren_1_1RenderSurfaceLinker" kindref="compound">RenderSurfaceLinker&lt;IDepthStencilView&gt;::make</ref>(<sp/></highlight><highlight class="stringliteral">&quot;backDepthBuffer&quot;</highlight><highlight class="normal">,<sp/><ref refid="classren_1_1Renderer_a97b542b21987b7df6560c3327f89e2aa_1a97b542b21987b7df6560c3327f89e2aa" kindref="member">m_pDsv</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;RenderSurfaceClearPass&gt;(<sp/></highlight><highlight class="stringliteral">&quot;clearRt&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;render_surface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;backColorbuffer&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;RenderSurfaceClearPass&gt;(<sp/></highlight><highlight class="stringliteral">&quot;clearDs&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;render_surface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;backDepthBuffer&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classren_1_1Renderer_ac15c40de52d25e712c8f95b0b758114e_1ac15c40de52d25e712c8f95b0b758114e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_ac15c40de52d25e712c8f95b0b758114e_1ac15c40de52d25e712c8f95b0b758114e" kindref="member">Renderer::addGlobalLinker</ref>(<sp/>std::unique_ptr&lt;ILinker&gt;<sp/>pLinker<sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ac111bc3886db540e5304924719e06fea_1ac111bc3886db540e5304924719e06fea" kindref="member">m_globalLinkers</ref>.emplace_back(<sp/>std::move(<sp/>pLinker<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classren_1_1Renderer_afefad320dd9bae3f7d22b382bfd1d5bc_1afefad320dd9bae3f7d22b382bfd1d5bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_afefad320dd9bae3f7d22b382bfd1d5bc_1afefad320dd9bae3f7d22b382bfd1d5bc" kindref="member">Renderer::addGlobalBinder</ref>(<sp/>std::unique_ptr&lt;IBinder&gt;<sp/>pBinder<sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a36dec28555a118fb8fda6da31b48f763_1a36dec28555a118fb8fda6da31b48f763" kindref="member">m_globalBinders</ref>.emplace_back(<sp/>std::move(<sp/>pBinder<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classren_1_1Renderer_a2d83d7207a80302f16ae4e8e082a572a_1a2d83d7207a80302f16ae4e8e082a572a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_a2d83d7207a80302f16ae4e8e082a572a_1a2d83d7207a80302f16ae4e8e082a572a" kindref="member">Renderer::run</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>m_bValidatedPasses,<sp/></highlight><highlight class="stringliteral">&quot;Renderer<sp/>is<sp/>not<sp/>validated!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bUsesOffscreen<sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfx.getRenderTargetFromBackBuffer()-&gt;clear(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfx.getDepthBufferFromBackBuffer()-&gt;clear(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pass<sp/>:<sp/>m_passes<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pass-&gt;isActive()<sp/>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;run(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>*renderQueuePass<sp/>=<sp/>dynamic_cast&lt;RenderQueuePass*&gt;(<sp/>pass.get()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>renderQueuePass<sp/>!=<sp/>nullptr<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>namespace<sp/>std::string_literals;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeyConsole<sp/>&amp;console<sp/>=<sp/>KeyConsole::getInstance();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>console.print(<sp/>pass-&gt;getName()<sp/>+<sp/>&quot;<sp/>&quot;s<sp/>+<sp/>std::to_string(<sp/>renderQueuePass-&gt;getJobCount()<sp/>)<sp/>+<sp/>&quot;\n&quot;s<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bUsesOffscreen<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offscreenToBackBufferSwap(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pFinalPostProcessPass-&gt;run(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classren_1_1Renderer_ab6665daa173077d48680689f6c1d3ecf_1ab6665daa173077d48680689f6c1d3ecf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_ab6665daa173077d48680689f6c1d3ecf_1ab6665daa173077d48680689f6c1d3ecf" kindref="member">Renderer::reset</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/><ref refid="classren_1_1Renderer_aa06e4a5dce3c714d10c78b5034215c65_1aa06e4a5dce3c714d10c78b5034215c65" kindref="member">m_bValidatedPasses</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Renderer<sp/>is<sp/>not<sp/>validated!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pass<sp/>:<sp/><ref refid="classren_1_1Renderer_af737ba7e14287ff34496ae7c9ba2cc3e_1af737ba7e14287ff34496ae7c9ba2cc3e" kindref="member">m_passes</ref><sp/>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;reset();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classren_1_1Renderer_af0aa20f264507605ced6ae4385799d8e_1af0aa20f264507605ced6ae4385799d8e" kindref="member">m_bUsesOffscreen</ref><sp/>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_abbbe922d48fe9c2f02cb2cf454bb3c96_1abbbe922d48fe9c2f02cb2cf454bb3c96" kindref="member">m_pFinalPostProcessPass</ref>-&gt;reset();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classren_1_1Renderer_adcff6686a1d6685acee17ebc9b9677d3_1adcff6686a1d6685acee17ebc9b9677d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_adcff6686a1d6685acee17ebc9b9677d3_1adcff6686a1d6685acee17ebc9b9677d3" kindref="member">Renderer::offscreenToBackBufferSwap</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>gfx.<ref refid="classGraphics_a937fe925bd73dc37c24c0b728fabacee_1a937fe925bd73dc37c24c0b728fabacee" kindref="member">getRenderTargetFromBackBuffer</ref>()-&gt;bindRenderSurface(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>gfx.<ref refid="classGraphics_a506691019858e4dbe5c5b4477f73f38f_1a506691019858e4dbe5c5b4477f73f38f" kindref="member">getRenderTargetOffscreen</ref>(<sp/>0u,<sp/><ref refid="texture__desc_8h_a6b4948cc0d12c93e6396540e02e2df58_1a6b4948cc0d12c93e6396540e02e2df58adf32226797485bb0becd7063638f54c5" kindref="member">RenderTargetViewMode::DefaultRT</ref><sp/>)-&gt;bind(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">Renderer::addPass</ref>(<sp/>std::unique_ptr&lt;IPass&gt;<sp/>pPass<sp/>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>!<ref refid="classren_1_1Renderer_aa06e4a5dce3c714d10c78b5034215c65_1aa06e4a5dce3c714d10c78b5034215c65" kindref="member">m_bValidatedPasses</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Renderer<sp/>is<sp/>already<sp/>validated!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a9ae7a8a655f01eb7bf44e63c27448f99_1a9ae7a8a655f01eb7bf44e63c27448f99" kindref="member">linkPassBinders</ref>(<sp/>*pPass<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>name<sp/>uniqueness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pa<sp/>:<sp/><ref refid="classren_1_1Renderer_af737ba7e14287ff34496ae7c9ba2cc3e_1af737ba7e14287ff34496ae7c9ba2cc3e" kindref="member">m_passes</ref><sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pa-&gt;getName()<sp/>==<sp/>pPass-&gt;getName()<sp/>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Pass<sp/>name<sp/>already<sp/>exists:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>pPass-&gt;getName()<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_af737ba7e14287ff34496ae7c9ba2cc3e_1af737ba7e14287ff34496ae7c9ba2cc3e" kindref="member">m_passes</ref>.emplace_back(<sp/>std::move(<sp/>pPass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classren_1_1Renderer_ac7031cf5bbcadcf0c7ce0cfe450a9711_1ac7031cf5bbcadcf0c7ce0cfe450a9711" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_ac7031cf5bbcadcf0c7ce0cfe450a9711_1ac7031cf5bbcadcf0c7ce0cfe450a9711" kindref="member">Renderer::setupGlobalBinderTarget</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;globalBinderName,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;passName,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;linkerName<sp/>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>passFinder<sp/>=<sp/>[&amp;globalBinderName](<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;IBinder&gt;&amp;<sp/>binder<sp/>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>binder-&gt;getName()<sp/>==<sp/>globalBinderName;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>binder<sp/>=<sp/>std::find_if(<sp/><ref refid="classren_1_1Renderer_a36dec28555a118fb8fda6da31b48f763_1a36dec28555a118fb8fda6da31b48f763" kindref="member">m_globalBinders</ref>.begin(),<sp/><ref refid="classren_1_1Renderer_a36dec28555a118fb8fda6da31b48f763_1a36dec28555a118fb8fda6da31b48f763" kindref="member">m_globalBinders</ref>.end(),<sp/>passFinder<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>binder<sp/>==<sp/><ref refid="classren_1_1Renderer_a36dec28555a118fb8fda6da31b48f763_1a36dec28555a118fb8fda6da31b48f763" kindref="member">m_globalBinders</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Global<sp/>binder<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>globalBinderName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>exist!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>(*binder)-&gt;setPassAndLinkerNames(<sp/>passName,<sp/>linkerName<sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classren_1_1Renderer_ac05409fe49000fe8f9a2eabed45b4757_1ac05409fe49000fe8f9a2eabed45b4757" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_ac05409fe49000fe8f9a2eabed45b4757_1ac05409fe49000fe8f9a2eabed45b4757" kindref="member">Renderer::validateBindersLinkage</ref>()</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>!<ref refid="classren_1_1Renderer_aa06e4a5dce3c714d10c78b5034215c65_1aa06e4a5dce3c714d10c78b5034215c65" kindref="member">m_bValidatedPasses</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Renderer<sp/>is<sp/>already<sp/>validated!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pass<sp/>:<sp/><ref refid="classren_1_1Renderer_af737ba7e14287ff34496ae7c9ba2cc3e_1af737ba7e14287ff34496ae7c9ba2cc3e" kindref="member">m_passes</ref><sp/>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;validate();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_aa06e4a5dce3c714d10c78b5034215c65_1aa06e4a5dce3c714d10c78b5034215c65" kindref="member">m_bValidatedPasses</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classren_1_1Renderer_a9ae7a8a655f01eb7bf44e63c27448f99_1a9ae7a8a655f01eb7bf44e63c27448f99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_a9ae7a8a655f01eb7bf44e63c27448f99_1a9ae7a8a655f01eb7bf44e63c27448f99" kindref="member">Renderer::linkPassBinders</ref>(<sp/><ref refid="classren_1_1IPass" kindref="compound">IPass</ref><sp/>&amp;targetPass<sp/>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;binder<sp/>:<sp/>targetPass.<ref refid="classren_1_1IPass_aebd5aa69455727600d0e979906a0a111_1aebd5aa69455727600d0e979906a0a111" kindref="member">getBinders</ref>()<sp/>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;binderPassName<sp/>=<sp/>binder-&gt;getPassName();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>binderPassName.empty()<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>pass<sp/>named<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>targetPass.<ref refid="classren_1_1IPass_a3c9f7768f492d9a50371acec9b61f12b_1a3c9f7768f492d9a50371acec9b61f12b" kindref="member">getName</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>binder<sp/>named<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>binder-&gt;getName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>has<sp/>no<sp/>target<sp/>linker<sp/>set.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/>oss.str()<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>binder<sp/>is<sp/>global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>binderPassName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bLinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;globalLinker<sp/>:<sp/><ref refid="classren_1_1Renderer_ac111bc3886db540e5304924719e06fea_1ac111bc3886db540e5304924719e06fea" kindref="member">m_globalLinkers</ref><sp/>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>globalLinker-&gt;getName()<sp/>==<sp/>binder-&gt;getLinkerName()<sp/>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binder-&gt;link(<sp/>*globalLinker<sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bLinked<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!bLinked<sp/>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Linker<sp/>named<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>binder-&gt;getLinkerName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>not<sp/>a<sp/>global&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/>oss.str()<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>find<sp/>linker<sp/>from<sp/>within<sp/>existing<sp/>passes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bLinked<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pass<sp/>:<sp/><ref refid="classren_1_1Renderer_af737ba7e14287ff34496ae7c9ba2cc3e_1af737ba7e14287ff34496ae7c9ba2cc3e" kindref="member">m_passes</ref><sp/>)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pass-&gt;getName()<sp/>==<sp/>binderPassName<sp/>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;linker<sp/>=<sp/>pass-&gt;getLinker(<sp/>binder-&gt;getLinkerName()<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binder-&gt;link(<sp/>linker<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bLinked<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!bLinked<sp/>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pass<sp/>named<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>binderPassName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>not<sp/>found&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/>oss.str()<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classren_1_1Renderer_a007187fada4994fb8912be70dcc4aa1f_1a007187fada4994fb8912be70dcc4aa1f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_a007187fada4994fb8912be70dcc4aa1f_1a007187fada4994fb8912be70dcc4aa1f" kindref="member">Renderer::linkGlobalBinders</ref>()</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ac05409fe49000fe8f9a2eabed45b4757_1ac05409fe49000fe8f9a2eabed45b4757" kindref="member">validateBindersLinkage</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;binder<sp/>:<sp/><ref refid="classren_1_1Renderer_a36dec28555a118fb8fda6da31b48f763_1a36dec28555a118fb8fda6da31b48f763" kindref="member">m_globalBinders</ref><sp/>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;binderPassName<sp/>=<sp/>binder-&gt;getPassName();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pass<sp/>:<sp/><ref refid="classren_1_1Renderer_af737ba7e14287ff34496ae7c9ba2cc3e_1af737ba7e14287ff34496ae7c9ba2cc3e" kindref="member">m_passes</ref><sp/>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pass-&gt;getName()<sp/>==<sp/>binderPassName<sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;linker<sp/>=<sp/>pass-&gt;getLinker(<sp/>binder-&gt;getLinkerName()<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binder-&gt;link(<sp/>linker<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="classren_1_1Renderer_a12d7d108754fc228d0c157b350f965d7_1a12d7d108754fc228d0c157b350f965d7" refkind="member"><highlight class="normal"><ref refid="classren_1_1IPass" kindref="compound">IPass</ref>&amp;<sp/><ref refid="classren_1_1Renderer_a12d7d108754fc228d0c157b350f965d7_1a12d7d108754fc228d0c157b350f965d7" kindref="member">ren::Renderer::getPass</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name<sp/>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>finder<sp/>=<sp/>std::find_if(<sp/>m_passes.begin(),<sp/>m_passes.end(),</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;name](<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pass<sp/>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>pass-&gt;getName()<sp/>==<sp/>name;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>finder<sp/>==<sp/>m_passes.end()<sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Pass<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>not<sp/>found<sp/>in<sp/>Renderer!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>**finder;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classren_1_1Renderer_a9cb92496179a0e4d85037ce03ee07475_1a9cb92496179a0e4d85037ce03ee07475" refkind="member"><highlight class="normal"><ref refid="classren_1_1RenderQueuePass" kindref="compound">RenderQueuePass</ref>&amp;<sp/><ref refid="classren_1_1Renderer_a9cb92496179a0e4d85037ce03ee07475_1a9cb92496179a0e4d85037ce03ee07475" kindref="member">Renderer::getRenderQueuePass</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pass<sp/>:<sp/><ref refid="classren_1_1Renderer_af737ba7e14287ff34496ae7c9ba2cc3e_1af737ba7e14287ff34496ae7c9ba2cc3e" kindref="member">m_passes</ref><sp/>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pass-&gt;getName()<sp/>==<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1RenderQueuePass" kindref="compound">RenderQueuePass</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>*pass<sp/>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(<sp/>std::bad_cast<sp/>&amp;ex<sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)ex;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Renderer::getRenderQueuePass<sp/>pass<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>was<sp/>not<sp/>a<sp/>RenderQueuePass&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Renderer::getRenderQueuePass<sp/>pass<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>was<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="classren_1_1Renderer_a810fc6594a4b225e51e54aed0b28dcf6_1a810fc6594a4b225e51e54aed0b28dcf6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_a810fc6594a4b225e51e54aed0b28dcf6_1a810fc6594a4b225e51e54aed0b28dcf6" kindref="member">Renderer::isUsingOffscreenRendering</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer_af0aa20f264507605ced6ae4385799d8e_1af0aa20f264507605ced6ae4385799d8e" kindref="member">m_bUsesOffscreen</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="classren_1_1Renderer3d_a95bf42dec813b7c1791f14c6202a5b91_1a95bf42dec813b7c1791f14c6202a5b91" refkind="member"><highlight class="normal"><ref refid="classren_1_1Renderer3d_a95bf42dec813b7c1791f14c6202a5b91_1a95bf42dec813b7c1791f14c6202a5b91" kindref="member">Renderer3d::Renderer3d</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bDrawToOffscreen,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radius,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sigma,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_ae2c39885efb402209cdb881c6b78c9ab_1ae2c39885efb402209cdb881c6b78c9ab" kindref="member">KernelType</ref><sp/>kernelType<sp/></highlight><highlight class="comment">/*=<sp/>Gauss*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer" kindref="compound">Renderer</ref>{gfx,<sp/>bDrawToOffscreen},</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>m_radius(radius),</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>m_sigma(sigma),</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>m_kernelType{kernelType}</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer3d_afd4dabebdfcf0485228c750bbb227372_1afd4dabebdfcf0485228c750bbb227372" kindref="member">recreate</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="classren_1_1Renderer3d_afd4dabebdfcf0485228c750bbb227372_1afd4dabebdfcf0485228c750bbb227372" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_afd4dabebdfcf0485228c750bbb227372_1afd4dabebdfcf0485228c750bbb227372" kindref="member">Renderer3d::recreate</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ae20ba92f5c1d98a6bcb0a04e258991f4_1ae20ba92f5c1d98a6bcb0a04e258991f4" kindref="member">Renderer::recreate</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;ShadowPass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;shadow&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;OpaquePass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;opaque&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;clearRt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;render_surface&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;clearDs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;render_surface&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;offscreenShadowmapIn&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shadow&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;offscreenShadowmapOut&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;offscreenShadowCubemapIn&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shadow&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;offscreenShadowCubemapOut&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;SkyPass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;sky&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;opaque&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;opaque&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;BlurOutlineMaskPass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;blurOutlineMask&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sky&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;BlurOutlineDrawPass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;blurOutlineDraw&quot;</highlight><highlight class="normal">,<sp/><ref refid="classren_1_1Renderer3d_aab6dcc7e7d45fe5eb6402db705906f75_1aab6dcc7e7d45fe5eb6402db705906f75" kindref="member">s_fullscreenRezReductFactor</ref><sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setup<sp/>blur<sp/>global<sp/>PCBuffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>layout;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Integer&gt;(<sp/></highlight><highlight class="stringliteral">&quot;nTaps&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;coefficients&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout[</highlight><highlight class="stringliteral">&quot;coefficients&quot;</highlight><highlight class="normal">].set&lt;con::Float&gt;(<sp/><ref refid="classren_1_1Renderer3d_ab7542e4e9db4924e29660e6d86145458_1ab7542e4e9db4924e29660e6d86145458" kindref="member">s_maxRadius</ref><sp/>*<sp/>2<sp/>+<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref><sp/>cb{std::move(<sp/>layout<sp/>)};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer3d_a8769e329ec9485bc66776daa73c1048d_1a8769e329ec9485bc66776daa73c1048d" kindref="member">m_blurKernel</ref><sp/>=<sp/>std::make_shared&lt;PixelShaderConstantBufferEx&gt;(<sp/>gfx,<sp/>0u,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer3d_a4fdb00f4231e140956203b65b13555f2_1a4fdb00f4231e140956203b65b13555f2" kindref="member">setKernelGauss</ref>(<sp/><ref refid="classren_1_1Renderer3d_acd91a9d5e15585a1241a09f85226b432_1acd91a9d5e15585a1241a09f85226b432" kindref="member">m_radius</ref>,<sp/><ref refid="classren_1_1Renderer3d_a73a21fa8372ab12e1c4b435eaa3ef837_1a73a21fa8372ab12e1c4b435eaa3ef837" kindref="member">m_sigma</ref><sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ac15c40de52d25e712c8f95b0b758114e_1ac15c40de52d25e712c8f95b0b758114e" kindref="member">addGlobalLinker</ref>(<sp/><ref refid="classren_1_1BindableLinker" kindref="compound">BindableLinker&lt;PixelShaderConstantBufferEx&gt;::make</ref>(<sp/></highlight><highlight class="stringliteral">&quot;blurKernel&quot;</highlight><highlight class="normal">,<sp/><ref refid="classren_1_1Renderer3d_a8769e329ec9485bc66776daa73c1048d_1a8769e329ec9485bc66776daa73c1048d" kindref="member">m_blurKernel</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>layout;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Bool&gt;(<sp/></highlight><highlight class="stringliteral">&quot;bHorizontal&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref><sp/>cb{std::move(<sp/>layout<sp/>)};</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer3d_a2d026c77a600dbd1b3ddfebdcfaf2e15_1a2d026c77a600dbd1b3ddfebdcfaf2e15" kindref="member">m_blurDirection</ref><sp/>=<sp/>std::make_shared&lt;PixelShaderConstantBufferEx&gt;(<sp/>gfx,<sp/>1u,<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ac15c40de52d25e712c8f95b0b758114e_1ac15c40de52d25e712c8f95b0b758114e" kindref="member">addGlobalLinker</ref>(<sp/><ref refid="classren_1_1BindableLinker" kindref="compound">BindableLinker&lt;PixelShaderConstantBufferEx&gt;::make</ref>(<sp/></highlight><highlight class="stringliteral">&quot;blurDirection&quot;</highlight><highlight class="normal">,<sp/><ref refid="classren_1_1Renderer3d_a2d026c77a600dbd1b3ddfebdcfaf2e15_1a2d026c77a600dbd1b3ddfebdcfaf2e15" kindref="member">m_blurDirection</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;HorizontalBlurPass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;horizontalBlur&quot;</highlight><highlight class="normal">,<sp/><ref refid="classren_1_1Renderer3d_aab6dcc7e7d45fe5eb6402db705906f75_1aab6dcc7e7d45fe5eb6402db705906f75" kindref="member">s_fullscreenRezReductFactor</ref><sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;offscreenBlurOutlineIn&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;blurOutlineDraw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;offscreenBlurOutlineOut&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;blurKernel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;blurKernel&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;blurDirection&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;blurDirection&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;VerticalBlurPass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;verticalBlur&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;sky&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;blurOutlineMask&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;offscreenBlurOutlineIn&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;horizontalBlur&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;offscreenBlurOutlineOut&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;blurKernel&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;blurKernel&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;blurDirection&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;blurDirection&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;SolidOutlineMaskPass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;solidOutlineMask&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;verticalBlur&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;verticalBlur&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;SolidOutlineDrawPass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;solidOutlineDraw&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;solidOutlineMask&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;solidOutlineMask&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;DepthReversedPass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;depthReversed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;solidOutlineDraw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;solidOutlineDraw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;WireframePass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;wireframe&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depthReversed&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depthReversed&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;TransparentPass&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;transparent&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wireframe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wireframe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ac7031cf5bbcadcf0c7ce0cfe450a9711_1ac7031cf5bbcadcf0c7ce0cfe450a9711" kindref="member">setupGlobalBinderTarget</ref>(<sp/></highlight><highlight class="stringliteral">&quot;backColorbuffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;transparent&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a007187fada4994fb8912be70dcc4aa1f_1a007187fada4994fb8912be70dcc4aa1f" kindref="member">Renderer::linkGlobalBinders</ref>();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classren_1_1Renderer_af0aa20f264507605ced6ae4385799d8e_1af0aa20f264507605ced6ae4385799d8e" kindref="member">m_bUsesOffscreen</ref><sp/>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_pFinalPostProcessPass<sp/>=<sp/>std::make_unique&lt;ren::BlurPass&gt;(<sp/>gfx,<sp/>&quot;blur&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_pFinalPostProcessPass<sp/>=<sp/>std::make_unique&lt;ren::NegativePass&gt;(<sp/>gfx,<sp/>&quot;negative&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_abbbe922d48fe9c2f02cb2cf454bb3c96_1abbbe922d48fe9c2f02cb2cf454bb3c96" kindref="member">m_pFinalPostProcessPass</ref><sp/>=<sp/>std::make_unique&lt;ren::PassThrough&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;passthrough&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="classren_1_1Renderer3d_a20dbdf95b09beca6a94150c8f4f7466f_1a20dbdf95b09beca6a94150c8f4f7466f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_a20dbdf95b09beca6a94150c8f4f7466f_1a20dbdf95b09beca6a94150c8f4f7466f" kindref="member">Renderer3d::displayImguiWidgets</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>showShadowDumpImguiWindow(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>showGaussianBlurImguiWindow(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>showDisplayMode(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1SkyPass" kindref="compound">SkyPass</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>getPass(<sp/></highlight><highlight class="stringliteral">&quot;sky&quot;</highlight><highlight class="normal"><sp/>)<sp/>).displayImguiWidgets();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="classren_1_1Renderer3d_ab1e547948ad21a54ae83a79bf57b9e3c_1ab1e547948ad21a54ae83a79bf57b9e3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_ab1e547948ad21a54ae83a79bf57b9e3c_1ab1e547948ad21a54ae83a79bf57b9e3c" kindref="member">Renderer3d::showShadowDumpImguiWindow</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ImGui::Begin(<sp/></highlight><highlight class="stringliteral">&quot;Shadow&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ImGui::Button(<sp/></highlight><highlight class="stringliteral">&quot;Dump<sp/>Shadow<sp/>TextureCubeArray&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dumpShadowCubeMap(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;dumps/shadow_&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ImGui::Button(<sp/></highlight><highlight class="stringliteral">&quot;Dump<sp/>Shadow<sp/>Texture2DArray&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dumpShadowMap(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;dumps/shadow_&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::End();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="classren_1_1Renderer3d_af82d74185f3ce6de94ab42ac468c9ee8_1af82d74185f3ce6de94ab42ac468c9ee8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_af82d74185f3ce6de94ab42ac468c9ee8_1af82d74185f3ce6de94ab42ac468c9ee8" kindref="member">Renderer3d::showGaussianBlurImguiWindow</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ImGui::Begin(<sp/></highlight><highlight class="stringliteral">&quot;Blur<sp/>Kernel&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFilterChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*blurKernelMethodNames[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;Gauss&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Box&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*selectedMethod<sp/>=<sp/>blurKernelMethodNames[0];</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ImGui::BeginCombo(<sp/></highlight><highlight class="stringliteral">&quot;Method&quot;</highlight><highlight class="normal">,<sp/>selectedMethod<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>std::size(<sp/>blurKernelMethodNames<sp/>);<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSelected<sp/>=<sp/>selectedMethod<sp/>==<sp/>blurKernelMethodNames[i];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ImGui::Selectable(<sp/>blurKernelMethodNames[i],<sp/>bSelected<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bFilterChanged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectedMethod<sp/>=<sp/>blurKernelMethodNames[i];</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>selectedMethod<sp/>==<sp/>blurKernelMethodNames[0]<sp/>)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_kernelType<sp/>=<sp/>Gauss;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>selectedMethod<sp/>==<sp/>blurKernelMethodNames[1]<sp/>)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_kernelType<sp/>=<sp/>Box;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bSelected<sp/>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::SetItemDefaultFocus();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::EndCombo();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bRadiusChanged<sp/>=<sp/>ImGui::SliderInt(<sp/></highlight><highlight class="stringliteral">&quot;Radius&quot;</highlight><highlight class="normal">,<sp/>&amp;m_radius,<sp/>0,<sp/>s_maxRadius<sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSigmaChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_kernelType<sp/>==<sp/>Gauss<sp/>)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bSigmaChanged<sp/>=<sp/>ImGui::SliderFloat(<sp/></highlight><highlight class="stringliteral">&quot;Sigma&quot;</highlight><highlight class="normal">,<sp/>&amp;m_sigma,<sp/>0.1f,<sp/>s_maxSigma<sp/>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bRadiusChanged<sp/>||<sp/>bSigmaChanged<sp/>||<sp/>bFilterChanged<sp/>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_kernelType<sp/>==<sp/>Gauss<sp/>)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setKernelGauss(<sp/>m_radius,<sp/>m_sigma<sp/>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_kernelType<sp/>==<sp/>Box<sp/>)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setKernelBox(<sp/>m_radius<sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::End();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="classren_1_1Renderer3d_aebbd99d61a4bd8e7412fb7e9048e1892_1aebbd99d61a4bd8e7412fb7e9048e1892" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_aebbd99d61a4bd8e7412fb7e9048e1892_1aebbd99d61a4bd8e7412fb7e9048e1892" kindref="member">ren::Renderer3d::showDisplayMode</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dirtyCheck<sp/>=<sp/>[&amp;bDirty](<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bChanged<sp/>)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bDirty<sp/>=<sp/>bDirty<sp/>||<sp/>bChanged;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ImGui::Begin(<sp/></highlight><highlight class="stringliteral">&quot;Display<sp/>Mode&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirtyCheck(<sp/>ImGui::Checkbox(<sp/></highlight><highlight class="stringliteral">&quot;Fullscreen&quot;</highlight><highlight class="normal">,<sp/>&amp;gfx.getDisplayMode()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::End();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bDirty<sp/>)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gfx.getDisplayMode()<sp/>)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfx.resize(<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfx.resize(<sp/>1600,<sp/>900<sp/>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="classren_1_1Renderer3d_acddc17f633ab9b1ff8e10b44fe564c49_1acddc17f633ab9b1ff8e10b44fe564c49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_acddc17f633ab9b1ff8e10b44fe564c49_1acddc17f633ab9b1ff8e10b44fe564c49" kindref="member">ren::Renderer3d::setActiveCamera</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCamera" kindref="compound">Camera</ref><sp/>&amp;cam<sp/>)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1OpaquePass" kindref="compound">OpaquePass</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>getPass(<sp/></highlight><highlight class="stringliteral">&quot;opaque&quot;</highlight><highlight class="normal"><sp/>)<sp/>).setActiveCamera(<sp/>cam<sp/>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1TransparentPass" kindref="compound">TransparentPass</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>getPass(<sp/></highlight><highlight class="stringliteral">&quot;transparent&quot;</highlight><highlight class="normal"><sp/>)<sp/>).setActiveCamera(<sp/>cam<sp/>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="classren_1_1Renderer3d_a659726953a58885d70e1f74a5da7b278_1a659726953a58885d70e1f74a5da7b278" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_a659726953a58885d70e1f74a5da7b278_1a659726953a58885d70e1f74a5da7b278" kindref="member">ren::Renderer3d::bindShadowCastingLights</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ILightSource*&gt;<sp/>&amp;shadowCastingLights<sp/>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1ShadowPass" kindref="compound">ShadowPass</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>getPass(<sp/></highlight><highlight class="stringliteral">&quot;shadow&quot;</highlight><highlight class="normal"><sp/>)<sp/>).bindShadowCastingLights(<sp/>gfx,<sp/>shadowCastingLights<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="classren_1_1Renderer3d_a90523c608900e18480728a104a04a88d_1a90523c608900e18480728a104a04a88d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_a90523c608900e18480728a104a04a88d_1a90523c608900e18480728a104a04a88d" kindref="member">Renderer3d::dumpShadowMap</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;path<sp/>)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1ShadowPass" kindref="compound">ShadowPass</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classren_1_1Renderer_a12d7d108754fc228d0c157b350f965d7_1a12d7d108754fc228d0c157b350f965d7" kindref="member">getPass</ref>(<sp/></highlight><highlight class="stringliteral">&quot;shadow&quot;</highlight><highlight class="normal"><sp/>)<sp/>).<ref refid="classren_1_1Renderer3d_a90523c608900e18480728a104a04a88d_1a90523c608900e18480728a104a04a88d" kindref="member">dumpShadowMap</ref>(<sp/>gfx,<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="classren_1_1Renderer3d_abb77f1f6e2ab72d9c834f30443b4ee9b_1abb77f1f6e2ab72d9c834f30443b4ee9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_abb77f1f6e2ab72d9c834f30443b4ee9b_1abb77f1f6e2ab72d9c834f30443b4ee9b" kindref="member">Renderer3d::dumpShadowCubeMap</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;path<sp/>)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1ShadowPass" kindref="compound">ShadowPass</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classren_1_1Renderer_a12d7d108754fc228d0c157b350f965d7_1a12d7d108754fc228d0c157b350f965d7" kindref="member">getPass</ref>(<sp/></highlight><highlight class="stringliteral">&quot;shadow&quot;</highlight><highlight class="normal"><sp/>)<sp/>).<ref refid="classren_1_1Renderer3d_abb77f1f6e2ab72d9c834f30443b4ee9b_1abb77f1f6e2ab72d9c834f30443b4ee9b" kindref="member">dumpShadowCubeMap</ref>(<sp/>gfx,<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="classren_1_1Renderer3d_a4fdb00f4231e140956203b65b13555f2_1a4fdb00f4231e140956203b65b13555f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_a4fdb00f4231e140956203b65b13555f2_1a4fdb00f4231e140956203b65b13555f2" kindref="member">Renderer3d::setKernelGauss</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radius,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sigma<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="569"><highlight class="normal">{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>radius<sp/>&lt;=<sp/>s_maxRadius,<sp/></highlight><highlight class="stringliteral">&quot;Blur<sp/>Kernel<sp/>radius<sp/>is<sp/>over<sp/>the<sp/>max!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>sigma<sp/>&lt;=<sp/>s_maxSigma,<sp/></highlight><highlight class="stringliteral">&quot;Blur<sp/>Kernel<sp/>sigma<sp/>is<sp/>over<sp/>the<sp/>max!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/>m_blurKernel-&gt;getBufferCopy();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTaps<sp/>=<sp/>radius<sp/>*<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;nTaps&quot;</highlight><highlight class="normal">]<sp/>=<sp/>nTaps;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nTaps;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>float(<sp/>i<sp/>-<sp/>radius<sp/>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>coef<sp/>=<sp/><ref refid="namespaceutil_ac8a2092a72d02aa310e114fc79673f57_1ac8a2092a72d02aa310e114fc79673f57" kindref="member">util::gaussian1d</ref>(<sp/>x,<sp/>sigma<sp/>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>coef;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;coefficients&quot;</highlight><highlight class="normal">][i]<sp/>=<sp/>coef;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>div<sp/>by<sp/>the<sp/>weighted<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nTaps;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;coefficients&quot;</highlight><highlight class="normal">][i]<sp/>=<sp/>(float)cb[</highlight><highlight class="stringliteral">&quot;coefficients&quot;</highlight><highlight class="normal">][i]<sp/>/<sp/>sum;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>m_blurKernel-&gt;setBuffer(<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="classren_1_1Renderer3d_ae87044036a711bc316181e99b116170c_1ae87044036a711bc316181e99b116170c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer3d_ae87044036a711bc316181e99b116170c_1ae87044036a711bc316181e99b116170c" kindref="member">Renderer3d::setKernelBox</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radius<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>radius<sp/>&lt;=<sp/>s_maxRadius,<sp/></highlight><highlight class="stringliteral">&quot;Blur<sp/>Kernel<sp/>radius<sp/>is<sp/>over<sp/>the<sp/>max!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/>m_blurKernel-&gt;getBufferCopy();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTaps<sp/>=<sp/>radius<sp/>*<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;nTaps&quot;</highlight><highlight class="normal">]<sp/>=<sp/>nTaps;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>1.0f<sp/>/<sp/>nTaps;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nTaps;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;coefficients&quot;</highlight><highlight class="normal">][i]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>m_blurKernel-&gt;setBuffer(<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="classren_1_1Renderer2d_a8e7530c00c6cecb780698c8bf8e5f568_1a8e7530c00c6cecb780698c8bf8e5f568" refkind="member"><highlight class="normal"><ref refid="classren_1_1Renderer2d_a8e7530c00c6cecb780698c8bf8e5f568_1a8e7530c00c6cecb780698c8bf8e5f568" kindref="member">Renderer2d::Renderer2d</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer" kindref="compound">Renderer</ref>{gfx,<sp/>false}</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer2d_a910d5e8a5d26cdc2c4eaf7a30dd304af_1a910d5e8a5d26cdc2c4eaf7a30dd304af" kindref="member">recreate</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="classren_1_1Renderer2d_a910d5e8a5d26cdc2c4eaf7a30dd304af_1a910d5e8a5d26cdc2c4eaf7a30dd304af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1Renderer2d_a910d5e8a5d26cdc2c4eaf7a30dd304af_1a910d5e8a5d26cdc2c4eaf7a30dd304af" kindref="member">Renderer2d::recreate</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight></codeline>
<codeline lineno="617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ae20ba92f5c1d98a6bcb0a04e258991f4_1ae20ba92f5c1d98a6bcb0a04e258991f4" kindref="member">Renderer::recreate</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pass<sp/>=<sp/>std::make_unique&lt;Pass2D&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;pass2d&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;clearRt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;render_surface&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass-&gt;setupBinderTarget(<sp/></highlight><highlight class="stringliteral">&quot;depthStencil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;clearDs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;render_surface&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a5a6320465c595b0b1bddd2c330678d88_1a5a6320465c595b0b1bddd2c330678d88" kindref="member">addPass</ref>(<sp/>std::move(<sp/>pass<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_ac7031cf5bbcadcf0c7ce0cfe450a9711_1ac7031cf5bbcadcf0c7ce0cfe450a9711" kindref="member">setupGlobalBinderTarget</ref>(<sp/></highlight><highlight class="stringliteral">&quot;backColorbuffer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pass2d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;renderTarget&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1Renderer_a007187fada4994fb8912be70dcc4aa1f_1a007187fada4994fb8912be70dcc4aa1f" kindref="member">Renderer::linkGlobalBinders</ref>();</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight><highlight class="comment">//ren</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/renderer.cpp"/>
  </compounddef>
</doxygen>
