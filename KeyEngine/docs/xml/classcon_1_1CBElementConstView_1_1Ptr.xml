<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcon_1_1CBElementConstView_1_1Ptr" kind="class" language="C++" prot="public">
    <compoundname>con::CBElementConstView::Ptr</compoundname>
    <includes refid="dynamic__constant__buffer_8h" local="no">dynamic_constant_buffer.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcon_1_1CBElementConstView_1_1Ptr_af3f6ab792c90294c60545d27512b6b8c_1af3f6ab792c90294c60545d27512b6b8c" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend con::CBElementConstView::Ptr::CBElementConstView</definition>
        <argsstring></argsstring>
        <name>CBElementConstView</name>
        <qualifiedname>con::CBElementConstView::Ptr::CBElementConstView</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="360" column="8" bodyfile="inc/dynamic_constant_buffer.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcon_1_1CBElementConstView_1_1Ptr_acf17c4337157046b98b7a2c70452f226_1acf17c4337157046b98b7a2c70452f226" prot="private" static="no" mutable="no">
        <type>const <ref refid="classcon_1_1CBElementConstView" kindref="compound">CBElementConstView</ref> *</type>
        <definition>const CBElementConstView* con::CBElementConstView::Ptr::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <qualifiedname>con::CBElementConstView::Ptr::p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="362" column="26" bodyfile="inc/dynamic_constant_buffer.h" bodystart="362" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcon_1_1CBElementConstView_1_1Ptr_a756b91d8ac50b71fbb8d67a28eb38e15_1a756b91d8ac50b71fbb8d67a28eb38e15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>con::CBElementConstView::Ptr::operator const T *</definition>
        <argsstring>() const cond_noex</argsstring>
        <name>operator const T *</name>
        <qualifiedname>con::CBElementConstView::Ptr::operator const T *</qualifiedname>
        <briefdescription>
<para>conversion for getting read-only pointer to supported CPUType </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="366" column="1" bodyfile="inc/dynamic_constant_buffer.h" bodystart="366" bodyend="370"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classcon_1_1CBElementConstView_1_1Ptr_ab3ddfb4814234faed58b0e2dc28a6492_1ab3ddfb4814234faed58b0e2dc28a6492" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>con::CBElementConstView::Ptr::Ptr</definition>
        <argsstring>(const CBElementConstView *ref) noexcept</argsstring>
        <name>Ptr</name>
        <qualifiedname>con::CBElementConstView::Ptr::Ptr</qualifiedname>
        <param>
          <type>const <ref refid="classcon_1_1CBElementConstView" kindref="compound">CBElementConstView</ref> *</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="372" column="1" bodyfile="src/dynamic_constant_buffer.cpp" bodystart="371" bodyend="376"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>emitted when you use addressof on the Ref </para>
    </briefdescription>
    <detaileddescription>
<para>it allows conversion to pointer, useful for using Buffer elements with ImGui widget functions etc. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>con::CBElement</label>
        <link refid="classcon_1_1CBElement"/>
      </node>
      <node id="2">
        <label>con::CBElementConstView</label>
        <link refid="classcon_1_1CBElementConstView"/>
        <childnode refid="3" relation="usage">
          <edgelabel>pLayout</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>con::CBElementConstView::Ptr</label>
        <link refid="classcon_1_1CBElementConstView_1_1Ptr"/>
        <childnode refid="2" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/dynamic_constant_buffer.h" line="358" column="1" bodyfile="inc/dynamic_constant_buffer.h" bodystart="359" bodyend="373"/>
    <listofallmembers>
      <member refid="classcon_1_1CBElementConstView_1_1Ptr_af3f6ab792c90294c60545d27512b6b8c_1af3f6ab792c90294c60545d27512b6b8c" prot="private" virt="non-virtual"><scope>con::CBElementConstView::Ptr</scope><name>CBElementConstView</name></member>
      <member refid="classcon_1_1CBElementConstView_1_1Ptr_a756b91d8ac50b71fbb8d67a28eb38e15_1a756b91d8ac50b71fbb8d67a28eb38e15" prot="public" virt="non-virtual"><scope>con::CBElementConstView::Ptr</scope><name>operator const T *</name></member>
      <member refid="classcon_1_1CBElementConstView_1_1Ptr_acf17c4337157046b98b7a2c70452f226_1acf17c4337157046b98b7a2c70452f226" prot="private" virt="non-virtual"><scope>con::CBElementConstView::Ptr</scope><name>p</name></member>
      <member refid="classcon_1_1CBElementConstView_1_1Ptr_ab3ddfb4814234faed58b0e2dc28a6492_1ab3ddfb4814234faed58b0e2dc28a6492" prot="private" virt="non-virtual"><scope>con::CBElementConstView::Ptr</scope><name>Ptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
