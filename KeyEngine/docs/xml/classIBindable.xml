<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classIBindable" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>IBindable</compoundname>
    <basecompoundref refid="classGraphicsFriend" prot="public" virt="non-virtual">GraphicsFriend</basecompoundref>
    <derivedcompoundref refid="classIConstantBuffer" prot="public" virt="non-virtual">IConstantBuffer&lt; ren::ShadowPass::GlobalsVSCB &gt;</derivedcompoundref>
    <derivedcompoundref refid="classIConstantBuffer" prot="public" virt="non-virtual">IConstantBuffer&lt; ren::ShadowPass::GlobalsPSCB &gt;</derivedcompoundref>
    <derivedcompoundref refid="classIConstantBuffer" prot="public" virt="non-virtual">IConstantBuffer&lt; LightsVSCB &gt;</derivedcompoundref>
    <derivedcompoundref refid="classIConstantBuffer" prot="public" virt="non-virtual">IConstantBuffer&lt; LightsPSCB &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBlendState" prot="public" virt="non-virtual">BlendState</derivedcompoundref>
    <derivedcompoundref refid="classCubeTexture" prot="public" virt="non-virtual">CubeTexture</derivedcompoundref>
    <derivedcompoundref refid="classCubeTextureArrayOffscreenDS" prot="public" virt="non-virtual">CubeTextureArrayOffscreenDS</derivedcompoundref>
    <derivedcompoundref refid="classCubeTextureOffscreenDS" prot="public" virt="non-virtual">CubeTextureOffscreenDS</derivedcompoundref>
    <derivedcompoundref refid="classCubeTextureOffscreenRT" prot="public" virt="non-virtual">CubeTextureOffscreenRT</derivedcompoundref>
    <derivedcompoundref refid="classDepthStencilState" prot="public" virt="non-virtual">DepthStencilState</derivedcompoundref>
    <derivedcompoundref refid="classIBindableCloning" prot="public" virt="non-virtual">IBindableCloning</derivedcompoundref>
    <derivedcompoundref refid="classIConstantBuffer" prot="public" virt="non-virtual">IConstantBuffer&lt; CB &gt;</derivedcompoundref>
    <derivedcompoundref refid="classIConstantBufferEx" prot="public" virt="non-virtual">IConstantBufferEx</derivedcompoundref>
    <derivedcompoundref refid="classIDepthStencilView" prot="public" virt="non-virtual">IDepthStencilView</derivedcompoundref>
    <derivedcompoundref refid="classIRenderTargetView" prot="public" virt="non-virtual">IRenderTargetView</derivedcompoundref>
    <derivedcompoundref refid="classIndexBuffer" prot="public" virt="non-virtual">IndexBuffer</derivedcompoundref>
    <derivedcompoundref refid="classInputLayout" prot="public" virt="non-virtual">InputLayout</derivedcompoundref>
    <derivedcompoundref refid="classPixelShader" prot="public" virt="non-virtual">PixelShader</derivedcompoundref>
    <derivedcompoundref refid="classPixelShaderNull" prot="public" virt="non-virtual">PixelShaderNull</derivedcompoundref>
    <derivedcompoundref refid="classPrimitiveTopology" prot="public" virt="non-virtual">PrimitiveTopology</derivedcompoundref>
    <derivedcompoundref refid="classRasterizerState" prot="public" virt="non-virtual">RasterizerState</derivedcompoundref>
    <derivedcompoundref refid="classSkyVSCB" prot="public" virt="non-virtual">SkyVSCB</derivedcompoundref>
    <derivedcompoundref refid="classTexture" prot="public" virt="non-virtual">Texture</derivedcompoundref>
    <derivedcompoundref refid="classTextureArrayOffscreenDS" prot="public" virt="non-virtual">TextureArrayOffscreenDS</derivedcompoundref>
    <derivedcompoundref refid="classTextureOffscreenDS" prot="public" virt="non-virtual">TextureOffscreenDS</derivedcompoundref>
    <derivedcompoundref refid="classTextureOffscreenRT" prot="public" virt="non-virtual">TextureOffscreenRT</derivedcompoundref>
    <derivedcompoundref refid="classTextureSamplerState" prot="public" virt="non-virtual">TextureSamplerState</derivedcompoundref>
    <derivedcompoundref refid="classVertexBuffer" prot="public" virt="non-virtual">VertexBuffer</derivedcompoundref>
    <derivedcompoundref refid="classVertexShader" prot="public" virt="non-virtual">VertexShader</derivedcompoundref>
    <derivedcompoundref refid="classViewport" prot="public" virt="non-virtual">Viewport</derivedcompoundref>
    <includes refid="bindable_8h" local="no">bindable.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classIBindable_a7f68262ff85e25e9f826eae7c01bbfa1_1a7f68262ff85e25e9f826eae7c01bbfa1" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type></type>
        <definition>virtual IBindable::~IBindable</definition>
        <argsstring>() noexcept</argsstring>
        <name>~IBindable</name>
        <qualifiedname>IBindable::~IBindable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/bindable.h" line="22" column="9" bodyfile="inc/bindable.h" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classIBindable_add4560f78e76629ee81ba701ba1052e1_1add4560f78e76629ee81ba701ba1052e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void IBindable::bind</definition>
        <argsstring>(Graphics &amp;gfx) cond_noex=0</argsstring>
        <name>bind</name>
        <qualifiedname>IBindable::bind</qualifiedname>
        <reimplementedby refid="classBlendState_a40b232bc0e513ab020aa07a29a66558a_1a40b232bc0e513ab020aa07a29a66558a">bind</reimplementedby>
        <reimplementedby refid="classCubeTexture_ae6e0e78b260faa09a6425a582a10139a_1ae6e0e78b260faa09a6425a582a10139a">bind</reimplementedby>
        <reimplementedby refid="classCubeTextureArrayOffscreenDS_a92834d4494000e3e497f9579e0aee683_1a92834d4494000e3e497f9579e0aee683">bind</reimplementedby>
        <reimplementedby refid="classCubeTextureOffscreenDS_a4a7f66df5a6a92537d31aa462a17343a_1a4a7f66df5a6a92537d31aa462a17343a">bind</reimplementedby>
        <reimplementedby refid="classCubeTextureOffscreenRT_a86463c3c6cca882c031fcc24ab95c1ff_1a86463c3c6cca882c031fcc24ab95c1ff">bind</reimplementedby>
        <reimplementedby refid="classDepthStencilOutput_a5bd0b7547e6cd08adfae998cca034d8a_1a5bd0b7547e6cd08adfae998cca034d8a">bind</reimplementedby>
        <reimplementedby refid="classDepthStencilShaderInput_acd00dc6db5f67213bc2337c9d94deadc_1acd00dc6db5f67213bc2337c9d94deadc">bind</reimplementedby>
        <reimplementedby refid="classDepthStencilState_a3484137e582f9cc5a3e76103f39b5086_1a3484137e582f9cc5a3e76103f39b5086">bind</reimplementedby>
        <reimplementedby refid="classIndexBuffer_a4ae75057513853f7444a8e37a3af2bb0_1a4ae75057513853f7444a8e37a3af2bb0">bind</reimplementedby>
        <reimplementedby refid="classInputLayout_a5de9afbd3d6d1324ac4a26f04365b69e_1a5de9afbd3d6d1324ac4a26f04365b69e">bind</reimplementedby>
        <reimplementedby refid="classIPixelShaderConstantBufferEx_afbeb8c06fb6e939ea570cf694c0e65e4_1afbeb8c06fb6e939ea570cf694c0e65e4">bind</reimplementedby>
        <reimplementedby refid="classIVertexShaderConstantBufferEx_aa013256c6bc586819dcec2f0faec8222_1aa013256c6bc586819dcec2f0faec8222">bind</reimplementedby>
        <reimplementedby refid="classPixelShader_a141efa3b56ed6b9b0337a03feada0835_1a141efa3b56ed6b9b0337a03feada0835">bind</reimplementedby>
        <reimplementedby refid="classPixelShaderConstantBuffer_ae2388f80f75a3a53b53c92d906b992d0_1ae2388f80f75a3a53b53c92d906b992d0">bind</reimplementedby>
        <reimplementedby refid="classPixelShaderConstantBuffer_ae2388f80f75a3a53b53c92d906b992d0_1ae2388f80f75a3a53b53c92d906b992d0">bind</reimplementedby>
        <reimplementedby refid="classPixelShaderConstantBuffer_ae2388f80f75a3a53b53c92d906b992d0_1ae2388f80f75a3a53b53c92d906b992d0">bind</reimplementedby>
        <reimplementedby refid="classPixelShaderNull_a0ee1bc0e3d0781b00140dfc48d990e39_1a0ee1bc0e3d0781b00140dfc48d990e39">bind</reimplementedby>
        <reimplementedby refid="classPrimitiveTopology_a9851a5da7d713bdc742f736437fc0ec6_1a9851a5da7d713bdc742f736437fc0ec6">bind</reimplementedby>
        <reimplementedby refid="classRasterizerState_a5c99858a872079af1812b79e9b196b51_1a5c99858a872079af1812b79e9b196b51">bind</reimplementedby>
        <reimplementedby refid="classRenderTargetOutput_a537909d0e637e4bb76ade7297d2653c5_1a537909d0e637e4bb76ade7297d2653c5">bind</reimplementedby>
        <reimplementedby refid="classRenderTargetShaderInput_a14b6d1f595c10bb27325f061953250c7_1a14b6d1f595c10bb27325f061953250c7">bind</reimplementedby>
        <reimplementedby refid="classSkyVSCB_a6449e8f0f6d0e07654a3b41869c350a5_1a6449e8f0f6d0e07654a3b41869c350a5">bind</reimplementedby>
        <reimplementedby refid="classTexture_a352000d68cf402ecbc94f2c802a80c48_1a352000d68cf402ecbc94f2c802a80c48">bind</reimplementedby>
        <reimplementedby refid="classTextureArrayOffscreenDS_a1f30c7f8c810f401124ff8a9d9326b7f_1a1f30c7f8c810f401124ff8a9d9326b7f">bind</reimplementedby>
        <reimplementedby refid="classTextureOffscreenDS_a7d8959140611d45c7178cd42c6e524ba_1a7d8959140611d45c7178cd42c6e524ba">bind</reimplementedby>
        <reimplementedby refid="classTextureOffscreenRT_a49c465d1bd478ec9f0341828caf99caf_1a49c465d1bd478ec9f0341828caf99caf">bind</reimplementedby>
        <reimplementedby refid="classTextureSamplerState_aea9aa478070bee5081762a09b8e6fac1_1aea9aa478070bee5081762a09b8e6fac1">bind</reimplementedby>
        <reimplementedby refid="classTransformScaleVSCB_a85f709efad673da2165e172d07199b38_1a85f709efad673da2165e172d07199b38">bind</reimplementedby>
        <reimplementedby refid="classTransformVSCB_a4785fd8ba7b9a6c5c6627267e19341ac_1a4785fd8ba7b9a6c5c6627267e19341ac">bind</reimplementedby>
        <reimplementedby refid="classVertexBuffer_a7d0b03a75e756fa8c632d31dcc2f81ab_1a7d0b03a75e756fa8c632d31dcc2f81ab">bind</reimplementedby>
        <reimplementedby refid="classVertexShader_a733ad39c1c6e22054e04b6d01c2cb82b_1a733ad39c1c6e22054e04b6d01c2cb82b">bind</reimplementedby>
        <reimplementedby refid="classVertexShaderConstantBuffer_a8fd934cdf536ab8de284fb5ce1850a20_1a8fd934cdf536ab8de284fb5ce1850a20">bind</reimplementedby>
        <reimplementedby refid="classVertexShaderConstantBuffer_a8fd934cdf536ab8de284fb5ce1850a20_1a8fd934cdf536ab8de284fb5ce1850a20">bind</reimplementedby>
        <reimplementedby refid="classVertexShaderConstantBuffer_a8fd934cdf536ab8de284fb5ce1850a20_1a8fd934cdf536ab8de284fb5ce1850a20">bind</reimplementedby>
        <reimplementedby refid="classViewport_a93ebffad455c130aa536d25d660f00c9_1a93ebffad455c130aa536d25d660f00c9">bind</reimplementedby>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <briefdescription>
<para>bind graphics resource to a certain stage of the graphics pipeline </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/bindable.h" line="28" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classIBindable_a12fe8725cb3f4836f22d1592b07e2c91_1a12fe8725cb3f4836f22d1592b07e2c91" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void IBindable::setMesh</definition>
        <argsstring>(const Mesh &amp;mesh) noexcept</argsstring>
        <name>setMesh</name>
        <qualifiedname>IBindable::setMesh</qualifiedname>
        <reimplementedby refid="classTransformScaleVSCB_af1cda8d0f3e88d9428a26f0a1c285537_1af1cda8d0f3e88d9428a26f0a1c285537">setMesh</reimplementedby>
        <param>
          <type>const <ref refid="classMesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/bindable.h" line="30" column="14" bodyfile="inc/bindable.h" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classIBindable_a608c5066b829febbd49cd82d1d1fa353_1a608c5066b829febbd49cd82d1d1fa353" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void IBindable::accept</definition>
        <argsstring>(IImGuiConstantBufferVisitor &amp;ev)</argsstring>
        <name>accept</name>
        <qualifiedname>IBindable::accept</qualifiedname>
        <reimplementedby refid="classTransformScaleVSCB_ae62fda43b34487d423892174ff58d78f_1ae62fda43b34487d423892174ff58d78f">accept</reimplementedby>
        <param>
          <type><ref refid="classIImGuiConstantBufferVisitor" kindref="compound">IImGuiConstantBufferVisitor</ref> &amp;</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/bindable.h" line="35" column="14" bodyfile="inc/bindable.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classIBindable_a7d88cdbd5d500d6d7f1bfabe16927855_1a7d88cdbd5d500d6d7f1bfabe16927855" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string IBindable::getUid</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getUid</name>
        <qualifiedname>IBindable::getUid</qualifiedname>
        <reimplementedby refid="classBlendState_aa6b960f91dea5183e301313830bd162f_1aa6b960f91dea5183e301313830bd162f">getUid</reimplementedby>
        <reimplementedby refid="classCubeTexture_ae432c95096dee9d2a19c063f320f2018_1ae432c95096dee9d2a19c063f320f2018">getUid</reimplementedby>
        <reimplementedby refid="classDepthStencilState_a98ace32eca708cfdaeb8e033d9f64c0f_1a98ace32eca708cfdaeb8e033d9f64c0f">getUid</reimplementedby>
        <reimplementedby refid="classIndexBuffer_a2825f0d8a8c2d2a46a905b82ea970883_1a2825f0d8a8c2d2a46a905b82ea970883">getUid</reimplementedby>
        <reimplementedby refid="classInputLayout_a23d0b5c4a3a9442ef38e5473a33f7adf_1a23d0b5c4a3a9442ef38e5473a33f7adf">getUid</reimplementedby>
        <reimplementedby refid="classPixelShader_a70fd83afb22b3163bd756ef0840684ed_1a70fd83afb22b3163bd756ef0840684ed">getUid</reimplementedby>
        <reimplementedby refid="classPixelShaderConstantBuffer_a9de5d16e68493d7600bcf6bb683f4cbc_1a9de5d16e68493d7600bcf6bb683f4cbc">getUid</reimplementedby>
        <reimplementedby refid="classPixelShaderConstantBuffer_a9de5d16e68493d7600bcf6bb683f4cbc_1a9de5d16e68493d7600bcf6bb683f4cbc">getUid</reimplementedby>
        <reimplementedby refid="classPixelShaderConstantBuffer_a9de5d16e68493d7600bcf6bb683f4cbc_1a9de5d16e68493d7600bcf6bb683f4cbc">getUid</reimplementedby>
        <reimplementedby refid="classPixelShaderNull_a5bc506cc49ed3fdff1a67159f110d0b7_1a5bc506cc49ed3fdff1a67159f110d0b7">getUid</reimplementedby>
        <reimplementedby refid="classPrimitiveTopology_a922482223dbc3d0db3073eba1a9b6682_1a922482223dbc3d0db3073eba1a9b6682">getUid</reimplementedby>
        <reimplementedby refid="classRasterizerState_a15d53a48554a11028388734468940786_1a15d53a48554a11028388734468940786">getUid</reimplementedby>
        <reimplementedby refid="classTexture_a628d855d2087b4a03c00f781290b26fa_1a628d855d2087b4a03c00f781290b26fa">getUid</reimplementedby>
        <reimplementedby refid="classTextureSamplerState_a4174f341022cac486bfab2671d710542_1a4174f341022cac486bfab2671d710542">getUid</reimplementedby>
        <reimplementedby refid="classVertexBuffer_a431ae06771496feb4d5df686144f6b20_1a431ae06771496feb4d5df686144f6b20">getUid</reimplementedby>
        <reimplementedby refid="classVertexShader_ac14212dbb1411c277b429c63c8ec7270_1ac14212dbb1411c277b429c63c8ec7270">getUid</reimplementedby>
        <reimplementedby refid="classVertexShaderConstantBuffer_a0ce115989b6228614b3cfe00cdc14140_1a0ce115989b6228614b3cfe00cdc14140">getUid</reimplementedby>
        <reimplementedby refid="classVertexShaderConstantBuffer_a0ce115989b6228614b3cfe00cdc14140_1a0ce115989b6228614b3cfe00cdc14140">getUid</reimplementedby>
        <reimplementedby refid="classVertexShaderConstantBuffer_a0ce115989b6228614b3cfe00cdc14140_1a0ce115989b6228614b3cfe00cdc14140">getUid</reimplementedby>
        <reimplementedby refid="classViewport_a4faf5c207d0070d7a73e970d78179f69_1a4faf5c207d0070d7a73e970d78179f69">getUid</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/bindable.h" line="40" column="21" bodyfile="inc/bindable.h" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classIBindable_a4d590eebe80fa4e0aa865a875ff86c02_1a4d590eebe80fa4e0aa865a875ff86c02" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void IBindable::setDebugObjectName</definition>
        <argsstring>(const char *name) noexcept</argsstring>
        <name>setDebugObjectName</name>
        <qualifiedname>IBindable::setDebugObjectName</qualifiedname>
        <reimplementedby refid="classIDepthStencilView_a37ea21d058018da8f23c574e502f5581_1a37ea21d058018da8f23c574e502f5581">setDebugObjectName</reimplementedby>
        <reimplementedby refid="classIRenderTargetView_a131bf2e6185274b924084de659fa82fc_1a131bf2e6185274b924084de659fa82fc">setDebugObjectName</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/bindable.h" line="46" column="14" bodyfile="inc/bindable.h" bodystart="46" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>a class encapsulating a GPU - <ref refid="classGraphics" kindref="compound">Graphics</ref> Pipeline - resource  </para>
    </briefdescription>
    <detaileddescription>
<para>=============================================================</para>
<para><simplesect kind="author"><para>KeyC0de </para>
</simplesect>
<simplesect kind="date"><para>2022/08/30 19:27 <heading level="1"></heading>
</para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="11">
        <label>BlendState</label>
        <link refid="classBlendState"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>CubeTexture</label>
        <link refid="classCubeTexture"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>CubeTextureArrayOffscreenDS</label>
        <link refid="classCubeTextureArrayOffscreenDS"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>CubeTextureOffscreenDS</label>
        <link refid="classCubeTextureOffscreenDS"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>CubeTextureOffscreenRT</label>
        <link refid="classCubeTextureOffscreenRT"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>DepthStencilOutput</label>
        <link refid="classDepthStencilOutput"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>DepthStencilShaderInput</label>
        <link refid="classDepthStencilShaderInput"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>DepthStencilState</label>
        <link refid="classDepthStencilState"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>GraphicsFriend</label>
        <link refid="classGraphicsFriend"/>
      </node>
      <node id="1">
        <label>IBindable</label>
        <link refid="classIBindable"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>IBindableCloning</label>
        <link refid="classIBindableCloning"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>IConstantBuffer&lt; CB &gt;</label>
        <link refid="classIConstantBuffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>IConstantBuffer&lt; LightsPSCB &gt;</label>
        <link refid="classIConstantBuffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>IConstantBuffer&lt; LightsVSCB &gt;</label>
        <link refid="classIConstantBuffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>IConstantBuffer&lt; ren::ShadowPass::GlobalsPSCB &gt;</label>
        <link refid="classIConstantBuffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>IConstantBuffer&lt; ren::ShadowPass::GlobalsVSCB &gt;</label>
        <link refid="classIConstantBuffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>IConstantBufferEx</label>
        <link refid="classIConstantBufferEx"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>IDepthStencilView</label>
        <link refid="classIDepthStencilView"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>IPixelShaderConstantBufferEx</label>
        <link refid="classIPixelShaderConstantBufferEx"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>IRenderTargetView</label>
        <link refid="classIRenderTargetView"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>IVertexShaderConstantBufferEx</label>
        <link refid="classIVertexShaderConstantBufferEx"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>IndexBuffer</label>
        <link refid="classIndexBuffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>InputLayout</label>
        <link refid="classInputLayout"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>PixelShader</label>
        <link refid="classPixelShader"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>PixelShaderConstantBuffer&lt; CB &gt;</label>
        <link refid="classPixelShaderConstantBuffer"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>PixelShaderConstantBuffer&lt; LightsPSCB &gt;</label>
        <link refid="classPixelShaderConstantBuffer"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>PixelShaderConstantBuffer&lt; ren::ShadowPass::GlobalsPSCB &gt;</label>
        <link refid="classPixelShaderConstantBuffer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>PixelShaderNull</label>
        <link refid="classPixelShaderNull"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>PrimitiveTopology</label>
        <link refid="classPrimitiveTopology"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>RasterizerState</label>
        <link refid="classRasterizerState"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>RenderTargetOutput</label>
        <link refid="classRenderTargetOutput"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>RenderTargetShaderInput</label>
        <link refid="classRenderTargetShaderInput"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>SkyVSCB</label>
        <link refid="classSkyVSCB"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>Texture</label>
        <link refid="classTexture"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>TextureArrayOffscreenDS</label>
        <link refid="classTextureArrayOffscreenDS"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>TextureOffscreenDS</label>
        <link refid="classTextureOffscreenDS"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>TextureOffscreenRT</label>
        <link refid="classTextureOffscreenRT"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>TextureSamplerState</label>
        <link refid="classTextureSamplerState"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>TransformScaleVSCB</label>
        <link refid="classTransformScaleVSCB"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>TransformVSCB</label>
        <link refid="classTransformVSCB"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>VertexBuffer</label>
        <link refid="classVertexBuffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>VertexShader</label>
        <link refid="classVertexShader"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>VertexShaderConstantBuffer&lt; CB &gt;</label>
        <link refid="classVertexShaderConstantBuffer"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>VertexShaderConstantBuffer&lt; LightsVSCB &gt;</label>
        <link refid="classVertexShaderConstantBuffer"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>VertexShaderConstantBuffer&lt; ren::ShadowPass::GlobalsVSCB &gt;</label>
        <link refid="classVertexShaderConstantBuffer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>Viewport</label>
        <link refid="classViewport"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>GraphicsFriend</label>
        <link refid="classGraphicsFriend"/>
      </node>
      <node id="1">
        <label>IBindable</label>
        <link refid="classIBindable"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/bindable.h" line="18" column="1" bodyfile="inc/bindable.h" bodystart="20" bodyend="50"/>
    <listofallmembers>
      <member refid="classIBindable_a608c5066b829febbd49cd82d1d1fa353_1a608c5066b829febbd49cd82d1d1fa353" prot="public" virt="virtual"><scope>IBindable</scope><name>accept</name></member>
      <member refid="classIBindable_add4560f78e76629ee81ba701ba1052e1_1add4560f78e76629ee81ba701ba1052e1" prot="public" virt="pure-virtual"><scope>IBindable</scope><name>bind</name></member>
      <member refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" prot="protected" virt="non-virtual"><scope>IBindable</scope><name>getDevice</name></member>
      <member refid="classGraphicsFriend_a619e32893ab49ea6c5200e7c2d52e2f2_1a619e32893ab49ea6c5200e7c2d52e2f2" prot="protected" virt="non-virtual"><scope>IBindable</scope><name>getDeviceContext</name></member>
      <member refid="classIBindable_a7d88cdbd5d500d6d7f1bfabe16927855_1a7d88cdbd5d500d6d7f1bfabe16927855" prot="public" virt="virtual"><scope>IBindable</scope><name>getUid</name></member>
      <member refid="classIBindable_a4d590eebe80fa4e0aa865a875ff86c02_1a4d590eebe80fa4e0aa865a875ff86c02" prot="public" virt="virtual"><scope>IBindable</scope><name>setDebugObjectName</name></member>
      <member refid="classIBindable_a12fe8725cb3f4836f22d1592b07e2c91_1a12fe8725cb3f4836f22d1592b07e2c91" prot="public" virt="virtual"><scope>IBindable</scope><name>setMesh</name></member>
      <member refid="classIBindable_a7f68262ff85e25e9f826eae7c01bbfa1_1a7f68262ff85e25e9f826eae7c01bbfa1" prot="public" virt="virtual"><scope>IBindable</scope><name>~IBindable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
