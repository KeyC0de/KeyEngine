<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="bindable__exception_8cpp" kind="file" language="C++">
    <compoundname>bindable_exception.cpp</compoundname>
    <includes refid="bindable__exception_8h" local="yes">bindable_exception.h</includes>
    <includes local="no">typeinfo</includes>
    <incdepgraph>
      <node id="2">
        <label>bindable_exception.h</label>
        <link refid="bindable__exception_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>key_exception.h</label>
        <link refid="key__exception_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/bindable_exception.cpp</label>
        <link refid="bindable__exception_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdexcept</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="6">
        <label>typeinfo</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="bindable__exception_8cpp_a49daaad773d173079645f4c159841e69_1a49daaad773d173079645f4c159841e69" prot="public" static="no">
        <name>THROW_BINDABLE_EXCEPTION</name>
        <param><defname>msg</defname></param>
        <initializer>	__debugbreak();\
	throw <ref refid="classBindableException" kindref="compound">BindableException</ref>( __LINE__, __FILE__, __FUNCTION__, msg );</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/bindable_exception.cpp" line="0" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bindable__exception_8h" kindref="compound">bindable_exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="classBindableException_ad4bfa0236db94d553f0b6f837d45656e_1ad4bfa0236db94d553f0b6f837d45656e" refkind="member"><highlight class="normal"><ref refid="classBindableException_ad4bfa0236db94d553f0b6f837d45656e_1ad4bfa0236db94d553f0b6f837d45656e" kindref="member">BindableException::BindableException</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*function,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;msg<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKeyException" kindref="compound">KeyException</ref>(line,<sp/>file,<sp/>function,<sp/>msg)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classBindableException_a0d6405405ceff6545de3db76a73a3a71_1a0d6405405ceff6545de3db76a73a3a71" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classBindableException_a0d6405405ceff6545de3db76a73a3a71_1a0d6405405ceff6545de3db76a73a3a71" kindref="member">BindableException::getType</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<sp/>*this<sp/>).name();</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classBindableException_a7bc81c9702e594b4e8f51f78d846da3b_1a7bc81c9702e594b4e8f51f78d846da3b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classBindableException_a7bc81c9702e594b4e8f51f78d846da3b_1a7bc81c9702e594b4e8f51f78d846da3b" kindref="member">BindableException::what</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKeyException_a9956fdc871308553eec7b047f756690a_1a9956fdc871308553eec7b047f756690a" kindref="member">KeyException::what</ref>();</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/bindable_exception.cpp"/>
  </compounddef>
</doxygen>
