<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="graphics_8cpp" kind="file" language="C++">
    <compoundname>graphics.cpp</compoundname>
    <includes local="no">sstream</includes>
    <includes local="no">mutex</includes>
    <includes local="yes">dxgi1_5.h</includes>
    <includes refid="graphics_8h" local="yes">graphics.h</includes>
    <includes local="yes">imgui/imgui_impl_dx11.h</includes>
    <includes local="yes">imgui/imgui_impl_win32.h</includes>
    <includes refid="render__target_8h" local="yes">render_target.h</includes>
    <includes refid="depth__stencil__view_8h" local="yes">depth_stencil_view.h</includes>
    <includes refid="reporter__access_8h" local="yes">reporter_access.h</includes>
    <includes refid="reporter__listener__events_8h" local="yes">reporter_listener_events.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includes refid="os__utils_8h" local="yes">os_utils.h</includes>
    <includes refid="settings__manager_8h" local="yes">settings_manager.h</includes>
    <includes refid="console_8h" local="yes">console.h</includes>
    <includes refid="graphics__mode_8h" local="yes">graphics_mode.h</includes>
    <includes refid="rectangle_8h" local="yes">rectangle.h</includes>
    <includes refid="vtune__itt__domain_8h" local="yes">vtune_itt_domain.h</includes>
    <includes refid="texture_8h" local="yes">texture.h</includes>
    <includes refid="math__utils_8h" local="yes">math_utils.h</includes>
    <includes refid="renderer_8h" local="yes">renderer.h</includes>
    <includes refid="camera__manager_8h" local="yes">camera_manager.h</includes>
    <includes refid="camera_8h" local="yes">camera.h</includes>
    <incdepgraph>
      <node id="33">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>bindable.h</label>
        <link refid="bindable_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>bitmap.h</label>
        <link refid="bitmap_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>camera_manager.h</label>
        <link refid="camera__manager_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="26">
        <label>console.h</label>
        <link refid="console_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>depth_stencil_view.h</label>
        <link refid="depth__stencil__view_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>graphics_friend.h</label>
        <link refid="graphics__friend_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>graphics_mode.h</label>
        <link refid="graphics__mode_8h"/>
      </node>
      <node id="82">
        <label>imgui_visitors.h</label>
        <link refid="imgui__visitors_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>key_exception.h</label>
        <link refid="key__exception_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>key_timer.h</label>
        <link refid="key__timer_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>key_wrl.h</label>
        <link refid="key__wrl_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="63">
        <label>os_utils.h</label>
        <link refid="os__utils_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>rectangle.h</label>
        <link refid="rectangle_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>render_surface.h</label>
        <link refid="render__surface_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>render_target.h</label>
        <link refid="render__target_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>renderer.h</label>
        <link refid="renderer_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>rendering_channel.h</label>
        <link refid="rendering__channel_8h"/>
      </node>
      <node id="60">
        <label>reporter_access.h</label>
        <link refid="reporter__access_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>reporter_listener.h</label>
        <link refid="reporter__listener_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>reporter_listener_events.h</label>
        <link refid="reporter__listener__events_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>settings_manager.h</label>
        <link refid="settings__manager_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>texture.h</label>
        <link refid="texture_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>texture_desc.h</label>
        <link refid="texture__desc_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>vtune_itt_domain.h</label>
        <link refid="vtune__itt__domain_8h"/>
      </node>
      <node id="6">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/graphics.cpp</label>
        <link refid="graphics_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>DirectXMath.h</label>
      </node>
      <node id="58">
        <label>DirectxMath.h</label>
      </node>
      <node id="68">
        <label>ShlObj.h</label>
      </node>
      <node id="8">
        <label>Windows.h</label>
      </node>
      <node id="41">
        <label>algorithm</label>
      </node>
      <node id="55">
        <label>array</label>
      </node>
      <node id="37">
        <label>bitset</label>
      </node>
      <node id="25">
        <label>chrono</label>
      </node>
      <node id="39">
        <label>cinttypes</label>
      </node>
      <node id="28">
        <label>cmath</label>
      </node>
      <node id="65">
        <label>comdef.h</label>
      </node>
      <node id="38">
        <label>cstddef</label>
      </node>
      <node id="29">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>d3d11.h</label>
      </node>
      <node id="13">
        <label>d3dcompiler.h</label>
      </node>
      <node id="11">
        <label>dxgi1_4.h</label>
      </node>
      <node id="4">
        <label>dxgi1_5.h</label>
      </node>
      <node id="59">
        <label>dxtex/DirectXTex.h</label>
      </node>
      <node id="45">
        <label>execution</label>
      </node>
      <node id="81">
        <label>filesystem</label>
      </node>
      <node id="67">
        <label>functional</label>
      </node>
      <node id="40">
        <label>future</label>
      </node>
      <node id="48">
        <label>imgui/imgui_impl_dx11.h</label>
      </node>
      <node id="49">
        <label>imgui/imgui_impl_win32.h</label>
      </node>
      <node id="31">
        <label>iomanip</label>
      </node>
      <node id="34">
        <label>iostream</label>
      </node>
      <node id="43">
        <label>iterator</label>
      </node>
      <node id="32">
        <label>limits</label>
      </node>
      <node id="15">
        <label>memory</label>
      </node>
      <node id="3">
        <label>mutex</label>
      </node>
      <node id="42">
        <label>numeric</label>
      </node>
      <node id="51">
        <label>optional</label>
      </node>
      <node id="44">
        <label>regex</label>
      </node>
      <node id="7">
        <label>sdkddkver.h</label>
      </node>
      <node id="36">
        <label>set</label>
      </node>
      <node id="2">
        <label>sstream</label>
      </node>
      <node id="20">
        <label>stdexcept</label>
      </node>
      <node id="19">
        <label>string</label>
      </node>
      <node id="71">
        <label>string_view</label>
      </node>
      <node id="24">
        <label>thread</label>
      </node>
      <node id="66">
        <label>tlhelp32.h</label>
      </node>
      <node id="30">
        <label>type_traits</label>
      </node>
      <node id="83">
        <label>unordered_map</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
      <node id="69">
        <label>wincred.h</label>
      </node>
      <node id="64">
        <label>winternl.h</label>
      </node>
      <node id="10">
        <label>wrl.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dxgi1_5.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphics_8h" kindref="compound">graphics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;imgui/imgui_impl_dx11.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;imgui/imgui_impl_win32.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="render__target_8h" kindref="compound">render_target.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="depth__stencil__view_8h" kindref="compound">depth_stencil_view.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reporter__access_8h" kindref="compound">reporter_access.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reporter__listener__events_8h" kindref="compound">reporter_listener_events.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="os__utils_8h" kindref="compound">os_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="settings__manager_8h" kindref="compound">settings_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="console_8h" kindref="compound">console.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphics__mode_8h" kindref="compound">graphics_mode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rectangle_8h" kindref="compound">rectangle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vtune__itt__domain_8h" kindref="compound">vtune_itt_domain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texture_8h" kindref="compound">texture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="math__utils_8h" kindref="compound">math_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderer_8h" kindref="compound">renderer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="camera__manager_8h" kindref="compound">camera_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="camera_8h" kindref="compound">camera.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rectangle_8h" kindref="compound">rectangle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(<sp/>lib,<sp/>&quot;dxgi.lib&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(<sp/>lib,<sp/>&quot;d3d11.lib&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(<sp/>lib,<sp/>&quot;d3dcompiler.lib&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D2D_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>pragma<sp/>comment(<sp/>lib,<sp/>&quot;d2d1.lib&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>pragma<sp/>comment(<sp/>lib,<sp/>&quot;dwrite.lib&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mwrl<sp/>=<sp/>Microsoft::WRL;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceDirectX" kindref="compound">dx</ref><sp/>=<sp/><ref refid="namespaceDirectX" kindref="compound">DirectX</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>ITT<sp/>string<sp/>handles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_PROFILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__itt_string_handle<sp/>*pStrIttDrawIndexed<sp/>=<sp/>__itt_string_handle_create(<sp/>L</highlight><highlight class="stringliteral">&quot;DrawIndexed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__itt_string_handle<sp/>*pStrIttDrawIndexedInstanced<sp/>=<sp/>__itt_string_handle_create(<sp/>L</highlight><highlight class="stringliteral">&quot;DrawIndexedInstanced&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__itt_string_handle<sp/>*pStrIttBeginRendering<sp/>=<sp/>__itt_string_handle_create(<sp/>L</highlight><highlight class="stringliteral">&quot;BeginRendering&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__itt_string_handle<sp/>*pStrIttFpsTimerRendering<sp/>=<sp/>__itt_string_handle_create(<sp/>L</highlight><highlight class="stringliteral">&quot;FpsTimerRendering&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>__itt_string_handle<sp/>*pStrIttEndRendering<sp/>=<sp/>__itt_string_handle_create(<sp/>L</highlight><highlight class="stringliteral">&quot;EndRendering&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classGraphics_1_1Adapter_a075d6b4e89a60bf695d724379161751e_1a075d6b4e89a60bf695d724379161751e" refkind="member"><highlight class="normal"><ref refid="classGraphics_1_1Adapter_a075d6b4e89a60bf695d724379161751e_1a075d6b4e89a60bf695d724379161751e" kindref="member">Graphics::Adapter::Adapter</ref>(<sp/>IDXGIAdapter<sp/>*pAdapter<sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_1_1Adapter_a6b5496c21afd87729babc3a5dffe7a1d_1a6b5496c21afd87729babc3a5dffe7a1d" kindref="member">m_pAdapter</ref><sp/>=<sp/>pAdapter;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>pAdapter-&gt;GetDesc(<sp/>&amp;<ref refid="classGraphics_1_1Adapter_a39682db9c01cedf9e9df01eae4509e7d_1a39682db9c01cedf9e9df01eae4509e7d" kindref="member">m_desc</ref><sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*primaryAdapterName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PrimaryDxgiAdapter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_1_1Adapter_a6b5496c21afd87729babc3a5dffe7a1d_1a6b5496c21afd87729babc3a5dffe7a1d" kindref="member">m_pAdapter</ref>-&gt;SetPrivateData(<sp/>WKPDID_D3DDebugObjectName,<sp/>(UINT)<sp/>strlen(<sp/>primaryAdapterName<sp/>),<sp/>primaryAdapterName<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classGraphics_1_1Adapter_ae672fea008e3fd6b33932f597470af18_1ae672fea008e3fd6b33932f597470af18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DXGI_ADAPTER_DESC*<sp/><ref refid="classGraphics_1_1Adapter_ae672fea008e3fd6b33932f597470af18_1ae672fea008e3fd6b33932f597470af18" kindref="member">Graphics::Adapter::getDesc</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;m_desc;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classGraphics_1_1Adapter_a2cbe03324f6a33d65eb030144fda67f0_1a2cbe03324f6a33d65eb030144fda67f0" refkind="member"><highlight class="normal">IDXGIAdapter*<sp/><ref refid="classGraphics_1_1Adapter_a2cbe03324f6a33d65eb030144fda67f0_1a2cbe03324f6a33d65eb030144fda67f0" kindref="member">Graphics::Adapter::getAdapter</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pAdapter.Get();</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classGraphics_1_1Adapter_ad40a2841488cf71cbee71eb9eeb12c72_1ad40a2841488cf71cbee71eb9eeb12c72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_1_1Adapter_ad40a2841488cf71cbee71eb9eeb12c72_1ad40a2841488cf71cbee71eb9eeb12c72" kindref="member">Graphics::Adapter::getVRamDetails</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>desc<sp/>=<sp/>getDesc();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>description<sp/>=<sp/><ref refid="namespaceutil_a81e6fd9c125b3f26fb70d1847f6ff517_1a81e6fd9c125b3f26fb70d1847f6ff517" kindref="member">util::ws2s</ref>(<sp/>desc-&gt;Description<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>INT64<sp/>vRam<sp/>=<sp/>desc-&gt;DedicatedVideoMemory;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>INT64<sp/>ram<sp/>=<sp/>desc-&gt;DedicatedSystemMemory;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>INT64<sp/>sharedRam<sp/>=<sp/>desc-&gt;SharedSystemMemory;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>featureLevel{<ref refid="utils__global_8h_ae523e66c2a1ec5e7283f878cfaf99d58_1ae523e66c2a1ec5e7283f878cfaf99d58" kindref="member">ENUM_STR</ref>(<sp/><ref refid="classGraphics_aed265fd9f7b2e9eeb65f184260037e3d_1aed265fd9f7b2e9eeb65f184260037e3d" kindref="member">Graphics::s_featureLevel</ref><sp/>)};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKeyConsole" kindref="compound">KeyConsole</ref>&amp;<sp/>console<sp/>=<sp/><ref refid="classKeyConsole_a31cfe6a77156baf79a0a74ea338c6e18_1a31cfe6a77156baf79a0a74ea338c6e18" kindref="member">KeyConsole::getInstance</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>console.<ref refid="classKeyConsole_a07362c63c978e15bb23d2a43ab697e3a_1a07362c63c978e15bb23d2a43ab697e3a" kindref="member">print</ref>(<sp/></highlight><highlight class="stringliteral">&quot;*****************<sp/>GRAPHICS<sp/>ADAPTER<sp/>DETAILS<sp/>***********************&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>console.<ref refid="classKeyConsole_a07362c63c978e15bb23d2a43ab697e3a_1a07362c63c978e15bb23d2a43ab697e3a" kindref="member">print</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Adapter<sp/>Description:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>description<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>console.<ref refid="classKeyConsole_a07362c63c978e15bb23d2a43ab697e3a_1a07362c63c978e15bb23d2a43ab697e3a" kindref="member">print</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Dedicated<sp/>Video<sp/>RAM:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<sp/>vRam<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>console.<ref refid="classKeyConsole_a07362c63c978e15bb23d2a43ab697e3a_1a07362c63c978e15bb23d2a43ab697e3a" kindref="member">print</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Dedicated<sp/>System<sp/>RAM:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<sp/>ram<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>console.<ref refid="classKeyConsole_a07362c63c978e15bb23d2a43ab697e3a_1a07362c63c978e15bb23d2a43ab697e3a" kindref="member">print</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Shared<sp/>System<sp/>RAM:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<sp/>sharedRam<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>console.<ref refid="classKeyConsole_a07362c63c978e15bb23d2a43ab697e3a_1a07362c63c978e15bb23d2a43ab697e3a" kindref="member">print</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Feature<sp/>Level:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>featureLevel<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classGraphics_a9901788d977a1cb176ffc589bc7a9488_1a9901788d977a1cb176ffc589bc7a9488" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a9901788d977a1cb176ffc589bc7a9488_1a9901788d977a1cb176ffc589bc7a9488" kindref="member">Graphics::makeWindowAssociationWithFactory</ref>(<sp/>HWND<sp/>hWnd,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT<sp/>flags<sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>FLIP_PRESENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/><ref refid="classGraphics_ad5ab15e2a2efd332ba0a1a67ba232c83_1ad5ab15e2a2efd332ba0a1a67ba232c83" kindref="member">m_pDxgiFactory</ref>-&gt;MakeWindowAssociation(<sp/>hWnd,<sp/>flags<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" refkind="member"><highlight class="normal"><ref refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" kindref="member">Graphics::Graphics</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HWND<sp/>hWnd,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="texture__desc_8h_a5a6f50353d158fb3e2d2234fde1353a4_1a5a6f50353d158fb3e2d2234fde1353a4" kindref="member">MultisamplingMode</ref><sp/>multisamplingMode<sp/></highlight><highlight class="comment">/*=<sp/>MultisamplingMode::None*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" kindref="member">m_width</ref>(width),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_abeb2d8d4b81e71ad34102c1526ef28b6_1abeb2d8d4b81e71ad34102c1526ef28b6" kindref="member">m_height</ref>(height),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a0082e76df00907ea297d37abccd21d8f_1a0082e76df00907ea297d37abccd21d8f" kindref="member">m_hParentWnd</ref>{hWnd},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a691874fb352051093a2ec88f3c5a3d11_1a691874fb352051093a2ec88f3c5a3d11" kindref="member">m_swapChainFlags</ref>{0u}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;settings<sp/>=<sp/><ref refid="classSettingsManager_a92617e378ef941b075dd8343d283bd00_1a92617e378ef941b075dd8343d283bd00" kindref="member">SettingsManager::getInstance</ref>().<ref refid="classSettingsManager_a2634a5f2822112f9bf7cd42dcf440288_1a2634a5f2822112f9bf7cd42dcf440288" kindref="member">getSettings</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>settings.bMultithreadedRendering<sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_ab66e3729912e3c267d200d7d1ee35af2_1ab66e3729912e3c267d200d7d1ee35af2" kindref="member">m_deferredContexts</ref>.reserve(<sp/>settings.nRenderingThreads<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a2e75ada04a8515bf3504a539112bba05_1a2e75ada04a8515bf3504a539112bba05" kindref="member">m_commandLists</ref>.reserve(<sp/>settings.nRenderingThreads<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>factory,<sp/>adapter,<sp/>device,<sp/>device<sp/>rendering<sp/>context(s),<sp/>front|back<sp/>buffers<sp/>swap<sp/>chain,<sp/>output<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a355c17321d44862d7ef0f93416492d6a_1a355c17321d44862d7ef0f93416492d6a" kindref="member">createFactory</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a80cc8527cd2fab207205fc3962fba585_1a80cc8527cd2fab207205fc3962fba585" kindref="member">createAdapters</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;primaryAdapter<sp/>=<sp/><ref refid="classGraphics_a0b498c6167c3a63bf4539d04110ca63f_1a0b498c6167c3a63bf4539d04110ca63f" kindref="member">s_adapters</ref>.front();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>E_INVALIDARG;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a691874fb352051093a2ec88f3c5a3d11_1a691874fb352051093a2ec88f3c5a3d11" kindref="member">m_swapChainFlags</ref><sp/>|=<sp/>DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH;<sp/></highlight><highlight class="comment">//<sp/>allows<sp/>switching<sp/>between<sp/>fullscreen<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a691874fb352051093a2ec88f3c5a3d11_1a691874fb352051093a2ec88f3c5a3d11" kindref="member">m_swapChainFlags</ref><sp/>|=<sp/>D3D11_CREATE_DEVICE_DEBUG;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D3D_FEATURE_LEVEL<sp/>acceptableFeatureLevels[]<sp/>=</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D_FEATURE_LEVEL_11_1,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D_FEATURE_LEVEL_11_0,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D_FEATURE_LEVEL_10_1,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D_FEATURE_LEVEL_10_0,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D_FEATURE_LEVEL_9_3,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D_FEATURE_LEVEL_9_2,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D3D_FEATURE_LEVEL_9_1,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FLIP_PRESENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classGraphics_a4d2ce74d9116c803e4f5514fa9a8e51f_1a4d2ce74d9116c803e4f5514fa9a8e51f" kindref="member">checkTearingSupport</ref>()<sp/>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a691874fb352051093a2ec88f3c5a3d11_1a691874fb352051093a2ec88f3c5a3d11" kindref="member">m_swapChainFlags</ref><sp/>|=<sp/>DXGI_SWAP_CHAIN_FLAG_ALLOW_TEARING;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_presentFlags<sp/>=<sp/>DXGI_PRESENT_ALLOW_TEARING;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>DWORD<sp/>i<sp/>=<sp/>0u;<sp/>hres<sp/>==<sp/>E_INVALIDARG<sp/>||<sp/>i<sp/>&lt;<sp/>std::size(<sp/>acceptableFeatureLevels<sp/>);<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>D3D11CreateDevice(<sp/>primaryAdapter.getAdapter(),<sp/>D3D_DRIVER_TYPE_UNKNOWN,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/><ref refid="classGraphics_a691874fb352051093a2ec88f3c5a3d11_1a691874fb352051093a2ec88f3c5a3d11" kindref="member">m_swapChainFlags</ref>,<sp/>acceptableFeatureLevels,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>std::size(<sp/>acceptableFeatureLevels<sp/>),<sp/>D3D11_SDK_VERSION,<sp/>&amp;<ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>,<sp/>&amp;<ref refid="classGraphics_aed265fd9f7b2e9eeb65f184260037e3d_1aed265fd9f7b2e9eeb65f184260037e3d" kindref="member">s_featureLevel</ref>,<sp/>&amp;<ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref><sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*deviceName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;KeyDevice&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>-&gt;SetPrivateData(<sp/>WKPDID_D3DDebugObjectName,<sp/>(UINT)<sp/>strlen(<sp/>deviceName<sp/>),<sp/>deviceName<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*immediateContextName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ImmediateContext&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref>-&gt;SetPrivateData(<sp/>WKPDID_D3DDebugObjectName,<sp/>(UINT)<sp/>strlen(<sp/>immediateContextName<sp/>),<sp/>immediateContextName<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>DXGI_SWAP_CHAIN_DESC1<sp/>swapChainDesc{};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.Width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.Height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.BufferUsage<sp/>=<sp/>DXGI_USAGE_RENDER_TARGET_OUTPUT;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.BufferCount<sp/>=<sp/>2u;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.Stereo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.SwapEffect<sp/>=<sp/>DXGI_SWAP_EFFECT_FLIP_DISCARD;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.Format<sp/>=<sp/>DXGI_FORMAT_B8G8R8A8_UNORM;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.Scaling<sp/>=<sp/>DXGI_SCALING_NONE;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.AlphaMode<sp/>=<sp/>DXGI_ALPHA_MODE_UNSPECIFIED;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.SampleDesc.Count<sp/>=<sp/>1u;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSAA<sp/>not<sp/>supported<sp/>in<sp/>FLIP<sp/>mode<sp/>for<sp/>the<sp/>back<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.SampleDesc.Quality<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.Flags<sp/>=<sp/><ref refid="classGraphics_a691874fb352051093a2ec88f3c5a3d11_1a691874fb352051093a2ec88f3c5a3d11" kindref="member">m_swapChainFlags</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_ad5ab15e2a2efd332ba0a1a67ba232c83_1ad5ab15e2a2efd332ba0a1a67ba232c83" kindref="member">m_pDxgiFactory</ref>-&gt;CreateSwapChainForHwnd(<sp/><ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>.Get(),<sp/>hWnd,<sp/>&amp;swapChainDesc,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref><sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>window-swap<sp/>chain<sp/>association</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a9901788d977a1cb176ffc589bc7a9488_1a9901788d977a1cb176ffc589bc7a9488" kindref="member">makeWindowAssociationWithFactory</ref>(<sp/>hWnd,<sp/>DXGI_MWA_NO_WINDOW_CHANGES<sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>DXGI_SWAP_CHAIN_DESC<sp/>swapChainDesc{};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.BufferUsage<sp/>=<sp/>DXGI_USAGE_RENDER_TARGET_OUTPUT;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.BufferCount<sp/>=<sp/>1u;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.OutputWindow<sp/>=<sp/>hWnd;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.SwapMaterial<sp/>=<sp/>DXGI_SWAP_EFFECT_DISCARD;<sp/><sp/></highlight><highlight class="comment">//<sp/>dirty<sp/>rectangles<sp/>are<sp/>incompatible<sp/>with<sp/>_DISCARD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.Windowed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.Flags<sp/>=<sp/><ref refid="classGraphics_a691874fb352051093a2ec88f3c5a3d11_1a691874fb352051093a2ec88f3c5a3d11" kindref="member">m_swapChainFlags</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.BufferDesc.Width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.BufferDesc.Height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.BufferDesc.Format<sp/>=<sp/>DXGI_FORMAT_B8G8R8A8_UNORM;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.BufferDesc.Scaling<sp/>=<sp/>DXGI_MODE_SCALING_UNSPECIFIED;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.BufferDesc.ScanlineOrdering<sp/>=<sp/>DXGI_MODE_SCANLINE_ORDER_UNSPECIFIED;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.BufferDesc.RefreshRate.Numerator<sp/>=<sp/>60u;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainDesc.BufferDesc.RefreshRate.Denominator<sp/>=<sp/>1u;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>multisamplingMode<sp/>==<sp/><ref refid="texture__desc_8h_a5a6f50353d158fb3e2d2234fde1353a4_1a5a6f50353d158fb3e2d2234fde1353a4ac9d3e887722f2bc482bcca9d41c512af" kindref="member">MultisamplingMode::None</ref><sp/>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swapChainDesc.SampleDesc.Count<sp/>=<sp/>1u;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swapChainDesc.SampleDesc.Quality<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swapChainDesc.SampleDesc.Count<sp/>=<sp/>1u;<sp/><sp/><sp/><sp/><sp/>//<sp/>#TODO:<sp/>multisampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>swapChainDesc.SampleDesc.Quality<sp/>=<sp/>0u;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>DWORD<sp/>i<sp/>=<sp/>0u;<sp/>hres<sp/>==<sp/>E_INVALIDARG<sp/>||<sp/>i<sp/>&lt;<sp/>std::size(<sp/>acceptableFeatureLevels<sp/>);<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>D3D11CreateDeviceAndSwapChain(<sp/>primaryAdapter.getAdapter(),<sp/>D3D_DRIVER_TYPE_UNKNOWN,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/><ref refid="classGraphics_a691874fb352051093a2ec88f3c5a3d11_1a691874fb352051093a2ec88f3c5a3d11" kindref="member">m_swapChainFlags</ref>,<sp/>acceptableFeatureLevels,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>std::size(<sp/>acceptableFeatureLevels<sp/>),<sp/>D3D11_SDK_VERSION,<sp/>&amp;swapChainDesc,<sp/>&amp;<ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref>,<sp/>&amp;<ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>,<sp/>&amp;<ref refid="classGraphics_aed265fd9f7b2e9eeb65f184260037e3d_1aed265fd9f7b2e9eeb65f184260037e3d" kindref="member">s_featureLevel</ref>,<sp/>&amp;<ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref><sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/><ref refid="classGraphics_aed265fd9f7b2e9eeb65f184260037e3d_1aed265fd9f7b2e9eeb65f184260037e3d" kindref="member">s_featureLevel</ref><sp/>==<sp/>D3D_FEATURE_LEVEL_11_1,<sp/></highlight><highlight class="stringliteral">&quot;Old<sp/>feature<sp/>level!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a5cc0d3b4dd8e0c60c55a67c31b3b64f9_1a5cc0d3b4dd8e0c60c55a67c31b3b64f9" kindref="member">interrogateDirectxFeatures</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a7dce5b31ab15931acd9812956a118ab2_1a7dce5b31ab15931acd9812956a118ab2" kindref="member">setupMonitors</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>Renderer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacegph__mode_aea02034656cf9c2fe5f8de0f20497209_1aea02034656cf9c2fe5f8de0f20497209" kindref="member">gph_mode::get</ref>()<sp/>==<sp/><ref refid="namespacegph__mode_ac01893bc47c796c0175b9ef51d09bf01_1ac01893bc47c796c0175b9ef51d09bf01ab9ccae78a7ef0f76b67c0f0d858990e3" kindref="member">gph_mode::_3D</ref><sp/>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" kindref="member">m_pRenderer</ref><sp/>=<sp/>std::make_unique&lt;ren::Renderer3d&gt;(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>4,<sp/>3.0f<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a23f562aa7303bb49e73bb104a7d50271_1a23f562aa7303bb49e73bb104a7d50271" kindref="member">m_pRenderer3d</ref><sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1Renderer3d" kindref="compound">ren::Renderer3d</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" kindref="member">m_pRenderer</ref>.get()<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" kindref="member">m_pRenderer</ref><sp/>=<sp/>std::make_unique&lt;ren::Renderer2d&gt;(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_ae24eda5d4c47a906eafa9555bf76c70e_1ae24eda5d4c47a906eafa9555bf76c70e" kindref="member">m_pRenderer2d</ref><sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1Renderer2d" kindref="compound">ren::Renderer2d</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" kindref="member">m_pRenderer</ref>.get()<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacegph__mode_aea02034656cf9c2fe5f8de0f20497209_1aea02034656cf9c2fe5f8de0f20497209" kindref="member">gph_mode::get</ref>()<sp/>==<sp/><ref refid="namespacegph__mode_ac01893bc47c796c0175b9ef51d09bf01_1ac01893bc47c796c0175b9ef51d09bf01ab9ccae78a7ef0f76b67c0f0d858990e3" kindref="member">gph_mode::_3D</ref><sp/>)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>Dear<sp/>ImGui<sp/>d3d11<sp/>Implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplDX11_Init(<sp/><ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>.Get(),<sp/><ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref>.Get()<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a756515d158986ac14d289551b3531ed8_1a756515d158986ac14d289551b3531ed8" kindref="member">m_pCpuBuffer</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>_aligned_malloc(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/>)<sp/>*<sp/>width<sp/>*<sp/>height,<sp/>16u<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>settings.bVSync<sp/>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.iMaxFps<sp/>=<sp/><ref refid="namespaceutil_a9af4afdb82a7b89d7ff477feb683947d_1a9af4afdb82a7b89d7ff477feb683947d" kindref="member">util::round</ref>(<sp/><ref refid="classGraphics_ac24292486c6316265844e447ecf3fe6d_1ac24292486c6316265844e447ecf3fe6d" kindref="member">getRefreshRate</ref>()<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_ad6709c3134a823fa8ef55de9542cf2f9_1ad6709c3134a823fa8ef55de9542cf2f9" kindref="member">m_fpsTimer</ref>.<ref refid="classKeyTimer_ab8ce8e8658a0ea7c9b5ab4028bc7b777_1ab8ce8e8658a0ea7c9b5ab4028bc7b777" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_ab51ca0bbae080a1912493a2ef70cdec1_1ab51ca0bbae080a1912493a2ef70cdec1" kindref="member">m_realTimer</ref>.<ref refid="classKeyTimer_ab8ce8e8658a0ea7c9b5ab4028bc7b777_1ab8ce8e8658a0ea7c9b5ab4028bc7b777" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="classGraphics_a7841c9a961ac9bca33bd30ddf8066cdb_1a7841c9a961ac9bca33bd30ddf8066cdb" refkind="member"><highlight class="normal"><ref refid="classGraphics_a7841c9a961ac9bca33bd30ddf8066cdb_1a7841c9a961ac9bca33bd30ddf8066cdb" kindref="member">Graphics::~Graphics</ref>()</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacegph__mode_aea02034656cf9c2fe5f8de0f20497209_1aea02034656cf9c2fe5f8de0f20497209" kindref="member">gph_mode::get</ref>()<sp/>==<sp/><ref refid="namespacegph__mode_ac01893bc47c796c0175b9ef51d09bf01_1ac01893bc47c796c0175b9ef51d09bf01ab9ccae78a7ef0f76b67c0f0d858990e3" kindref="member">gph_mode::_3D</ref><sp/>)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplDX11_Shutdown();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(<sp/><ref refid="classGraphics_a756515d158986ac14d289551b3531ed8_1a756515d158986ac14d289551b3531ed8" kindref="member">m_pCpuBuffer</ref><sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a756515d158986ac14d289551b3531ed8_1a756515d158986ac14d289551b3531ed8" kindref="member">m_pCpuBuffer</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_aa810ea01a036c99e63ca86974ff85d13_1aa810ea01a036c99e63ca86974ff85d13" kindref="member">cleanState</ref>();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>d3d11DebugReport();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" kindref="member">Graphics::resize</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>newWidth,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>newHeight<sp/>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;caman<sp/>=<sp/><ref refid="classCameraManager_ac7e6b0996395dcaaa889d17d5a8a639e_1ac7e6b0996395dcaaa889d17d5a8a639e" kindref="member">CameraManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>caman.getActiveCamera().setTethered(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>camera<sp/>movement<sp/>while<sp/>resizing,<sp/>#TODO:<sp/>instead<sp/>change<sp/>state<sp/>to<sp/>MenuState</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>newWidth<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>newHeight<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_ae0c36774c2093f5cfc1424187b0e1c31_1ae0c36774c2093f5cfc1424187b0e1c31" kindref="member">m_bFullscreenMode</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newWidth<sp/>=<sp/>GetSystemMetrics(<sp/>SM_CXSCREEN<sp/>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newHeight<sp/>=<sp/>GetSystemMetrics(<sp/>SM_CYSCREEN<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_ae0c36774c2093f5cfc1424187b0e1c31_1ae0c36774c2093f5cfc1424187b0e1c31" kindref="member">m_bFullscreenMode</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" kindref="member">m_width</ref><sp/>=<sp/>newWidth;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_abeb2d8d4b81e71ad34102c1526ef28b6_1abeb2d8d4b81e71ad34102c1526ef28b6" kindref="member">m_height</ref><sp/>=<sp/>newHeight;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>a<sp/>fullscreen<sp/>transition<sp/>if<sp/>necessary;<sp/>must<sp/>be<sp/>called<sp/>before<sp/>ResizeBuffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref>-&gt;SetFullscreenState(<sp/><ref refid="classGraphics_ae0c36774c2093f5cfc1424187b0e1c31_1ae0c36774c2093f5cfc1424187b0e1c31" kindref="member">m_bFullscreenMode</ref><sp/>?<sp/>TRUE<sp/>:<sp/>FALSE,<sp/><ref refid="classGraphics_ae0c36774c2093f5cfc1424187b0e1c31_1ae0c36774c2093f5cfc1424187b0e1c31" kindref="member">m_bFullscreenMode</ref><sp/>?<sp/><ref refid="classGraphics_a6305d6fcb9798d15ed15dead4c3fc3a5_1a6305d6fcb9798d15ed15dead4c3fc3a5" kindref="member">m_pDxgiOutput</ref>.Get()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assemble<sp/>all<sp/>bound<sp/>RTV<sp/>&amp;<sp/>DSVs,<sp/>clear<sp/>them<sp/>&amp;<sp/>empty<sp/>their<sp/>shared_ptrs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classGraphics_a02e3b57e9a06dca3b04e368cae000820_1a02e3b57e9a06dca3b04e368cae000820" kindref="member">m_pBackBufferRtv</ref>.use_count()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a02e3b57e9a06dca3b04e368cae000820_1a02e3b57e9a06dca3b04e368cae000820" kindref="member">m_pBackBufferRtv</ref>-&gt;clean(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classGraphics_a974483c4adc9f12211ca4916594f47f8_1a974483c4adc9f12211ca4916594f47f8" kindref="member">m_pBackBufferDsv</ref>.use_count()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a974483c4adc9f12211ca4916594f47f8_1a974483c4adc9f12211ca4916594f47f8" kindref="member">m_pBackBufferDsv</ref>-&gt;clean(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" kindref="member">m_pRenderer</ref>-&gt;isUsingOffscreenRendering()<sp/>)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classGraphics_a38b40521639124e322cf9b63c1b6c26f_1a38b40521639124e322cf9b63c1b6c26f" kindref="member">m_pOffscreenRtv</ref>-&gt;accessRtv().use_count()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a38b40521639124e322cf9b63c1b6c26f_1a38b40521639124e322cf9b63c1b6c26f" kindref="member">m_pOffscreenRtv</ref>-&gt;accessRtv()-&gt;clean(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classGraphics_a22e51ce136cf34e39ac7745c4490de4d_1a22e51ce136cf34e39ac7745c4490de4d" kindref="member">m_pOffscreenDsv</ref>-&gt;accessDsv().use_count()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a22e51ce136cf34e39ac7745c4490de4d_1a22e51ce136cf34e39ac7745c4490de4d" kindref="member">m_pOffscreenDsv</ref>-&gt;accessDsv()-&gt;clean(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a02e3b57e9a06dca3b04e368cae000820_1a02e3b57e9a06dca3b04e368cae000820" kindref="member">m_pBackBufferRtv</ref>.reset();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a974483c4adc9f12211ca4916594f47f8_1a974483c4adc9f12211ca4916594f47f8" kindref="member">m_pBackBufferDsv</ref>.reset();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" kindref="member">m_pRenderer</ref>-&gt;isUsingOffscreenRendering()<sp/>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a38b40521639124e322cf9b63c1b6c26f_1a38b40521639124e322cf9b63c1b6c26f" kindref="member">m_pOffscreenRtv</ref>-&gt;accessRtv().reset();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a38b40521639124e322cf9b63c1b6c26f_1a38b40521639124e322cf9b63c1b6c26f" kindref="member">m_pOffscreenRtv</ref>.reset();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a22e51ce136cf34e39ac7745c4490de4d_1a22e51ce136cf34e39ac7745c4490de4d" kindref="member">m_pOffscreenDsv</ref>-&gt;accessDsv().reset();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a22e51ce136cf34e39ac7745c4490de4d_1a22e51ce136cf34e39ac7745c4490de4d" kindref="member">m_pOffscreenDsv</ref>.reset();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resize<sp/>the<sp/>RTV:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref>-&gt;ResizeBuffers(<sp/>0u,<sp/>newWidth,<sp/>newHeight,<sp/>DXGI_FORMAT_UNKNOWN,<sp/><ref refid="classGraphics_a691874fb352051093a2ec88f3c5a3d11_1a691874fb352051093a2ec88f3c5a3d11" kindref="member">m_swapChainFlags</ref><sp/>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>need<sp/>to<sp/>handle<sp/>DXGI_ERROR_DEVICE_REMOVED<sp/>&amp;<sp/>DXGI_ERROR_DEVICE_RESET</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recreate<sp/>the<sp/>RTVs<sp/>&amp;<sp/>DSVs:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a937fe925bd73dc37c24c0b728fabacee_1a937fe925bd73dc37c24c0b728fabacee" kindref="member">getRenderTargetFromBackBuffer</ref>();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_aecb2784a1b3b55dd7b1f90f52cd09297_1aecb2784a1b3b55dd7b1f90f52cd09297" kindref="member">getDepthBufferFromBackBuffer</ref>();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" kindref="member">m_pRenderer</ref>-&gt;isUsingOffscreenRendering()<sp/>)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a506691019858e4dbe5c5b4477f73f38f_1a506691019858e4dbe5c5b4477f73f38f" kindref="member">getRenderTargetOffscreen</ref>(<sp/>0u,<sp/><ref refid="texture__desc_8h_a6b4948cc0d12c93e6396540e02e2df58_1a6b4948cc0d12c93e6396540e02e2df58adf32226797485bb0becd7063638f54c5" kindref="member">RenderTargetViewMode::DefaultRT</ref><sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a084646abddc266bd1098f7fec6fc6d93_1a084646abddc266bd1098f7fec6fc6d93" kindref="member">getDepthBufferOffscreen</ref>(<sp/>0u,<sp/><ref refid="texture__desc_8h_a5aacc2000fea78d975de8fe06e3698f2_1a5aacc2000fea78d975de8fe06e3698f2a968332242896839ab1a3ac1040c11ae9" kindref="member">DepthStencilViewMode::DefaultDS</ref><sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assert<sp/>that<sp/>window<sp/>width/height<sp/>is<sp/>equal<sp/>to<sp/>swap-chain<sp/>width/height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>DXGI_SWAP_CHAIN_DESC<sp/>desc;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a796263d2d6b5e79e1fd4029fb6ebf58d_1a796263d2d6b5e79e1fd4029fb6ebf58d" kindref="member">POD_ZERO</ref>(<sp/>desc<sp/>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref>-&gt;GetDesc(<sp/>&amp;desc<sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>desc.BufferDesc.Width<sp/>==<sp/>newWidth<sp/>&amp;&amp;<sp/>desc.BufferDesc.Height<sp/>==<sp/>newHeight,<sp/></highlight><highlight class="stringliteral">&quot;Resizing<sp/>malfunction!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" kindref="member">m_pRenderer</ref>-&gt;recreate(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;reportingNexus<sp/>=<sp/><ref refid="classReportingNexus_a56fd3891e87dd3c034b8cfd7c84cfe16_1a56fd3891e87dd3c034b8cfd7c84cfe16" kindref="member">ReportingNexus::getInstance</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classIReporter" kindref="compound">IReporter&lt;SwapChainResizedEvent&gt;</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>reportingNexus<sp/>).notifyListeners(<sp/><ref refid="structSwapChainResizedEvent" kindref="compound">SwapChainResizedEvent</ref>{*</highlight><highlight class="keyword">this</highlight><highlight class="normal">}<sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>cameras</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCameraManager_ac7e6b0996395dcaaa889d17d5a8a639e_1ac7e6b0996395dcaaa889d17d5a8a639e" kindref="member">CameraManager::getInstance</ref>().<ref refid="classCameraManager_a549ef1d47bd5fd7294c6213c7e4e8dd1_1a549ef1d47bd5fd7294c6213c7e4e8dd1" kindref="member">onWindowResize</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>caman.getActiveCamera().setTethered(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="classGraphics_a7dce5b31ab15931acd9812956a118ab2_1a7dce5b31ab15931acd9812956a118ab2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a7dce5b31ab15931acd9812956a118ab2_1a7dce5b31ab15931acd9812956a118ab2" kindref="member">Graphics::setupMonitors</ref>()</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*pMainAdapter<sp/>=<sp/><ref refid="classGraphics_a0b498c6167c3a63bf4539d04110ca63f_1a0b498c6167c3a63bf4539d04110ca63f" kindref="member">s_adapters</ref>[0].getAdapter();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enumerate<sp/>adapter<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>IDXGIOutput*<sp/>output;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>pMainAdapter-&gt;EnumOutputs(<sp/>i,<sp/>&amp;output<sp/>)<sp/>!=<sp/>DXGI_ERROR_NOT_FOUND<sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DXGI_OUTPUT_DESC<sp/>desc;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;GetDesc(<sp/>&amp;desc<sp/>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>&gt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="graphics_8h_a93ba40510117bb29955d8a89703f449b_1a93ba40510117bb29955d8a89703f449b" kindref="member">THROW_GRAPHICS_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Multiple<sp/>monitors<sp/>are<sp/>not<sp/>currently<sp/>supported.<sp/>Please<sp/>set<sp/>only<sp/>1<sp/>monitor<sp/>per<sp/>graphics<sp/>card<sp/>for<sp/>use<sp/>in<sp/>this<sp/>application.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>mwrl::ComPtr&lt;IDXGIOutput&gt;<sp/>dxgiOutput;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref>-&gt;GetContainingOutput(<sp/>&amp;dxgiOutput<sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>dxgiOutput.As(<sp/>&amp;<ref refid="classGraphics_a6305d6fcb9798d15ed15dead4c3fc3a5_1a6305d6fcb9798d15ed15dead4c3fc3a5" kindref="member">m_pDxgiOutput</ref><sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*primaryOutputMonitor<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OutputMonitorPrimary&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a6305d6fcb9798d15ed15dead4c3fc3a5_1a6305d6fcb9798d15ed15dead4c3fc3a5" kindref="member">m_pDxgiOutput</ref>-&gt;SetPrivateData(<sp/>WKPDID_D3DDebugObjectName,<sp/>(UINT)<sp/>strlen(<sp/>primaryOutputMonitor<sp/>),<sp/>primaryOutputMonitor<sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="classGraphics_ac24292486c6316265844e447ecf3fe6d_1ac24292486c6316265844e447ecf3fe6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ac24292486c6316265844e447ecf3fe6d_1ac24292486c6316265844e447ecf3fe6d" kindref="member">Graphics::getRefreshRate</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>DXGI_MODE_DESC1<sp/>emptyMode{};</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>DXGI_MODE_DESC1<sp/>modeDesc;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_a6305d6fcb9798d15ed15dead4c3fc3a5_1a6305d6fcb9798d15ed15dead4c3fc3a5" kindref="member">m_pDxgiOutput</ref>-&gt;FindClosestMatchingMode1(<sp/>&amp;emptyMode,<sp/>&amp;modeDesc,<sp/><ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>.Get()<sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>modeDesc.RefreshRate.Numerator<sp/>)<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>modeDesc.RefreshRate.Denominator<sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="classGraphics_a320484260cb43b55ed1c4e0a468a1fa2_1a320484260cb43b55ed1c4e0a468a1fa2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a320484260cb43b55ed1c4e0a468a1fa2_1a320484260cb43b55ed1c4e0a468a1fa2" kindref="member">Graphics::getFrameNum</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ae0b5cbf6ca77fd072fbd23ad50c9336d_1ae0b5cbf6ca77fd072fbd23ad50c9336d" kindref="member">m_currentFrame</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="classGraphics_a48c55f80bdfdba34f8282ddc4c656e8a_1a48c55f80bdfdba34f8282ddc4c656e8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a48c55f80bdfdba34f8282ddc4c656e8a_1a48c55f80bdfdba34f8282ddc4c656e8a" kindref="member">Graphics::runRenderer</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" kindref="member">m_pRenderer</ref>-&gt;run(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classGraphics_ad411222985a4f1db857bbd79a9d324db_1ad411222985a4f1db857bbd79a9d324db" refkind="member"><highlight class="normal"><ref refid="classren_1_1Renderer" kindref="compound">ren::Renderer</ref>&amp;<sp/><ref refid="classGraphics_ad411222985a4f1db857bbd79a9d324db_1ad411222985a4f1db857bbd79a9d324db" kindref="member">Graphics::getRenderer</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" kindref="member">m_pRenderer</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="classGraphics_a2318eb0a55cbadf1eeeb7fe565b6b5cb_1a2318eb0a55cbadf1eeeb7fe565b6b5cb" refkind="member"><highlight class="normal"><ref refid="classren_1_1Renderer3d" kindref="compound">ren::Renderer3d</ref>&amp;<sp/><ref refid="classGraphics_a2318eb0a55cbadf1eeeb7fe565b6b5cb_1a2318eb0a55cbadf1eeeb7fe565b6b5cb" kindref="member">Graphics::getRenderer3d</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/><ref refid="classGraphics_a23f562aa7303bb49e73bb104a7d50271_1a23f562aa7303bb49e73bb104a7d50271" kindref="member">m_pRenderer3d</ref>,<sp/></highlight><highlight class="stringliteral">&quot;3d<sp/>Renderer<sp/>not<sp/>in<sp/>place!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classGraphics_a23f562aa7303bb49e73bb104a7d50271_1a23f562aa7303bb49e73bb104a7d50271" kindref="member">m_pRenderer3d</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="classGraphics_ab1d1528c7a038c5ed47d392718603a7c_1ab1d1528c7a038c5ed47d392718603a7c" refkind="member"><highlight class="normal"><ref refid="classren_1_1Renderer2d" kindref="compound">ren::Renderer2d</ref>&amp;<sp/><ref refid="classGraphics_ab1d1528c7a038c5ed47d392718603a7c_1ab1d1528c7a038c5ed47d392718603a7c" kindref="member">Graphics::getRenderer2d</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/><ref refid="classGraphics_ae24eda5d4c47a906eafa9555bf76c70e_1ae24eda5d4c47a906eafa9555bf76c70e" kindref="member">m_pRenderer2d</ref>,<sp/></highlight><highlight class="stringliteral">&quot;2d<sp/>Renderer<sp/>not<sp/>in<sp/>place!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classGraphics_ae24eda5d4c47a906eafa9555bf76c70e_1ae24eda5d4c47a906eafa9555bf76c70e" kindref="member">m_pRenderer2d</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="classGraphics_a9c3fa6f796b990c8d62a77bb2146740c_1a9c3fa6f796b990c8d62a77bb2146740c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a9c3fa6f796b990c8d62a77bb2146740c_1a9c3fa6f796b990c8d62a77bb2146740c" kindref="member">Graphics::profile</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_PROFILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nPresents<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref>-&gt;GetLastPresentCount(<sp/>&amp;nPresents<sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKeyConsole" kindref="compound">KeyConsole</ref>&amp;<sp/>console<sp/>=<sp/><ref refid="classKeyConsole_a31cfe6a77156baf79a0a74ea338c6e18_1a31cfe6a77156baf79a0a74ea338c6e18" kindref="member">KeyConsole::getInstance</ref>();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>console.<ref refid="classKeyConsole_a07362c63c978e15bb23d2a43ab697e3a_1a07362c63c978e15bb23d2a43ab697e3a" kindref="member">print</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Present<sp/>counts<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<sp/>nPresents<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>only<sp/>be<sp/>used<sp/>on<sp/>flip<sp/>mode<sp/>swap<sp/>chains<sp/>or<sp/>when<sp/>fullscreen<sp/>exclusive<sp/>mode<sp/>is<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>DXGI_FRAME_STATISTICS<sp/>frameStats;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref>-&gt;GetFrameStatistics(<sp/>&amp;frameStats<sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>query<sp/>frameStats<sp/>for<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="classGraphics_a658256d93cbb6e78b8b0ecb319e38ad5_1a658256d93cbb6e78b8b0ecb319e38ad5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a658256d93cbb6e78b8b0ecb319e38ad5_1a658256d93cbb6e78b8b0ecb319e38ad5" kindref="member">Graphics::clearShaderSlots</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clearing<sp/>shader<sp/>input<sp/>slots<sp/>to<sp/>prevent<sp/>simultaneous<sp/>in/out<sp/>binds<sp/>carried<sp/>over<sp/>from<sp/>previous<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>to<sp/>prevent<sp/>OMSetRenderTargets<sp/>state<sp/>hazard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>ID3D11ShaderResourceView<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pNullSrv<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>diffuse<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref>-&gt;PSSetShaderResources(<sp/>0u,<sp/>1u,<sp/>&amp;pNullSrv<sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_adc614cf54b03c9652582d9a16f387aff_1adc614cf54b03c9652582d9a16f387aff" kindref="member">DXGI_GET_QUEUE_INFO_GFX</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specular<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref>-&gt;PSSetShaderResources(<sp/>1u,<sp/>1u,<sp/>&amp;pNullSrv<sp/>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_adc614cf54b03c9652582d9a16f387aff_1adc614cf54b03c9652582d9a16f387aff" kindref="member">DXGI_GET_QUEUE_INFO_GFX</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref>-&gt;PSSetShaderResources(<sp/>2u,<sp/>1u,<sp/>&amp;pNullSrv<sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_adc614cf54b03c9652582d9a16f387aff_1adc614cf54b03c9652582d9a16f387aff" kindref="member">DXGI_GET_QUEUE_INFO_GFX</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shadow<sp/>cube<sp/>map<sp/>array<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref>-&gt;PSSetShaderResources(<sp/>3u,<sp/>1u,<sp/>&amp;pNullSrv<sp/>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shadow<sp/>map<sp/>array<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_pImmediateContext-&gt;PSSetShaderResources(<sp/>4u,<sp/>1u,<sp/>&amp;pNullSrv<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_adc614cf54b03c9652582d9a16f387aff_1adc614cf54b03c9652582d9a16f387aff" kindref="member">DXGI_GET_QUEUE_INFO_GFX</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="classGraphics_aa810ea01a036c99e63ca86974ff85d13_1aa810ea01a036c99e63ca86974ff85d13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_aa810ea01a036c99e63ca86974ff85d13_1aa810ea01a036c99e63ca86974ff85d13" kindref="member">Graphics::cleanState</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacegph__mode_aea02034656cf9c2fe5f8de0f20497209_1aea02034656cf9c2fe5f8de0f20497209" kindref="member">gph_mode::get</ref>()<sp/>==<sp/><ref refid="namespacegph__mode_ac01893bc47c796c0175b9ef51d09bf01_1ac01893bc47c796c0175b9ef51d09bf01ab9ccae78a7ef0f76b67c0f0d858990e3" kindref="member">gph_mode::_3D</ref><sp/>)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a658256d93cbb6e78b8b0ecb319e38ad5_1a658256d93cbb6e78b8b0ecb319e38ad5" kindref="member">clearShaderSlots</ref>();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref>-&gt;ClearState();<sp/><sp/></highlight><highlight class="comment">//<sp/>release<sp/>all<sp/>bindable<sp/>state<sp/>and<sp/>set<sp/>a<sp/>default<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dc<sp/>:<sp/><ref refid="classGraphics_a2e75ada04a8515bf3504a539112bba05_1a2e75ada04a8515bf3504a539112bba05" kindref="member">m_commandLists</ref><sp/>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dc<sp/>)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref>-&gt;FinishCommandList(<sp/>FALSE,<sp/>&amp;dc<sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;Release();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref>-&gt;Flush();<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flush<sp/>any<sp/>remaining<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D2D_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_p2DContext-&gt;Flush();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="classGraphics_ac25c31fbc763dc6970ae9c730b441129_1ac25c31fbc763dc6970ae9c730b441129" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ac25c31fbc763dc6970ae9c730b441129_1ac25c31fbc763dc6970ae9c730b441129" kindref="member">Graphics::beginFrame</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classGraphics_ae0b5cbf6ca77fd072fbd23ad50c9336d_1ae0b5cbf6ca77fd072fbd23ad50c9336d" kindref="member">m_currentFrame</ref>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vtune__itt__domain_8h_a2b4564605f44731f2a1a713ad63e54d0_1a2b4564605f44731f2a1a713ad63e54d0" kindref="member">PROFILE_VTUNE_ITT_TASK_BEGIN</ref>(<sp/>pStrIttBeginRendering<sp/>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacegph__mode_aea02034656cf9c2fe5f8de0f20497209_1aea02034656cf9c2fe5f8de0f20497209" kindref="member">gph_mode::get</ref>()<sp/>==<sp/><ref refid="namespacegph__mode_ac01893bc47c796c0175b9ef51d09bf01_1ac01893bc47c796c0175b9ef51d09bf01ab9ccae78a7ef0f76b67c0f0d858990e3" kindref="member">gph_mode::_3D</ref><sp/>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>imgui<sp/>new<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplDX11_NewFrame();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplWin32_NewFrame();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::NewFrame();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a658256d93cbb6e78b8b0ecb319e38ad5_1a658256d93cbb6e78b8b0ecb319e38ad5" kindref="member">clearShaderSlots</ref>();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D2D_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin2dDraw();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cpuBuffer2dSize<sp/>=<sp/>(size_t)<ref refid="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" kindref="member">m_width</ref><sp/>*<sp/><ref refid="classGraphics_abeb2d8d4b81e71ad34102c1526ef28b6_1abeb2d8d4b81e71ad34102c1526ef28b6" kindref="member">m_height</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(<sp/><ref refid="classGraphics_a756515d158986ac14d289551b3531ed8_1a756515d158986ac14d289551b3531ed8" kindref="member">m_pCpuBuffer</ref>,<sp/>0u,<sp/>cpuBuffer2dSize<sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vtune__itt__domain_8h_acb6ddf8e1531447abcfe95738dd78b97_1acb6ddf8e1531447abcfe95738dd78b97" kindref="member">PROFILE_VTUNE_ITT_TASK_END</ref>;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="classGraphics_a3db48982641ea1fb21947e1524af9648_1a3db48982641ea1fb21947e1524af9648" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a3db48982641ea1fb21947e1524af9648_1a3db48982641ea1fb21947e1524af9648" kindref="member">Graphics::endFrame</ref>()</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" kindref="member">m_pRenderer</ref>-&gt;reset();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vtune__itt__domain_8h_a2b4564605f44731f2a1a713ad63e54d0_1a2b4564605f44731f2a1a713ad63e54d0" kindref="member">PROFILE_VTUNE_ITT_TASK_BEGIN</ref>(<sp/>pStrIttEndRendering<sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacegph__mode_aea02034656cf9c2fe5f8de0f20497209_1aea02034656cf9c2fe5f8de0f20497209" kindref="member">gph_mode::get</ref>()<sp/>==<sp/><ref refid="namespacegph__mode_ac01893bc47c796c0175b9ef51d09bf01_1ac01893bc47c796c0175b9ef51d09bf01ab9ccae78a7ef0f76b67c0f0d858990e3" kindref="member">gph_mode::_3D</ref><sp/>)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Render();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplDX11_RenderDrawData(<sp/>ImGui::GetDrawData()<sp/>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D2D_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end2dDraw();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_aefe40c94ce078f84342864b959543c99_1aefe40c94ce078f84342864b959543c99" kindref="member">present</ref>();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vtune__itt__domain_8h_acb6ddf8e1531447abcfe95738dd78b97_1acb6ddf8e1531447abcfe95738dd78b97" kindref="member">PROFILE_VTUNE_ITT_TASK_END</ref>;</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="classGraphics_aefe40c94ce078f84342864b959543c99_1aefe40c94ce078f84342864b959543c99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_aefe40c94ce078f84342864b959543c99_1aefe40c94ce078f84342864b959543c99" kindref="member">Graphics::present</ref>()</highlight></codeline>
<codeline lineno="549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSettingsManager" kindref="compound">SettingsManager</ref><sp/>&amp;settings<sp/>=<sp/><ref refid="classSettingsManager_a92617e378ef941b075dd8343d283bd00_1a92617e378ef941b075dd8343d283bd00" kindref="member">SettingsManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasVsync<sp/>=<sp/>settings.<ref refid="classSettingsManager_a2634a5f2822112f9bf7cd42dcf440288_1a2634a5f2822112f9bf7cd42dcf440288" kindref="member">getSettings</ref>().<ref refid="structSettingsManager_1_1Settings_a5e2af2ae92348ac3947844c6efb9f63c_1a5e2af2ae92348ac3947844c6efb9f63c" kindref="member">bVSync</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(<sp/>settings.iMaxFps<sp/>&gt;<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>//<sp/>#TODO:<sp/>enable<sp/>frame<sp/>limiter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>float<sp/>waitForMs<sp/>=<sp/>minFrameTimeMs<sp/>-<sp/>frameTime;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(<sp/>waitForMs<sp/>&gt;<sp/>0.0f<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>m_gameTimer.sleepFor(<sp/>waitForMs<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>FLIP_PRESENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>DXGI_PRESENT_PARAMETERS<sp/>presentParams;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a796263d2d6b5e79e1fd4029fb6ebf58d_1a796263d2d6b5e79e1fd4029fb6ebf58d" kindref="member">POD_ZERO</ref>(<sp/>presentParams<sp/>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#FIXME:<sp/>setting<sp/>VSync<sp/>off<sp/>during<sp/>flip<sp/>model<sp/>doesn&apos;t<sp/>make<sp/>it<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref>-&gt;Present1(<sp/>hasVsync<sp/>?<sp/>settings.<ref refid="classSettingsManager_a2634a5f2822112f9bf7cd42dcf440288_1a2634a5f2822112f9bf7cd42dcf440288" kindref="member">getSettings</ref>().<ref refid="structSettingsManager_1_1Settings_abdcf08e1d968e1808a0b958b03b98da6_1abdcf08e1d968e1808a0b958b03b98da6" kindref="member">iPresentInterval</ref><sp/>:<sp/>0u,<sp/>m_presentFlags,<sp/>&amp;presentParams<sp/>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref>-&gt;Present(<sp/>hasVsync<sp/>?<sp/>1u<sp/>:<sp/>0u,<sp/>0u<sp/>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_adc614cf54b03c9652582d9a16f387aff_1adc614cf54b03c9652582d9a16f387aff" kindref="member">DXGI_GET_QUEUE_INFO_GFX</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hres<sp/>==<sp/>DXGI_ERROR_DEVICE_REMOVED<sp/>)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="graphics_8h_a93ba40510117bb29955d8a89703f449b_1a93ba40510117bb29955d8a89703f449b" kindref="member">THROW_GRAPHICS_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Device<sp/>Removed<sp/>exception<sp/>triggered!\nReason:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>-&gt;GetDeviceRemovedReason()<sp/>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>hres<sp/>==<sp/>DXGI_ERROR_INVALID_CALL<sp/>)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="graphics_8h_a93ba40510117bb29955d8a89703f449b_1a93ba40510117bb29955d8a89703f449b" kindref="member">THROW_GRAPHICS_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Presentation<sp/>parameters!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="classGraphics_a3c4a1c6f6675b97cedf9a0f45901212d_1a3c4a1c6f6675b97cedf9a0f45901212d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a3c4a1c6f6675b97cedf9a0f45901212d_1a3c4a1c6f6675b97cedf9a0f45901212d" kindref="member">Graphics::draw</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>count<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pImmediateContext-&gt;Draw(<sp/>count,<sp/>0u<sp/>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_adc614cf54b03c9652582d9a16f387aff_1adc614cf54b03c9652582d9a16f387aff" kindref="member">DXGI_GET_QUEUE_INFO_GFX</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="classGraphics_a29fa45ba5e44f5e574e4d0c0298bd02b_1a29fa45ba5e44f5e574e4d0c0298bd02b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a29fa45ba5e44f5e574e4d0c0298bd02b_1a29fa45ba5e44f5e574e4d0c0298bd02b" kindref="member">Graphics::drawIndexed</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>count<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vtune__itt__domain_8h_a2b4564605f44731f2a1a713ad63e54d0_1a2b4564605f44731f2a1a713ad63e54d0" kindref="member">PROFILE_VTUNE_ITT_TASK_BEGIN</ref>(<sp/>pStrIttDrawIndexed<sp/>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSettingsManager" kindref="compound">SettingsManager</ref><sp/>&amp;setMan<sp/>=<sp/><ref refid="classSettingsManager_a92617e378ef941b075dd8343d283bd00_1a92617e378ef941b075dd8343d283bd00" kindref="member">SettingsManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>setMan.<ref refid="classSettingsManager_a2634a5f2822112f9bf7cd42dcf440288_1a2634a5f2822112f9bf7cd42dcf440288" kindref="member">getSettings</ref>().<ref refid="structSettingsManager_1_1Settings_a324fc6a4ad4adff120ba68bc6cc19cd7_1a324fc6a4ad4adff120ba68bc6cc19cd7" kindref="member">bMultithreadedRendering</ref><sp/>)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playbackDeferredCommandList();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pImmediateContext-&gt;DrawIndexed(<sp/>count,<sp/>0u,<sp/>0u<sp/>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_adc614cf54b03c9652582d9a16f387aff_1adc614cf54b03c9652582d9a16f387aff" kindref="member">DXGI_GET_QUEUE_INFO_GFX</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vtune__itt__domain_8h_acb6ddf8e1531447abcfe95738dd78b97_1acb6ddf8e1531447abcfe95738dd78b97" kindref="member">PROFILE_VTUNE_ITT_TASK_END</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610" refid="classGraphics_a1e53b789df983b36aedcc1357eae4bf8_1a1e53b789df983b36aedcc1357eae4bf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a1e53b789df983b36aedcc1357eae4bf8_1a1e53b789df983b36aedcc1357eae4bf8" kindref="member">Graphics::drawIndexedInstanced</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>indexCount,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>instanceCount<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vtune__itt__domain_8h_a2b4564605f44731f2a1a713ad63e54d0_1a2b4564605f44731f2a1a713ad63e54d0" kindref="member">PROFILE_VTUNE_ITT_TASK_BEGIN</ref>(<sp/>pStrIttDrawIndexedInstanced<sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSettingsManager" kindref="compound">SettingsManager</ref><sp/>&amp;setMan<sp/>=<sp/><ref refid="classSettingsManager_a92617e378ef941b075dd8343d283bd00_1a92617e378ef941b075dd8343d283bd00" kindref="member">SettingsManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>setMan.<ref refid="classSettingsManager_a2634a5f2822112f9bf7cd42dcf440288_1a2634a5f2822112f9bf7cd42dcf440288" kindref="member">getSettings</ref>().<ref refid="structSettingsManager_1_1Settings_a324fc6a4ad4adff120ba68bc6cc19cd7_1a324fc6a4ad4adff120ba68bc6cc19cd7" kindref="member">bMultithreadedRendering</ref><sp/>)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_pImmediateContext-&gt;DrawIndexedInstanced();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_adc614cf54b03c9652582d9a16f387aff_1adc614cf54b03c9652582d9a16f387aff" kindref="member">DXGI_GET_QUEUE_INFO_GFX</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vtune__itt__domain_8h_acb6ddf8e1531447abcfe95738dd78b97_1acb6ddf8e1531447abcfe95738dd78b97" kindref="member">PROFILE_VTUNE_ITT_TASK_END</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="classGraphics_a4d6cdd9c40b62e88ede5f063b3192d29_1a4d6cdd9c40b62e88ede5f063b3192d29" refkind="member"><highlight class="normal"><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref>*&amp;<sp/><ref refid="classGraphics_a4d6cdd9c40b62e88ede5f063b3192d29_1a4d6cdd9c40b62e88ede5f063b3192d29" kindref="member">Graphics::cpuBuffer</ref>()</highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a756515d158986ac14d289551b3531ed8_1a756515d158986ac14d289551b3531ed8" kindref="member">m_pCpuBuffer</ref>;</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="classGraphics_a1318c2c7f400f63a1b70391bebab4673_1a1318c2c7f400f63a1b70391bebab4673" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a1318c2c7f400f63a1b70391bebab4673_1a1318c2c7f400f63a1b70391bebab4673" kindref="member">Graphics::setViewMatrix</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMMATRIX<sp/>&amp;cam<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>m_view<sp/>=<sp/>cam;</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="classGraphics_a2ae47898ec3e6e2a64b3a8149a26ca6d_1a2ae47898ec3e6e2a64b3a8149a26ca6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a2ae47898ec3e6e2a64b3a8149a26ca6d_1a2ae47898ec3e6e2a64b3a8149a26ca6d" kindref="member">Graphics::setProjectionMatrix</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMMATRIX<sp/>&amp;proj<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>m_projection<sp/>=<sp/>proj;</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="classGraphics_a51c3473e1b393df2a67432a10a8979cc_1a51c3473e1b393df2a67432a10a8979cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMMATRIX&amp;<sp/><ref refid="classGraphics_a51c3473e1b393df2a67432a10a8979cc_1a51c3473e1b393df2a67432a10a8979cc" kindref="member">Graphics::getViewMatrix</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a953a1c18c19e3ff6a84e43ddab99da2a_1a953a1c18c19e3ff6a84e43ddab99da2a" kindref="member">m_view</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="classGraphics_a89eb80f0fd26a04206c4654c9928ca57_1a89eb80f0fd26a04206c4654c9928ca57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMMATRIX&amp;<sp/><ref refid="classGraphics_a89eb80f0fd26a04206c4654c9928ca57_1a89eb80f0fd26a04206c4654c9928ca57" kindref="member">Graphics::getProjectionMatrix</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a6492e28efe827048fcf68db711c33e69_1a6492e28efe827048fcf68db711c33e69" kindref="member">m_projection</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="classGraphics_af1489a7a2f0b6cf0f94f31ccb03943fa_1af1489a7a2f0b6cf0f94f31ccb03943fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classGraphics_af1489a7a2f0b6cf0f94f31ccb03943fa_1af1489a7a2f0b6cf0f94f31ccb03943fa" kindref="member">Graphics::getClientWidth</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" kindref="member">m_width</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="classGraphics_a6b1ed076f5063af9f5814d23df30dc24_1a6b1ed076f5063af9f5814d23df30dc24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a6b1ed076f5063af9f5814d23df30dc24_1a6b1ed076f5063af9f5814d23df30dc24" kindref="member">Graphics::getClientHeight</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_abeb2d8d4b81e71ad34102c1526ef28b6_1abeb2d8d4b81e71ad34102c1526ef28b6" kindref="member">m_height</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663" refid="classGraphics_a937fe925bd73dc37c24c0b728fabacee_1a937fe925bd73dc37c24c0b728fabacee" refkind="member"><highlight class="normal">std::shared_ptr&lt;RenderTargetOutput&gt;<sp/><ref refid="classGraphics_a937fe925bd73dc37c24c0b728fabacee_1a937fe925bd73dc37c24c0b728fabacee" kindref="member">Graphics::getRenderTargetFromBackBuffer</ref>()</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classGraphics_a02e3b57e9a06dca3b04e368cae000820_1a02e3b57e9a06dca3b04e368cae000820" kindref="member">m_pBackBufferRtv</ref><sp/>)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Microsoft::WRL::ComPtr&lt;ID3D11Texture2D&gt;<sp/>pD3dBackBufferTex;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/><ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref>-&gt;GetBuffer(<sp/>0u,<sp/>__uuidof(<sp/>ID3D11Texture2D<sp/>),<sp/>&amp;pD3dBackBufferTex<sp/>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a02e3b57e9a06dca3b04e368cae000820_1a02e3b57e9a06dca3b04e368cae000820" kindref="member">m_pBackBufferRtv</ref><sp/>=<sp/>std::make_shared&lt;RenderTargetOutput&gt;(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>pD3dBackBufferTex.Get()<sp/>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a02e3b57e9a06dca3b04e368cae000820_1a02e3b57e9a06dca3b04e368cae000820" kindref="member">m_pBackBufferRtv</ref>-&gt;setDebugObjectName(<sp/></highlight><highlight class="stringliteral">&quot;BackBufferRenderTargetView&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a02e3b57e9a06dca3b04e368cae000820_1a02e3b57e9a06dca3b04e368cae000820" kindref="member">m_pBackBufferRtv</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679" refid="classGraphics_aecb2784a1b3b55dd7b1f90f52cd09297_1aecb2784a1b3b55dd7b1f90f52cd09297" refkind="member"><highlight class="normal">std::shared_ptr&lt;DepthStencilOutput&gt;<sp/><ref refid="classGraphics_aecb2784a1b3b55dd7b1f90f52cd09297_1aecb2784a1b3b55dd7b1f90f52cd09297" kindref="member">Graphics::getDepthBufferFromBackBuffer</ref>()</highlight></codeline>
<codeline lineno="680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classGraphics_a974483c4adc9f12211ca4916594f47f8_1a974483c4adc9f12211ca4916594f47f8" kindref="member">m_pBackBufferDsv</ref><sp/>)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a974483c4adc9f12211ca4916594f47f8_1a974483c4adc9f12211ca4916594f47f8" kindref="member">m_pBackBufferDsv</ref><sp/>=<sp/>std::make_shared&lt;DepthStencilOutput&gt;(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a974483c4adc9f12211ca4916594f47f8_1a974483c4adc9f12211ca4916594f47f8" kindref="member">m_pBackBufferDsv</ref>-&gt;setDebugObjectName(<sp/></highlight><highlight class="stringliteral">&quot;BackBufferDepthStencilView&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a974483c4adc9f12211ca4916594f47f8_1a974483c4adc9f12211ca4916594f47f8" kindref="member">m_pBackBufferDsv</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="classGraphics_a506691019858e4dbe5c5b4477f73f38f_1a506691019858e4dbe5c5b4477f73f38f" refkind="member"><highlight class="normal">std::shared_ptr&lt;TextureOffscreenRT&gt;<sp/><ref refid="classGraphics_a506691019858e4dbe5c5b4477f73f38f_1a506691019858e4dbe5c5b4477f73f38f" kindref="member">Graphics::getRenderTargetOffscreen</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="texture__desc_8h_a6b4948cc0d12c93e6396540e02e2df58_1a6b4948cc0d12c93e6396540e02e2df58" kindref="member">RenderTargetViewMode</ref><sp/>rtvMode<sp/>)</highlight></codeline>
<codeline lineno="693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classGraphics_a38b40521639124e322cf9b63c1b6c26f_1a38b40521639124e322cf9b63c1b6c26f" kindref="member">m_pOffscreenRtv</ref><sp/>)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a38b40521639124e322cf9b63c1b6c26f_1a38b40521639124e322cf9b63c1b6c26f" kindref="member">m_pOffscreenRtv</ref><sp/>=<sp/>std::make_unique&lt;TextureOffscreenRT&gt;(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" kindref="member">m_width</ref>,<sp/><ref refid="classGraphics_abeb2d8d4b81e71ad34102c1526ef28b6_1abeb2d8d4b81e71ad34102c1526ef28b6" kindref="member">m_height</ref>,<sp/>slot,<sp/>rtvMode<sp/>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*offscreenRtv<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OffscreenRenderTargetTextureView1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a38b40521639124e322cf9b63c1b6c26f_1a38b40521639124e322cf9b63c1b6c26f" kindref="member">m_pOffscreenRtv</ref>-&gt;accessRtv()-&gt;d3dResource()-&gt;SetPrivateData(<sp/>WKPDID_D3DDebugObjectName,<sp/>(UINT)<sp/>strlen(<sp/>offscreenRtv<sp/>),<sp/>offscreenRtv<sp/>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a38b40521639124e322cf9b63c1b6c26f_1a38b40521639124e322cf9b63c1b6c26f" kindref="member">m_pOffscreenRtv</ref>;</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="classGraphics_a084646abddc266bd1098f7fec6fc6d93_1a084646abddc266bd1098f7fec6fc6d93" refkind="member"><highlight class="normal">std::shared_ptr&lt;TextureOffscreenDS&gt;<sp/><ref refid="classGraphics_a084646abddc266bd1098f7fec6fc6d93_1a084646abddc266bd1098f7fec6fc6d93" kindref="member">Graphics::getDepthBufferOffscreen</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="texture__desc_8h_a5aacc2000fea78d975de8fe06e3698f2_1a5aacc2000fea78d975de8fe06e3698f2" kindref="member">DepthStencilViewMode</ref><sp/>dsvMode<sp/>)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classGraphics_a22e51ce136cf34e39ac7745c4490de4d_1a22e51ce136cf34e39ac7745c4490de4d" kindref="member">m_pOffscreenDsv</ref><sp/>)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a22e51ce136cf34e39ac7745c4490de4d_1a22e51ce136cf34e39ac7745c4490de4d" kindref="member">m_pOffscreenDsv</ref><sp/>=<sp/>std::make_unique&lt;TextureOffscreenDS&gt;(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" kindref="member">m_width</ref>,<sp/><ref refid="classGraphics_abeb2d8d4b81e71ad34102c1526ef28b6_1abeb2d8d4b81e71ad34102c1526ef28b6" kindref="member">m_height</ref>,<sp/>slot,<sp/>dsvMode<sp/>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*offscreenDsv<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;OffscreenDepthStencilTextureView1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a22e51ce136cf34e39ac7745c4490de4d_1a22e51ce136cf34e39ac7745c4490de4d" kindref="member">m_pOffscreenDsv</ref>-&gt;accessDsv()-&gt;d3dResource()-&gt;SetPrivateData(<sp/>WKPDID_D3DDebugObjectName,<sp/>(UINT)<sp/>strlen(<sp/>offscreenDsv<sp/>),<sp/>offscreenDsv<sp/>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a22e51ce136cf34e39ac7745c4490de4d_1a22e51ce136cf34e39ac7745c4490de4d" kindref="member">m_pOffscreenDsv</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="classGraphics_a9a6ad2b28b7f765c6c7ed63b664754d8_1a9a6ad2b28b7f765c6c7ed63b664754d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a9a6ad2b28b7f765c6c7ed63b664754d8_1a9a6ad2b28b7f765c6c7ed63b664754d8" kindref="member">Graphics::bindBackBufferAsInput</ref>()<sp/><sp/></highlight><highlight class="comment">//<sp/>#UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal">{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>mwrl::ComPtr&lt;ID3D11Texture2D&gt;<sp/>pD3dBackBufferTex;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/><ref refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" kindref="member">m_pSwapChain</ref>-&gt;GetBuffer(<sp/>0u,<sp/>__uuidof(<sp/>ID3D11Texture2D<sp/>),<sp/>&amp;pD3dBackBufferTex<sp/>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_TEXTURE2D_DESC<sp/>pD3dBackBufferTexDesc{};</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>pD3dBackBufferTex-&gt;GetDesc(<sp/>&amp;pD3dBackBufferTexDesc<sp/>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="namespaceutil_a71f689b172e5d8012806cf3f9b652fa3_1a71f689b172e5d8012806cf3f9b652fa3" kindref="member">util::isSetByNumber</ref>(<sp/>pD3dBackBufferTexDesc.BindFlags,<sp/>D3D11_BIND_SHADER_RESOURCE<sp/>)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>requires<sp/>SwapChain&apos;s<sp/>desc<sp/>BufferUsage<sp/>to<sp/>have<sp/>`DXGI_USAGE_SHADER_INPUT`<sp/>flag<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="graphics_8h_a93ba40510117bb29955d8a89703f449b_1a93ba40510117bb29955d8a89703f449b" kindref="member">THROW_GRAPHICS_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>bind<sp/>the<sp/>back<sp/>buffer<sp/>texture<sp/>as<sp/>Input<sp/>to<sp/>the<sp/>pipeline!<sp/>If<sp/>you<sp/>are<sp/>using<sp/>pre-D3D12<sp/>API<sp/>use<sp/>a<sp/>different<sp/>bufferUsage<sp/>-<sp/>like<sp/>`DXGI_USAGE_SHADER_INPUT`&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_SHADER_RESOURCE_VIEW_DESC<sp/>backBufferSrvDesc<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>backBufferSrvDesc.Format<sp/>=<sp/>pD3dBackBufferTexDesc.Format;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>backBufferSrvDesc.ViewDimension<sp/>=<sp/>D3D11_SRV_DIMENSION_TEXTURE2D;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>backBufferSrvDesc.Texture2D.MostDetailedMip<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>backBufferSrvDesc.Texture2D.MipLevels<sp/>=<sp/>1u;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>mwrl::ComPtr&lt;ID3D11ShaderResourceView&gt;<sp/>pBackBufferSrv;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>-&gt;CreateShaderResourceView(<sp/>pD3dBackBufferTex.Get(),<sp/>&amp;backBufferSrvDesc,<sp/>&amp;pBackBufferSrv<sp/>);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIRenderTargetView_aa14b454e81f88129fc8737b6c7ba3c39_1aa14b454e81f88129fc8737b6c7ba3c39" kindref="member">IRenderTargetView::unbind</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>bind<sp/>to<sp/>slot<sp/>0<sp/>the<sp/>back<sp/>buffer<sp/>srv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" kindref="member">m_pImmediateContext</ref>-&gt;PSSetShaderResources(<sp/>0u,<sp/>1u,<sp/>pBackBufferSrv.GetAddressOf()<sp/>);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_adc614cf54b03c9652582d9a16f387aff_1adc614cf54b03c9652582d9a16f387aff" kindref="member">DXGI_GET_QUEUE_INFO_GFX</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><ref refid="classDxgiInfoQueue" kindref="compound">DxgiInfoQueue</ref>&amp;<sp/>Graphics::getInfoQueue()</highlight></codeline>
<codeline lineno="750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_infoQueue;</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755" refid="classGraphics_ace65c05b562f91e3270dc6c12836e0d8_1ace65c05b562f91e3270dc6c12836e0d8" refkind="member"><highlight class="normal"><ref refid="classKeyTimer" kindref="compound">KeyTimer&lt;std::chrono::microseconds&gt;</ref>&amp;<sp/><ref refid="classGraphics_ace65c05b562f91e3270dc6c12836e0d8_1ace65c05b562f91e3270dc6c12836e0d8" kindref="member">Graphics::getFpsTimer</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ad6709c3134a823fa8ef55de9542cf2f9_1ad6709c3134a823fa8ef55de9542cf2f9" kindref="member">m_fpsTimer</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="classGraphics_a537fbfc5679f9f4001cdaa53ac233bb7_1a537fbfc5679f9f4001cdaa53ac233bb7" refkind="member"><highlight class="normal"><ref refid="classKeyTimer" kindref="compound">KeyTimer&lt;std::chrono::seconds&gt;</ref>&amp;<sp/><ref refid="classGraphics_a537fbfc5679f9f4001cdaa53ac233bb7_1a537fbfc5679f9f4001cdaa53ac233bb7" kindref="member">Graphics::getRealTimer</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ab51ca0bbae080a1912493a2ef70cdec1_1ab51ca0bbae080a1912493a2ef70cdec1" kindref="member">m_realTimer</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="classGraphics_a01fc5b831899ec962977d6e132575283_1a01fc5b831899ec962977d6e132575283" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a01fc5b831899ec962977d6e132575283_1a01fc5b831899ec962977d6e132575283" kindref="member">Graphics::getDisplayMode</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ae0c36774c2093f5cfc1424187b0e1c31_1ae0c36774c2093f5cfc1424187b0e1c31" kindref="member">m_bFullscreenMode</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770" refid="classGraphics_a871f96e949cae3f78aeb35f441e4fe7a_1a871f96e949cae3f78aeb35f441e4fe7a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classGraphics_a01fc5b831899ec962977d6e132575283_1a01fc5b831899ec962977d6e132575283" kindref="member">Graphics::getDisplayMode</ref>()</highlight></codeline>
<codeline lineno="771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ae0c36774c2093f5cfc1424187b0e1c31_1ae0c36774c2093f5cfc1424187b0e1c31" kindref="member">m_bFullscreenMode</ref>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="classGraphics_ac0920b9480e1d140de868e7526d62074_1ac0920b9480e1d140de868e7526d62074" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ac0920b9480e1d140de868e7526d62074_1ac0920b9480e1d140de868e7526d62074" kindref="member">Graphics::recordDeferredCommandList</ref>()</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//HRESULT<sp/>hres;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hres<sp/>=<sp/>m_pDevice-&gt;CreateDeferredContext(<sp/>0,<sp/>&amp;pDeferredContexts<sp/>);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>ClearColor[4]<sp/>=<sp/>{<sp/>0.0f,<sp/>0.125f,<sp/>0.3f,<sp/>1.0f<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pDeferredContexts-&gt;ClearRenderTargetView(<sp/>pRenderTargetView,<sp/>ClearColor<sp/>);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//hres<sp/>=<sp/>pDeferredContexts-&gt;FinishCommandList(<sp/>FALSE,<sp/>&amp;pCommandList);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="classGraphics_ada2873db798d493f4bb95d4ccb25c203_1ada2873db798d493f4bb95d4ccb25c203" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ada2873db798d493f4bb95d4ccb25c203_1ada2873db798d493f4bb95d4ccb25c203" kindref="member">Graphics::playbackDeferredCommandList</ref>()</highlight></codeline>
<codeline lineno="788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(<sp/>pCommandList<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>m_pImmediateContext-&gt;ExecuteCommandList(<sp/>pCommandList,<sp/>TRUE<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795" refid="classGraphics_a355c17321d44862d7ef0f93416492d6a_1a355c17321d44862d7ef0f93416492d6a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a355c17321d44862d7ef0f93416492d6a_1a355c17321d44862d7ef0f93416492d6a" kindref="member">Graphics::createFactory</ref>()</highlight></codeline>
<codeline lineno="796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FLIP_PRESENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>CreateDXGIFactory1(<sp/>IID_PPV_ARGS(<sp/>&amp;<ref refid="classGraphics_ad5ab15e2a2efd332ba0a1a67ba232c83_1ad5ab15e2a2efd332ba0a1a67ba232c83" kindref="member">m_pDxgiFactory</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="comment">//#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>unsigned<sp/>dxgiFactoryFlags<sp/>=<sp/>0u;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>dxgiFactoryFlags<sp/>=<sp/>DXGI_CREATE_FACTORY_DEBUG;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>hres<sp/>=<sp/>CreateDXGIFactory2(<sp/>dxgiFactoryFlags,<sp/>IID_PPV_ARGS(<sp/>&amp;m_pDxgiFactory<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>CreateDXGIFactory1(<sp/>__uuidof(<sp/>IDXGIFactory1<sp/>),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classGraphics_ad5ab15e2a2efd332ba0a1a67ba232c83_1ad5ab15e2a2efd332ba0a1a67ba232c83" kindref="member">m_pDxgiFactory</ref>.GetAddressOf()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dxgiFactoryDebugName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;KeyDxgiFactory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_ad5ab15e2a2efd332ba0a1a67ba232c83_1ad5ab15e2a2efd332ba0a1a67ba232c83" kindref="member">m_pDxgiFactory</ref>-&gt;SetPrivateData(<sp/>WKPDID_D3DDebugObjectName,<sp/>(UINT)<sp/>strlen(<sp/>dxgiFactoryDebugName<sp/>),<sp/>dxgiFactoryDebugName<sp/>);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816" refid="classGraphics_a80cc8527cd2fab207205fc3962fba585_1a80cc8527cd2fab207205fc3962fba585" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a80cc8527cd2fab207205fc3962fba585_1a80cc8527cd2fab207205fc3962fba585" kindref="member">Graphics::createAdapters</ref>()</highlight></codeline>
<codeline lineno="817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>adapterIndex<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>IDXGIAdapter<sp/>*pAdapter<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IDXGIAdapter1<sp/>for<sp/>blt,<sp/>or<sp/>IDXGIAdapter2<sp/>for<sp/>flip<sp/>model,<sp/>or<sp/>#<sp/>for<sp/>DXGI<sp/>later<sp/>versions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>SUCCEEDED(<sp/><ref refid="classGraphics_ad5ab15e2a2efd332ba0a1a67ba232c83_1ad5ab15e2a2efd332ba0a1a67ba232c83" kindref="member">m_pDxgiFactory</ref>-&gt;EnumAdapters(<sp/>adapterIndex,<sp/>&amp;pAdapter<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a0b498c6167c3a63bf4539d04110ca63f_1a0b498c6167c3a63bf4539d04110ca63f" kindref="member">s_adapters</ref>.emplace_back(<sp/>pAdapter<sp/>);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adapterIndex<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828" refid="classGraphics_a5cc0d3b4dd8e0c60c55a67c31b3b64f9_1a5cc0d3b4dd8e0c60c55a67c31b3b64f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a5cc0d3b4dd8e0c60c55a67c31b3b64f9_1a5cc0d3b4dd8e0c60c55a67c31b3b64f9" kindref="member">Graphics::interrogateDirectxFeatures</ref>()</highlight></codeline>
<codeline lineno="829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>DirectX<sp/>Math<sp/>library<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!dx::XMVerifyCPUSupport()<sp/>)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBoxW(<sp/><ref refid="classGraphics_a0082e76df00907ea297d37abccd21d8f_1a0082e76df00907ea297d37abccd21d8f" kindref="member">m_hParentWnd</ref>,<sp/>L</highlight><highlight class="stringliteral">&quot;DirectX<sp/>Math<sp/>library<sp/>support<sp/>validation<sp/>failure.&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">,<sp/>MB_OK<sp/>);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>threading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_FEATURE_DATA_THREADING<sp/>threadingInfo;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>ZeroMemory(<sp/>&amp;threadingInfo,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>D3D11_FEATURE_DATA_THREADING<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/><ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>-&gt;CheckFeatureSupport(<sp/>D3D11_FEATURE::D3D11_FEATURE_THREADING,<sp/>&amp;threadingInfo,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>D3D11_FEATURE_DATA_THREADING<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::string_literals;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespacecon" kindref="compound">con</ref><sp/>=<sp/><ref refid="classKeyConsole_a31cfe6a77156baf79a0a74ea338c6e18_1a31cfe6a77156baf79a0a74ea338c6e18" kindref="member">KeyConsole::getInstance</ref>();</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecon" kindref="compound">con</ref>.log(<sp/>threadingInfo.DriverConcurrentCreates<sp/>?</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Resources<sp/>can<sp/>be<sp/>created<sp/>concurrently<sp/>on<sp/>multiple<sp/>threads.\n&quot;</highlight><highlight class="normal">s<sp/>:</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>DirectX<sp/>concurrency<sp/>possible\n&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecon" kindref="compound">con</ref>.log(<sp/>threadingInfo.DriverCommandLists<sp/>?</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Command<sp/>lists<sp/>are<sp/>supported<sp/>by<sp/>the<sp/>current<sp/>driver.\n&quot;</highlight><highlight class="normal">s<sp/>:</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Commands<sp/>lists<sp/>will<sp/>be<sp/>emulated<sp/>in<sp/>software.\n&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_FEATURE_DATA_D3D11_OPTIONS<sp/>d3d11HwOptions{};</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>-&gt;CheckFeatureSupport(<sp/>D3D11_FEATURE_D3D11_OPTIONS,<sp/>&amp;d3d11HwOptions,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>d3d11HwOptions<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!d3d11HwOptions.MapNoOverwriteOnDynamicConstantBuffer<sp/>)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecon" kindref="compound">con</ref>.log(<sp/></highlight><highlight class="stringliteral">&quot;Constant<sp/>Buffer<sp/>D3D11_MAP_WRITE_NO_OVERWRITE<sp/>unsupported!\n&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!d3d11HwOptions.MapNoOverwriteOnDynamicBufferSRV<sp/>)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecon" kindref="compound">con</ref>.log(<sp/></highlight><highlight class="stringliteral">&quot;Shader<sp/>Resource<sp/>View<sp/>D3D11_MAP_WRITE_NO_OVERWRITE<sp/>unsupported!\n&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>formatSupport;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>-&gt;CheckFormatSupport(<sp/>DXGI_FORMAT_B8G8R8A8_UNORM,<sp/>&amp;formatSupport<sp/>);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="classGraphics_a4d2ce74d9116c803e4f5514fa9a8e51f_1a4d2ce74d9116c803e4f5514fa9a8e51f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a4d2ce74d9116c803e4f5514fa9a8e51f_1a4d2ce74d9116c803e4f5514fa9a8e51f" kindref="member">Graphics::checkTearingSupport</ref>()</highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllowTearing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>Variable<sp/>Refresh<sp/>Rate<sp/>displays<sp/>(VRR)<sp/>(VSync<sp/>OFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rather<sp/>than<sp/>create<sp/>the<sp/>1.5<sp/>factory<sp/>interface<sp/>directly,<sp/>we<sp/>query<sp/>for<sp/>the<sp/>1.5<sp/>interface<sp/>using<sp/>a<sp/>previous<sp/>version<sp/>factory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>enable<sp/>the<sp/>graphics<sp/>debugging<sp/>tools<sp/>which<sp/>might<sp/>not<sp/>support<sp/>the<sp/>1.5<sp/>factory<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>mwrl::ComPtr&lt;IDXGIFactory5&gt;<sp/>factory5;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/><ref refid="classGraphics_ad5ab15e2a2efd332ba0a1a67ba232c83_1ad5ab15e2a2efd332ba0a1a67ba232c83" kindref="member">m_pDxgiFactory</ref>.As(<sp/>&amp;factory5<sp/>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>factory5-&gt;CheckFeatureSupport(<sp/>DXGI_FEATURE_PRESENT_ALLOW_TEARING,<sp/>&amp;bAllowTearing,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>bAllowTearing<sp/>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>bAllowTearing<sp/>=<sp/>SUCCEEDED(<sp/>hres<sp/>)<sp/>&amp;&amp;<sp/>bAllowTearing;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bAllowTearing;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Graphics::d3d11DebugReport()</highlight></codeline>
<codeline lineno="889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" kindref="member">m_pDevice</ref>-&gt;QueryInterface(<sp/>__uuidof(<sp/>ID3D11Debug<sp/>),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>&amp;m_pDebug<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>any<sp/>live<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_pDebug<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputDebugStringW(<sp/>L</highlight><highlight class="stringliteral">&quot;\n\nReporting<sp/>Debug<sp/>Objects:\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>m_pDebug-&gt;ReportLiveDeviceObjects(<sp/>D3D11_RLDO_DETAIL<sp/>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputDebugStringW(<sp/>L</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pDebug<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="908" refid="classGraphics_a772e015f5d4e2838186d75f7fff38537_1a772e015f5d4e2838186d75f7fff38537" refkind="member"><highlight class="normal"><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/><ref refid="classGraphics_a772e015f5d4e2838186d75f7fff38537_1a772e015f5d4e2838186d75f7fff38537" kindref="member">Graphics::getPixel</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal">{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>x<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;!(<sp/>x<sp/>&gt;=<sp/>0<sp/>)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>x<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>m_width,<sp/></highlight><highlight class="stringliteral">&quot;!(<sp/>x<sp/>&lt;<sp/>width<sp/>)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>y<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;!(<sp/>y<sp/>&gt;=<sp/>0)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>y<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>m_height,<sp/></highlight><highlight class="stringliteral">&quot;!(<sp/>y<sp/>&lt;<sp/>height<sp/>)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pCpuBuffer[m_width<sp/>*<sp/>y<sp/>+<sp/>x];</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918" refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" kindref="member">Graphics::putPixel</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/>color<sp/>)</highlight></codeline>
<codeline lineno="921"><highlight class="normal">{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>x<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;!(<sp/>x<sp/>&gt;=<sp/>0<sp/>)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>x<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" kindref="member">m_width</ref>,<sp/></highlight><highlight class="stringliteral">&quot;!(<sp/>x<sp/>&lt;<sp/>width<sp/>)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>y<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;!(<sp/>y<sp/>&gt;=<sp/>0)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>y<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="classGraphics_abeb2d8d4b81e71ad34102c1526ef28b6_1abeb2d8d4b81e71ad34102c1526ef28b6" kindref="member">m_height</ref>,<sp/></highlight><highlight class="stringliteral">&quot;!(<sp/>y<sp/>&lt;<sp/>height<sp/>)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a756515d158986ac14d289551b3531ed8_1a756515d158986ac14d289551b3531ed8" kindref="member">m_pCpuBuffer</ref>[<ref refid="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" kindref="member">m_width</ref><sp/>*<sp/>y<sp/>+<sp/>x]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929" refid="classGraphics_ad425ade3dafccfc45cbd83ff960d34e9_1ad425ade3dafccfc45cbd83ff960d34e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" kindref="member">Graphics::putPixel</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b<sp/>)</highlight></codeline>
<codeline lineno="934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" kindref="member">putPixel</ref>(<sp/>x,<sp/>y,<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">BYTE</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>r<sp/>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">BYTE</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>g<sp/>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">BYTE</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>b<sp/>)}<sp/>);</highlight></codeline>
<codeline lineno="936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938" refid="classGraphics_a0cd69139e91c30dcf1db018d3093dcf9_1a0cd69139e91c30dcf1db018d3093dcf9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a0cd69139e91c30dcf1db018d3093dcf9_1a0cd69139e91c30dcf1db018d3093dcf9" kindref="member">Graphics::drawLine</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>)</highlight></codeline>
<codeline lineno="943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x1<sp/>!=<sp/>x0<sp/>)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(float)<sp/>(<sp/>y1<sp/>-<sp/>y0<sp/>)<sp/>/<sp/>(<sp/>x1<sp/>-<sp/>x0<sp/>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x1<sp/>!=<sp/>x0<sp/>&amp;&amp;<sp/>std::abs(<sp/>m<sp/>)<sp/>&lt;=<sp/>1.0f<sp/>)</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>not<sp/>a<sp/>vertical<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x0<sp/>&gt;<sp/>x1<sp/>)</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<sp/>x0,<sp/>x1);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<sp/>y0,<sp/>y1);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>y0<sp/>-<sp/>m<sp/>*<sp/>x0;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>x0;<sp/>x<sp/>&lt;=<sp/>x1;<sp/>++x<sp/>)</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>m<sp/>*<sp/>(float)x<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yi<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int)<sp/>y;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" kindref="member">m_width</ref><sp/>&amp;&amp;<sp/>yi<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>yi<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="classGraphics_abeb2d8d4b81e71ad34102c1526ef28b6_1abeb2d8d4b81e71ad34102c1526ef28b6" kindref="member">m_height</ref><sp/>)</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" kindref="member">putPixel</ref>(<sp/>x,<sp/>yi,<sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y0<sp/>&gt;<sp/>y1<sp/>)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<sp/>x0,<sp/>x1);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<sp/>y0,<sp/>y1);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float)<sp/>(<sp/>x1<sp/>-<sp/>x0<sp/>)<sp/>/<sp/>(<sp/>y1<sp/>-<sp/>y0<sp/>);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>x0<sp/>-<sp/>w<sp/>*<sp/>y0;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>y0;<sp/>y<sp/>&lt;=<sp/>y1;<sp/>++y<sp/>)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>w<sp/>*<sp/>(float)y<sp/>+<sp/>p;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xi<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int)<sp/>x;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xi<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>xi<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" kindref="member">m_width</ref><sp/>&amp;&amp;<sp/>y<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="classGraphics_abeb2d8d4b81e71ad34102c1526ef28b6_1abeb2d8d4b81e71ad34102c1526ef28b6" kindref="member">m_height</ref><sp/>)</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" kindref="member">putPixel</ref>(<sp/>xi,<sp/>y,<sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991" refid="classGraphics_aa7d408ae4c83eac1858dafa707e84799_1aa7d408ae4c83eac1858dafa707e84799" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_aa7d408ae4c83eac1858dafa707e84799_1aa7d408ae4c83eac1858dafa707e84799" kindref="member">Graphics::drawRectangle</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>)</highlight></codeline>
<codeline lineno="996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x0<sp/>&gt;<sp/>x1<sp/>)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<sp/>x0,<sp/>x1<sp/>);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y0<sp/>&gt;<sp/>y1<sp/>)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<sp/>y0,<sp/>y1<sp/>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>x0;<sp/>x<sp/>&lt;<sp/>x1;<sp/>++x<sp/>)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>y0;<sp/>y<sp/>&lt;<sp/>y1;<sp/>++y<sp/>)</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" kindref="member">putPixel</ref>(<sp/>x,<sp/>y,<sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015" refid="classGraphics_a3e92d46a1cf734a4916a45485775b5b0_1a3e92d46a1cf734a4916a45485775b5b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_aa7d408ae4c83eac1858dafa707e84799_1aa7d408ae4c83eac1858dafa707e84799" kindref="member">Graphics::drawRectangle</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRectangleF" kindref="compound">RectangleF</ref><sp/>&amp;rect,</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_aa7d408ae4c83eac1858dafa707e84799_1aa7d408ae4c83eac1858dafa707e84799" kindref="member">drawRectangle</ref>(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>rect.<ref refid="classRectangleF_a09492cfbebfe82c754b082855b3ce9fe_1a09492cfbebfe82c754b082855b3ce9fe" kindref="member">getLeft</ref>()<sp/>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>rect.<ref refid="classRectangleF_acceeee60b657a7e1b2b497a7464e34cf_1acceeee60b657a7e1b2b497a7464e34cf" kindref="member">getTop</ref>()<sp/>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>rect.<ref refid="classRectangleF_ab39ca0e1a50194ca9498bb7cb2ef6058_1ab39ca0e1a50194ca9498bb7cb2ef6058" kindref="member">getRight</ref>()<sp/>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(<sp/>rect.<ref refid="classRectangleF_aeb078bf096d69d726c8a13fe1ff4c9ce_1aeb078bf096d69d726c8a13fe1ff4c9ce" kindref="member">getBottom</ref>()<sp/>),<sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021" refid="classGraphics_ad2c624508f0ca102a2af94d107c7d697_1ad2c624508f0ca102a2af94d107c7d697" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ad2c624508f0ca102a2af94d107c7d697_1ad2c624508f0ca102a2af94d107c7d697" kindref="member">Graphics::drawRectWH</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_aa7d408ae4c83eac1858dafa707e84799_1aa7d408ae4c83eac1858dafa707e84799" kindref="member">drawRectangle</ref>(<sp/>x0,<sp/>y0,<sp/>x0<sp/>+<sp/>width,<sp/>y0<sp/>+<sp/>height,<sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030" refid="classGraphics_aed08b42d035efb0db4a31fa39acd28c0_1aed08b42d035efb0db4a31fa39acd28c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_aed08b42d035efb0db4a31fa39acd28c0_1aed08b42d035efb0db4a31fa39acd28c0" kindref="member">Graphics::drawTriangle</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y0,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2,</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2,</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>)</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>for<sp/>{x0,<sp/>y0},<sp/>{x1,<sp/>y1}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a0cd69139e91c30dcf1db018d3093dcf9_1a0cd69139e91c30dcf1db018d3093dcf9" kindref="member">drawLine</ref>(x0,<sp/>x1,<sp/>y0,<sp/>y1,<sp/><ref refid="namespacecol" kindref="compound">col</ref>);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>for<sp/>{x0,<sp/>y0},<sp/>{x2,<sp/>y2}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a0cd69139e91c30dcf1db018d3093dcf9_1a0cd69139e91c30dcf1db018d3093dcf9" kindref="member">drawLine</ref>(x0,<sp/>x2,<sp/>y0,<sp/>y2,<sp/><ref refid="namespacecol" kindref="compound">col</ref>);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>for<sp/>{x1,<sp/>y1},<sp/>{x2,<sp/>y2}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphics_a0cd69139e91c30dcf1db018d3093dcf9_1a0cd69139e91c30dcf1db018d3093dcf9" kindref="member">drawLine</ref>(x1,<sp/>x2,<sp/>y1,<sp/>y2,<sp/><ref refid="namespacecol" kindref="compound">col</ref>);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046" refid="classGraphics_ad6ed9684c70ad5a7c5bd5335a1776d17_1ad6ed9684c70ad5a7c5bd5335a1776d17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ad6ed9684c70ad5a7c5bd5335a1776d17_1ad6ed9684c70ad5a7c5bd5335a1776d17" kindref="member">Graphics::drawCircle</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>centerX,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>centerY,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radius,</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radiusSquared<sp/>=<sp/>radius<sp/>*<sp/>radius;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yDiff;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xDiff;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[-radius,<sp/>radius]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yLoop<sp/>=<sp/>centerY<sp/>-<sp/>radius;<sp/>yLoop<sp/>&lt;=<sp/>centerY<sp/>+<sp/>radius;<sp/>++yLoop<sp/>)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xLoop<sp/>=<sp/>centerX<sp/>-<sp/>radius;<sp/>xLoop<sp/>&lt;=<sp/>centerX<sp/>+<sp/>radius;<sp/>++xLoop<sp/>)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDiff<sp/>=<sp/>centerX<sp/>-<sp/>xLoop;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yDiff<sp/>=<sp/>centerY<sp/>-<sp/>yLoop;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>xDiff<sp/>*<sp/>xDiff<sp/>+<sp/>yDiff<sp/>*<sp/>yDiff<sp/>&lt;=<sp/>radiusSquared<sp/>)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" kindref="member">putPixel</ref>(<sp/>xLoop,<sp/>yLoop,<sp/><ref refid="namespacecol" kindref="compound">col</ref><sp/>);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069" refid="classGraphics_a679fdec87f220496e1e9a9fb96abb8ce_1a679fdec87f220496e1e9a9fb96abb8ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a679fdec87f220496e1e9a9fb96abb8ce_1a679fdec87f220496e1e9a9fb96abb8ce" kindref="member">Graphics::drawStar</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>outerRadius,</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>innerRadius,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/>color,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFlares<sp/></highlight><highlight class="comment">/*=<sp/>5<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;dx::XMFLOAT2&gt;<sp/>star;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>star.reserve(<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)nFlares<sp/>*<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dTheta<sp/>=<sp/>2.0f<sp/>*<sp/>3.14159f<sp/>/<sp/>float(<sp/>nFlares<sp/>*<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nFlares<sp/>*<sp/>2;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rad<sp/>=<sp/>(<sp/>i<sp/>%<sp/>2<sp/>==<sp/>0<sp/>)<sp/>?</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerRadius<sp/>:</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerRadius;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xAndY,<sp/>bottomRight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>star.emplace_back(<sp/>rad<sp/>*<sp/>cos(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(i)<sp/>*<sp/>dTheta<sp/>),<sp/>rad<sp/>*<sp/>sin(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(i)<sp/>*<sp/>dTheta<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMFLOAT2<sp/>&amp;coord<sp/>:<sp/>star<sp/>)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" kindref="member">putPixel</ref>(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>coord.x<sp/>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>coord.y<sp/>),<sp/>color<sp/>);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="comment">//drawBezier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="comment">//<sp/>general<sp/>implementation<sp/>for<sp/>a<sp/>curve<sp/>with<sp/>any<sp/>number<sp/>of<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1095"><highlight class="comment">putPixel(<sp/>getBezierPoint()<sp/>)</highlight></codeline>
<codeline lineno="1096"><highlight class="comment">vec2<sp/>getBezierPoint(<sp/>vec2<sp/>*points,<sp/>int<sp/>numPoints,<sp/>float<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="1097"><highlight class="comment">{</highlight></codeline>
<codeline lineno="1098"><highlight class="comment"><sp/><sp/><sp/><sp/>vec2<sp/>*tmp<sp/>=<sp/>new<sp/>vec2[numPoints];</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/><sp/><sp/><sp/>memcpy(tmp,<sp/>points,<sp/>numPoints<sp/>*<sp/>sizeof(vec2));</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>i<sp/>=<sp/>numPoints<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>(i<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>i;<sp/>k++)</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp[k]<sp/>=<sp/>tmp[k]<sp/>+<sp/>t<sp/>*<sp/>(<sp/>tmp[k+1]<sp/>-<sp/>tmp[k]<sp/>);</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"><sp/><sp/><sp/><sp/>vec2<sp/>answer<sp/>=<sp/>tmp[0];</highlight></codeline>
<codeline lineno="1108"><highlight class="comment"><sp/><sp/><sp/><sp/>delete[]<sp/>tmp;</highlight></codeline>
<codeline lineno="1109"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>answer;</highlight></codeline>
<codeline lineno="1110"><highlight class="comment">}</highlight></codeline>
<codeline lineno="1111"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1114"><highlight class="comment">bool<sp/>raySphereIntersect(<sp/>D3DXVECTOR3<sp/>rayOrigin,<sp/>D3DXVECTOR3<sp/>rayDirection,<sp/>float<sp/>radius)</highlight></codeline>
<codeline lineno="1115"><highlight class="comment">{</highlight></codeline>
<codeline lineno="1116"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>a,<sp/>b,<sp/>c,<sp/>discriminant;</highlight></codeline>
<codeline lineno="1117"><highlight class="comment"></highlight></codeline>
<codeline lineno="1118"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Calculate<sp/>the<sp/>a,<sp/>b,<sp/>and<sp/>c<sp/>coefficients.</highlight></codeline>
<codeline lineno="1119"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(rayDirection.x<sp/>*<sp/>rayDirection.x)<sp/>+<sp/>(rayDirection.y<sp/>*<sp/>rayDirection.y)<sp/>+<sp/>(rayDirection.z<sp/>*<sp/>rayDirection.z);</highlight></codeline>
<codeline lineno="1120"><highlight class="comment"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>((rayDirection.x<sp/>*<sp/>rayOrigin.x)<sp/>+<sp/>(rayDirection.y<sp/>*<sp/>rayOrigin.y)<sp/>+<sp/>(rayDirection.z<sp/>*<sp/>rayOrigin.z))<sp/>*<sp/>2.0f;</highlight></codeline>
<codeline lineno="1121"><highlight class="comment"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>((rayOrigin.x<sp/>*<sp/>rayOrigin.x)<sp/>+<sp/>(rayOrigin.y<sp/>*<sp/>rayOrigin.y)<sp/>+<sp/>(rayOrigin.z<sp/>*<sp/>rayOrigin.z))<sp/>-<sp/>(radius<sp/>*<sp/>radius);</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"></highlight></codeline>
<codeline lineno="1123"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Find<sp/>the<sp/>discriminant.</highlight></codeline>
<codeline lineno="1124"><highlight class="comment"><sp/><sp/><sp/><sp/>discriminant<sp/>=<sp/>(b<sp/>*<sp/>b)<sp/>-<sp/>(4<sp/>*<sp/>a<sp/>*<sp/>c);</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"></highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>if<sp/>discriminant<sp/>is<sp/>negative<sp/>the<sp/>picking<sp/>ray<sp/>missed<sp/>the<sp/>sphere,<sp/>otherwise<sp/>it<sp/>intersected<sp/>the<sp/>sphere.</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(discriminant<sp/>&lt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1128"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="1130"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="comment"></highlight></codeline>
<codeline lineno="1132"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="1133"><highlight class="comment">}</highlight></codeline>
<codeline lineno="1134"><highlight class="comment"></highlight></codeline>
<codeline lineno="1135"><highlight class="comment">private<sp/>Vector3f<sp/>getPointOnRay(Vector3f<sp/>ray,<sp/>float<sp/>distance)</highlight></codeline>
<codeline lineno="1136"><highlight class="comment">{</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/><sp/><sp/><sp/>Vector3f<sp/>camPos<sp/>=<sp/>camera.getPosition();</highlight></codeline>
<codeline lineno="1138"><highlight class="comment"><sp/><sp/><sp/><sp/>Vector3f<sp/>start<sp/>=<sp/>new<sp/>Vector3f(camPos.x,<sp/>camPos.y,<sp/>camPos.z);</highlight></codeline>
<codeline lineno="1139"><highlight class="comment"><sp/><sp/><sp/><sp/>Vector3f<sp/>scaledRay<sp/>=<sp/>new<sp/>Vector3f(ray.x<sp/>*<sp/>distance,<sp/>ray.y<sp/>*<sp/>distance,<sp/>ray.z<sp/>*<sp/>distance);</highlight></codeline>
<codeline lineno="1140"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>Vector3f.add(start,<sp/>scaledRay,<sp/>null);</highlight></codeline>
<codeline lineno="1141"><highlight class="comment">}</highlight></codeline>
<codeline lineno="1142"><highlight class="comment"></highlight></codeline>
<codeline lineno="1143"><highlight class="comment">private<sp/>Vector3f<sp/>binarySearch(int<sp/>count,<sp/>float<sp/>start,<sp/>float<sp/>finish,<sp/>Vector3f<sp/>ray)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>half<sp/>=<sp/>start<sp/>+<sp/>((finish<sp/>-<sp/>start)<sp/>/<sp/>2f);</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(count<sp/>&gt;=<sp/>RECURSION_COUNT)</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3f<sp/>endPoint<sp/>=<sp/>getPointOnRay(ray,<sp/>half);</highlight></codeline>
<codeline lineno="1148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Terrain<sp/>terrain<sp/>=<sp/>getTerrain(endPoint.getX(),<sp/>endPoint.getZ());</highlight></codeline>
<codeline lineno="1149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(terrain<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="1150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>endPoint;</highlight></codeline>
<codeline lineno="1152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>null;</highlight></codeline>
<codeline lineno="1156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(intersectionInRange(start,<sp/>half,<sp/>ray))</highlight></codeline>
<codeline lineno="1159"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>binarySearch(count<sp/>+<sp/>1,<sp/>start,<sp/>half,<sp/>ray);</highlight></codeline>
<codeline lineno="1161"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="comment"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>binarySearch(count<sp/>+<sp/>1,<sp/>half,<sp/>finish,<sp/>ray);</highlight></codeline>
<codeline lineno="1165"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="comment">}</highlight></codeline>
<codeline lineno="1167"><highlight class="comment"></highlight></codeline>
<codeline lineno="1168"><highlight class="comment">private<sp/>boolean<sp/>intersectionInRange(float<sp/>start,<sp/>float<sp/>finish,<sp/>Vector3f<sp/>ray)<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/><sp/><sp/><sp/>Vector3f<sp/>startPoint<sp/>=<sp/>getPointOnRay(ray,<sp/>start);</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/><sp/><sp/><sp/>Vector3f<sp/>endPoint<sp/>=<sp/>getPointOnRay(ray,<sp/>finish);</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(!isUnderGround(startPoint)<sp/>&amp;&amp;<sp/>isUnderGround(endPoint))</highlight></codeline>
<codeline lineno="1172"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="1174"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="comment"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="1176"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="1178"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="comment">}</highlight></codeline>
<codeline lineno="1180"><highlight class="comment"></highlight></codeline>
<codeline lineno="1181"><highlight class="comment">private<sp/>boolean<sp/>isUnderGround(Vector3f<sp/>testPoint)<sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="comment"><sp/><sp/><sp/><sp/>Terrain<sp/>terrain<sp/>=<sp/>getTerrain(testPoint.getX(),<sp/>testPoint.getZ());</highlight></codeline>
<codeline lineno="1183"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1184"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(terrain<sp/>!=<sp/>null)</highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>terrain.getHeightOfTerrain(testPoint.getX(),<sp/>testPoint.getZ());</highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(testPoint.y<sp/>&lt;<sp/>height)</highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="1191"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1192"><highlight class="comment"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="1193"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="1195"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="preprocessor">#ifdef<sp/>D2D_ONLY</highlight></codeline>
<codeline lineno="1201"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Graphics::begin2dDraw()</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p2DRenderTarget-&gt;BeginDraw();</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Graphics::end2dDraw()</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p2DRenderTarget-&gt;EndDraw();</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Graphics::clear(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1::ColorF<sp/>&amp;rgb<sp/>=<sp/>D2D1::ColorF{0.0f,<sp/>0.0f,<sp/>0.0f}<sp/>)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p2DRenderTarget-&gt;Clear(<sp/>rgb<sp/>);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Graphics::create2dFactory()</highlight></codeline>
<codeline lineno="1217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>m_p2DSurface,<sp/></highlight><highlight class="stringliteral">&quot;DXGISurface<sp/>has<sp/>not<sp/>been<sp/>created!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>D2D1_FACTORY_OPTIONS<sp/>d2dOptions{};</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>d2dOptions.debugLevel<sp/>=<sp/>D2D1_DEBUG_LEVEL_INFORMATION;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/>D2D1CreateFactory(<sp/>D2D1_FACTORY_TYPE_SINGLE_THREADED,<sp/>__uuidof(<sp/>ID2D1Factory1<sp/>),<sp/>&amp;d2dOptions,<sp/>&amp;m_p2DFactory<sp/>);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>RECT<sp/>rect;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>GetClientRect(<sp/><ref refid="classGraphics_a0082e76df00907ea297d37abccd21d8f_1a0082e76df00907ea297d37abccd21d8f" kindref="member">m_hParentWnd</ref>,<sp/>&amp;rect<sp/>);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>D2D1::SizeU(<sp/>rect.right<sp/>-<sp/>rect.left,<sp/>rect.bottom<sp/>-<sp/>rect.top<sp/>);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>m_p2DFactory-&gt;CreateHwndRenderTarget(<sp/>D2D1::RenderTargetProperties(<sp/>D2D1_RENDER_TARGET_TYPE_HARDWARE,<sp/>D2D1::PixelFormat(<sp/>DXGI_FORMAT_B8G8R8A8_UNORM,<sp/>D2D1_ALPHA_MODE_PREMULTIPLIED<sp/>)<sp/>),<sp/>D2D1::HwndRenderTargetProperties(<sp/><ref refid="classGraphics_a0082e76df00907ea297d37abccd21d8f_1a0082e76df00907ea297d37abccd21d8f" kindref="member">m_hParentWnd</ref>,<sp/>size<sp/>),<sp/>&amp;m_p2DRenderTarget<sp/>);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>use<sp/>CreateDxgiSurfaceRenderTarget<sp/>to<sp/>create<sp/>a<sp/>ID2D1RenderTarget<sp/>(a<sp/>subclass<sp/>of<sp/>ID2D1HwndRenderTarget)<sp/>to<sp/>draw<sp/>your<sp/>2d<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>m_p2DRenderTarget-&gt;QueryInterface(<sp/>__uuidof(<sp/>ID2D1DeviceContext<sp/>),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_p2DContext.GetAddressOf()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>m_p2DContext-&gt;IsDxgiFormatSupported(<sp/>DXGI_FORMAT_B8G8R8A8_UNORM<sp/>)<sp/>==<sp/>TRUE,<sp/></highlight><highlight class="stringliteral">&quot;DXGI_FORMAT_B8G8R8A8_UNORM<sp/>is<sp/>not<sp/>supported<sp/>on<sp/>this<sp/>Device<sp/>Context!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>DWriteCreateFactory(<sp/>DWRITE_FACTORY_TYPE_SHARED,<sp/>__uuidof(<sp/>IDWriteFactory<sp/>),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">IUnknown**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_pWriteFactory.GetAddressOf()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal">Microsoft::WRL::ComPtr&lt;IDXGISurface&gt;&amp;<sp/>Graphics::surface2d()</highlight></codeline>
<codeline lineno="1244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_p2DSurface;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal">ID2D1HwndRenderTarget*<sp/>Graphics::renderTarget2d()</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>m_p2DSurface,<sp/></highlight><highlight class="stringliteral">&quot;DXGISurface<sp/>has<sp/>not<sp/>been<sp/>created!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_p2DRenderTarget.Get();</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Graphics::createTextFormat(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring<sp/>&amp;fontName,</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fontSize,</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring<sp/>&amp;fontLocale<sp/>)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/>m_pWriteFactory-&gt;CreateTextFormat(<sp/>fontName.c_str(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>DWRITE_FONT_WEIGHT_REGULAR,<sp/>DWRITE_FONT_STYLE_NORMAL,<sp/>DWRITE_FONT_STRETCH_NORMAL,<sp/>fontSize,<sp/>fontLocale.c_str(),<sp/>&amp;m_pTextFormat<sp/>);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_a0cd69139e91c30dcf1db018d3093dcf9_1a0cd69139e91c30dcf1db018d3093dcf9" kindref="member">Graphics::drawLine</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1_POINT_2F<sp/>&amp;v0,</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1_POINT_2F<sp/>&amp;v1,</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1::ColorF<sp/>&amp;rgba,</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>strokeWidth<sp/>)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/>m_p2DRenderTarget-&gt;CreateSolidColorBrush(<sp/>rgba,<sp/>&amp;m_p2dSolidColorBrush<sp/>);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p2DRenderTarget-&gt;DrawLine(<sp/>v0,<sp/>v1,<sp/>m_p2dSolidColorBrush.Get(),<sp/>strokeWidth<sp/>);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Graphics::drawRect(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1_RECT_F<sp/>&amp;rect,</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1::ColorF<sp/>&amp;rgba,</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>strokeWidth<sp/>)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/>m_p2DRenderTarget-&gt;CreateSolidColorBrush(<sp/>rgba,<sp/>&amp;m_p2dSolidColorBrush<sp/>);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p2DRenderTarget-&gt;DrawRectangle(<sp/>rect,<sp/>m_p2dSolidColorBrush.Get(),<sp/>strokeWidth<sp/>);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Graphics::drawRoundedRect(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1_RECT_F<sp/>&amp;rect,</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radiusX,</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radiusY,</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1::ColorF<sp/>&amp;rgba,</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>strokeWidth<sp/>)</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/>m_p2DRenderTarget-&gt;CreateSolidColorBrush(<sp/>rgba,<sp/>&amp;m_p2dSolidColorBrush<sp/>);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>D2D1_ROUNDED_RECT<sp/>roundRect{rect,<sp/>radiusX,<sp/>radiusY};</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p2DRenderTarget-&gt;DrawRoundedRectangle(<sp/>&amp;roundRect,<sp/>m_p2dSolidColorBrush.Get(),<sp/>strokeWidth<sp/>);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Graphics::drawEllipse(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hRadius,</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vRadius,</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1::ColorF<sp/>&amp;rgba,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>strokeWidth<sp/>)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/>m_p2DRenderTarget-&gt;CreateSolidColorBrush(<sp/>rgba,<sp/>&amp;m_p2dSolidColorBrush<sp/>);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p2DRenderTarget-&gt;DrawEllipse(<sp/>D2D1::Ellipse(<sp/>D2D1::Point2F(x,<sp/>y),<sp/>hRadius,<sp/>vRadius<sp/>),<sp/>m_p2dSolidColorBrush.Get(),<sp/>strokeWidth<sp/>);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphics_ad6ed9684c70ad5a7c5bd5335a1776d17_1ad6ed9684c70ad5a7c5bd5335a1776d17" kindref="member">Graphics::drawCircle</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1::ColorF<sp/>&amp;rgba,</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>strokeWidth<sp/>)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>drawEllipse(<sp/>x,<sp/>y,<sp/>radius,<sp/>radius,<sp/>rgba,<sp/>strokeWidth<sp/>);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Graphics::drawText(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::wstring<sp/>&amp;txt,</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1_RECT_F<sp/>&amp;rect,</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2D1::ColorF<sp/>&amp;rgba<sp/>)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/>m_p2DRenderTarget-&gt;CreateSolidColorBrush(<sp/>rgba,<sp/>&amp;m_p2dSolidColorBrush<sp/>);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p2DRenderTarget-&gt;DrawTextW(<sp/>txt.data(),<sp/>txt.length(),<sp/>m_pTextFormat.Get(),<sp/>rect,<sp/>m_p2dSolidColorBrush.Get()<sp/>);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>D2D_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326" refid="classGraphics_1_1GraphicsException_a3732e09860dbf7cf9d560665a5669488_1a3732e09860dbf7cf9d560665a5669488" refkind="member"><highlight class="normal"><ref refid="classGraphics_1_1GraphicsException_a3732e09860dbf7cf9d560665a5669488_1a3732e09860dbf7cf9d560665a5669488" kindref="member">Graphics::GraphicsException::GraphicsException</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*function,</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;msg<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKeyException" kindref="compound">KeyException</ref>{line,<sp/>file,<sp/>function,<sp/>msg}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336" refid="classGraphics_1_1GraphicsException_aaab3179bfd3ebd5a2c312593ad9cd10b_1aaab3179bfd3ebd5a2c312593ad9cd10b" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classGraphics_1_1GraphicsException_aaab3179bfd3ebd5a2c312593ad9cd10b_1aaab3179bfd3ebd5a2c312593ad9cd10b" kindref="member">Graphics::GraphicsException::getType</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<sp/>*this<sp/>).name();</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341" refid="classGraphics_1_1GraphicsException_a0b6d2d087b97cb0d7cadf25299909e90_1a0b6d2d087b97cb0d7cadf25299909e90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classGraphics_1_1GraphicsException_a0b6d2d087b97cb0d7cadf25299909e90_1a0b6d2d087b97cb0d7cadf25299909e90" kindref="member">Graphics::GraphicsException::what</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classKeyException_a9956fdc871308553eec7b047f756690a_1a9956fdc871308553eec7b047f756690a" kindref="member">KeyException::what</ref>();</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/graphics.cpp"/>
  </compounddef>
</doxygen>
