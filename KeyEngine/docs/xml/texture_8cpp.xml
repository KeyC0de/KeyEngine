<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="texture_8cpp" kind="file" language="C++">
    <compoundname>texture.cpp</compoundname>
    <includes refid="texture_8h" local="yes">texture.h</includes>
    <includes refid="texture__desc_8h" local="yes">texture_desc.h</includes>
    <includes refid="texture__processor_8h" local="yes">texture_processor.h</includes>
    <includes refid="graphics_8h" local="yes">graphics.h</includes>
    <includes refid="bindable__registry_8h" local="yes">bindable_registry.h</includes>
    <includes refid="os__utils_8h" local="yes">os_utils.h</includes>
    <includes refid="dxgi__info__queue_8h" local="yes">dxgi_info_queue.h</includes>
    <includes refid="assertions__console_8h" local="yes">assertions_console.h</includes>
    <incdepgraph>
      <node id="10">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>bindable.h</label>
        <link refid="bindable_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>bindable_registry.h</label>
        <link refid="bindable__registry_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>bitmap.h</label>
        <link refid="bitmap_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="37">
        <label>console.h</label>
        <link refid="console_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>depth_stencil_view.h</label>
        <link refid="depth__stencil__view_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>dxgi_info_queue.h</label>
        <link refid="dxgi__info__queue_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>graphics_friend.h</label>
        <link refid="graphics__friend_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>key_exception.h</label>
        <link refid="key__exception_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>key_timer.h</label>
        <link refid="key__timer_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>key_wrl.h</label>
        <link refid="key__wrl_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="60">
        <label>os_utils.h</label>
        <link refid="os__utils_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>render_surface.h</label>
        <link refid="render__surface_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>render_target.h</label>
        <link refid="render__target_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>texture.h</label>
        <link refid="texture_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>texture_desc.h</label>
        <link refid="texture__desc_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>texture_processor.h</label>
        <link refid="texture__processor_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/texture.cpp</label>
        <link refid="texture_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>DirectXMath.h</label>
      </node>
      <node id="17">
        <label>DirectxMath.h</label>
      </node>
      <node id="65">
        <label>ShlObj.h</label>
      </node>
      <node id="15">
        <label>Windows.h</label>
      </node>
      <node id="51">
        <label>algorithm</label>
      </node>
      <node id="26">
        <label>array</label>
      </node>
      <node id="47">
        <label>bitset</label>
      </node>
      <node id="36">
        <label>chrono</label>
      </node>
      <node id="49">
        <label>cinttypes</label>
      </node>
      <node id="39">
        <label>cmath</label>
      </node>
      <node id="62">
        <label>comdef.h</label>
      </node>
      <node id="48">
        <label>cstddef</label>
      </node>
      <node id="40">
        <label>cstdint</label>
      </node>
      <node id="9">
        <label>d3d11.h</label>
      </node>
      <node id="32">
        <label>d3dcompiler.h</label>
      </node>
      <node id="31">
        <label>dxgi1_4.h</label>
      </node>
      <node id="68">
        <label>dxgidebug.h</label>
      </node>
      <node id="18">
        <label>dxtex/DirectXTex.h</label>
      </node>
      <node id="55">
        <label>execution</label>
      </node>
      <node id="64">
        <label>functional</label>
      </node>
      <node id="50">
        <label>future</label>
      </node>
      <node id="43">
        <label>iomanip</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="53">
        <label>iterator</label>
      </node>
      <node id="44">
        <label>limits</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="52">
        <label>numeric</label>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="54">
        <label>regex</label>
      </node>
      <node id="14">
        <label>sdkddkver.h</label>
      </node>
      <node id="46">
        <label>set</label>
      </node>
      <node id="42">
        <label>sstream</label>
      </node>
      <node id="20">
        <label>stdexcept</label>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="35">
        <label>thread</label>
      </node>
      <node id="63">
        <label>tlhelp32.h</label>
      </node>
      <node id="41">
        <label>type_traits</label>
      </node>
      <node id="59">
        <label>unordered_map</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="66">
        <label>wincred.h</label>
      </node>
      <node id="61">
        <label>winternl.h</label>
      </node>
      <node id="4">
        <label>wrl.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texture_8h" kindref="compound">texture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texture__desc_8h" kindref="compound">texture_desc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texture__processor_8h" kindref="compound">texture_processor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphics_8h" kindref="compound">graphics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bindable__registry_8h" kindref="compound">bindable_registry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="os__utils_8h" kindref="compound">os_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dxgi__info__queue_8h" kindref="compound">dxgi_info_queue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assertions__console_8h" kindref="compound">assertions_console.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mwrl<sp/>=<sp/>Microsoft::WRL;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceDirectX" kindref="compound">dx</ref><sp/>=<sp/><ref refid="namespaceDirectX" kindref="compound">DirectX</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classTexture_a0331ea0fa1111565a77e34930527aa9f_1a0331ea0fa1111565a77e34930527aa9f" refkind="member"><highlight class="normal"><ref refid="classTexture_a0331ea0fa1111565a77e34930527aa9f_1a0331ea0fa1111565a77e34930527aa9f" kindref="member">Texture::Texture</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filepath,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="texture_8h_a48efc2b83d04747965ce26c7eb8d406c_1a48efc2b83d04747965ce26c7eb8d406c" kindref="member">TextureOp</ref><sp/>op<sp/></highlight><highlight class="comment">/*=<sp/>nullptr*/</highlight><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>m_path{filepath},</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>m_slot(slot),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>m_op(op)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#TODO:<sp/>the<sp/>rendering<sp/>pipeline<sp/>should<sp/>not<sp/>involve<sp/>code<sp/>paths<sp/>that<sp/>require<sp/>loading<sp/>assets<sp/>from<sp/>disk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>preload<sp/>bitmaps<sp/>&amp;<sp/>shaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bitmap<sp/>=<sp/><ref refid="classBitmap_a6e287dc135d2267f1ec28766b54f58ac_1a6e287dc135d2267f1ec28766b54f58ac" kindref="member">Bitmap::loadFromFile</ref>(<sp/>filepath<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTexture_a891a27933cfc6deafcc3597ee9cfe07f_1a891a27933cfc6deafcc3597ee9cfe07f" kindref="member">m_bAlpha</ref><sp/>=<sp/>bitmap.hasAlpha();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTexture_ac243c2a4552bc0af19b5b1ea812ce9ee_1ac243c2a4552bc0af19b5b1ea812ce9ee" kindref="member">m_width</ref><sp/>=<sp/>bitmap.getWidth();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTexture_ae8f4dc92aa7350d5e5805c520834604f_1ae8f4dc92aa7350d5e5805c520834604f" kindref="member">m_height</ref><sp/>=<sp/>bitmap.getHeight();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op<sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTextureProcessor_a1ea179c15897e25858f4e2a4ee67f339_1a1ea179c15897e25858f4e2a4ee67f339" kindref="member">TextureProcessor::transformBitmap</ref>(<sp/>bitmap,<sp/>op<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_TEXTURE2D_DESC<sp/>texDesc<sp/>=<sp/><ref refid="texture__desc_8h_aed49d8003c0bd913475b88771be11296_1aed49d8003c0bd913475b88771be11296" kindref="member">createTextureDescriptor</ref>(<sp/><ref refid="classTexture_ac243c2a4552bc0af19b5b1ea812ce9ee_1ac243c2a4552bc0af19b5b1ea812ce9ee" kindref="member">m_width</ref>,<sp/><ref refid="classTexture_ae8f4dc92aa7350d5e5805c520834604f_1ae8f4dc92aa7350d5e5805c520834604f" kindref="member">m_height</ref>,<sp/>DXGI_FORMAT_B8G8R8A8_UNORM,<sp/><ref refid="texture__desc_8h_a84e8864fab1faebd38dd020fb6050ee2_1a84e8864fab1faebd38dd020fb6050ee2a9504b991462f464a38554ba3f1a804ee" kindref="member">BindFlags::RenderTargetTexture</ref>,<sp/><ref refid="texture__desc_8h_a7e39f63b567b83d32dd82e7a0c062e08_1a7e39f63b567b83d32dd82e7a0c062e08a3986e6101d3d5b354d3b3b58445d046b" kindref="member">CpuAccessFlags::NoCpuAccess</ref>,<sp/><ref refid="texture__desc_8h_af3a2e76419de0e0d1ec1b12a83047412_1af3a2e76419de0e0d1ec1b12a83047412a79935518a3889663d8688b6b01fff051" kindref="member">TextureUsage::Default</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/><ref refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" kindref="member">getDevice</ref>(<sp/>gfx<sp/>)-&gt;CreateTexture2D(<sp/>&amp;texDesc,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classTexture_a88b470c8fc311e910af1627fa44b51eb_1a88b470c8fc311e910af1627fa44b51eb" kindref="member">m_pTex</ref><sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTexture_a9f0969925008410870590127fdf960ce_1a9f0969925008410870590127fdf960ce" kindref="member">paintTextureWithBitmap</ref>(<sp/>gfx,<sp/><ref refid="classTexture_a88b470c8fc311e910af1627fa44b51eb_1a88b470c8fc311e910af1627fa44b51eb" kindref="member">m_pTex</ref>.Get(),<sp/>bitmap<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>resource<sp/>view<sp/>on<sp/>the<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_SHADER_RESOURCE_VIEW_DESC<sp/>srvDesc{};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Format<sp/>=<sp/>texDesc.Format;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.ViewDimension<sp/>=<sp/>D3D11_SRV_DIMENSION_TEXTURE2D;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2D.MostDetailedMip<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>disable:<sp/>4146<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2D.MipLevels<sp/>=<sp/>-1u;<sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>all<sp/>Mips<sp/>from<sp/>#(MostDetailedMip)<sp/>down<sp/>to<sp/>least<sp/>detailed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>default:<sp/>4146<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" kindref="member">getDevice</ref>(<sp/>gfx<sp/>)-&gt;CreateShaderResourceView(<sp/><ref refid="classTexture_a88b470c8fc311e910af1627fa44b51eb_1a88b470c8fc311e910af1627fa44b51eb" kindref="member">m_pTex</ref>.Get(),<sp/>&amp;srvDesc,<sp/>&amp;<ref refid="classTexture_a6e38a7b24e9a8eb8714b8ce86e8305c8_1a6e38a7b24e9a8eb8714b8ce86e8305c8" kindref="member">m_pD3dSrv</ref><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::string_literals;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>srvName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;srv_filepath&quot;</highlight><highlight class="normal">s<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;@&quot;</highlight><highlight class="normal">s<sp/>+<sp/>std::to_string(<sp/>slot<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cstr<sp/>=<sp/>srvName.c_str();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTexture_a6e38a7b24e9a8eb8714b8ce86e8305c8_1a6e38a7b24e9a8eb8714b8ce86e8305c8" kindref="member">m_pD3dSrv</ref>-&gt;SetPrivateData(<sp/>WKPDID_D3DDebugObjectName,<sp/>(UINT)<sp/>strlen(<sp/>cstr<sp/>),<sp/>cstr<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphicsFriend_a619e32893ab49ea6c5200e7c2d52e2f2_1a619e32893ab49ea6c5200e7c2d52e2f2" kindref="member">getDeviceContext</ref>(<sp/>gfx<sp/>)-&gt;GenerateMips(<sp/><ref refid="classTexture_a6e38a7b24e9a8eb8714b8ce86e8305c8_1a6e38a7b24e9a8eb8714b8ce86e8305c8" kindref="member">m_pD3dSrv</ref>.Get()<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_accf41747d77929c5a185f1f7d5c72263_1accf41747d77929c5a185f1f7d5c72263" kindref="member">DXGI_GET_QUEUE_INFO</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classTexture_a8077b6ae80650f4901ed7f77e014e25b_1a8077b6ae80650f4901ed7f77e014e25b" refkind="member"><highlight class="normal"><ref refid="classTexture_a0331ea0fa1111565a77e34930527aa9f_1a0331ea0fa1111565a77e34930527aa9f" kindref="member">Texture::Texture</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>width,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="texture_8h_a48efc2b83d04747965ce26c7eb8d406c_1a48efc2b83d04747965ce26c7eb8d406c" kindref="member">TextureOp</ref><sp/>op<sp/></highlight><highlight class="comment">/*=<sp/>nullptr*/</highlight><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bDynamic{true},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>m_width(width),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>m_height(height),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>m_slot(slot),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>m_op(op)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_TEXTURE2D_DESC<sp/>texDesc<sp/>=<sp/><ref refid="texture__desc_8h_aed49d8003c0bd913475b88771be11296_1aed49d8003c0bd913475b88771be11296" kindref="member">createTextureDescriptor</ref>(<sp/>width,<sp/>height,<sp/>DXGI_FORMAT_B8G8R8A8_UNORM,<sp/><ref refid="texture__desc_8h_a84e8864fab1faebd38dd020fb6050ee2_1a84e8864fab1faebd38dd020fb6050ee2aecb5f043fe4173c345536375a69c1a9f" kindref="member">BindFlags::TextureOnly</ref>,<sp/><ref refid="texture__desc_8h_a7e39f63b567b83d32dd82e7a0c062e08_1a7e39f63b567b83d32dd82e7a0c062e08a527c16865884105074cb5d2e812cbcfa" kindref="member">CpuAccessFlags::CpuWriteAccess</ref>,<sp/><ref refid="texture__desc_8h_af3a2e76419de0e0d1ec1b12a83047412_1af3a2e76419de0e0d1ec1b12a83047412a96535b1625776102bcc13f7dfb598dcb" kindref="member">TextureUsage::Dynamic</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/><ref refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" kindref="member">getDevice</ref>(<sp/>gfx<sp/>)-&gt;CreateTexture2D(<sp/>&amp;texDesc,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classTexture_a88b470c8fc311e910af1627fa44b51eb_1a88b470c8fc311e910af1627fa44b51eb" kindref="member">m_pTex</ref><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>D2D_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>DXGI<sp/>Surface<sp/>for<sp/>d2d<sp/>interoperability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classTexture_a88b470c8fc311e910af1627fa44b51eb_1a88b470c8fc311e910af1627fa44b51eb" kindref="member">m_pTex</ref>-&gt;QueryInterface(<sp/>__uuidof(<sp/>IDXGISurface<sp/>),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>gfx.surface2d().GetAddressOf()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_SHADER_RESOURCE_VIEW_DESC<sp/>srvDesc{};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Format<sp/>=<sp/>texDesc.Format;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.ViewDimension<sp/>=<sp/>D3D11_SRV_DIMENSION_TEXTURE2D;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2D.MostDetailedMip<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2D.MipLevels<sp/>=<sp/>1u;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" kindref="member">getDevice</ref>(<sp/>gfx<sp/>)-&gt;CreateShaderResourceView(<sp/><ref refid="classTexture_a88b470c8fc311e910af1627fa44b51eb_1a88b470c8fc311e910af1627fa44b51eb" kindref="member">m_pTex</ref>.Get(),<sp/>&amp;srvDesc,<sp/>&amp;<ref refid="classTexture_a6e38a7b24e9a8eb8714b8ce86e8305c8_1a6e38a7b24e9a8eb8714b8ce86e8305c8" kindref="member">m_pD3dSrv</ref><sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classTexture_a9f0969925008410870590127fdf960ce_1a9f0969925008410870590127fdf960ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTexture_a9f0969925008410870590127fdf960ce_1a9f0969925008410870590127fdf960ce" kindref="member">Texture::paintTextureWithBitmap</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ID3D11Texture2D<sp/>*tex,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBitmap" kindref="compound">Bitmap</ref><sp/>&amp;bitmap,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D3D11_BOX<sp/>*destPortion<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>nullptr<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGraphicsFriend_a619e32893ab49ea6c5200e7c2d52e2f2_1a619e32893ab49ea6c5200e7c2d52e2f2" kindref="member">getDeviceContext</ref>(<sp/>gfx<sp/>)-&gt;UpdateSubresource(<sp/>tex,<sp/>0u,<sp/>destPortion,<sp/>bitmap.<ref refid="classBitmap_a405a23fbca1232ebd8e2bbbc05cd6fae_1a405a23fbca1232ebd8e2bbbc05cd6fae" kindref="member">getData</ref>(),<sp/>bitmap.<ref refid="classBitmap_a55f7f5472b895c5eed369cf9b9c685da_1a55f7f5472b895c5eed369cf9b9c685da" kindref="member">getPitch</ref>(),<sp/>0u<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_accf41747d77929c5a185f1f7d5c72263_1accf41747d77929c5a185f1f7d5c72263" kindref="member">DXGI_GET_QUEUE_INFO</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classTexture_ae3518498a4665623f5af7c8468552041_1ae3518498a4665623f5af7c8468552041" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTexture_ae3518498a4665623f5af7c8468552041_1ae3518498a4665623f5af7c8468552041" kindref="member">Texture::update</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_MAPPED_SUBRESOURCE<sp/>msr{};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>getDeviceContext(<sp/>gfx<sp/>)-&gt;Map(<sp/>m_pTex.Get(),<sp/>0u,<sp/>D3D11_MAP::D3D11_MAP_WRITE_DISCARD,<sp/>0u,<sp/>&amp;msr<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/>*pDst<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>msr.pData<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>dstWidth<sp/>=<sp/>msr.RowPitch<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>srcWidth<sp/>=<sp/>m_width;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nRowBytes<sp/>=<sp/>srcWidth<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref><sp/>*pSrc<sp/>=<sp/>gfx.cpuBuffer();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>1<sp/>line<sp/>at<sp/>a<sp/>time<sp/>from<sp/>cpuBuffer<sp/>to<sp/>dynamic<sp/>GPU<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0u;<sp/>y<sp/>&lt;<sp/>m_height;<sp/>++y<sp/>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>&amp;pDst[y<sp/>*<sp/>dstWidth],<sp/>&amp;pSrc[y<sp/>*<sp/>srcWidth],<sp/>nRowBytes<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>getDeviceContext(<sp/>gfx<sp/>)-&gt;Unmap(<sp/>m_pTex.Get(),<sp/>0u<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classTexture_a352000d68cf402ecbc94f2c802a80c48_1a352000d68cf402ecbc94f2c802a80c48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTexture_a352000d68cf402ecbc94f2c802a80c48_1a352000d68cf402ecbc94f2c802a80c48" kindref="member">Texture::bind</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bDynamic<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>getDeviceContext(<sp/>gfx<sp/>)-&gt;PSSetShaderResources(<sp/>m_slot,<sp/>1u,<sp/>m_pD3dSrv.GetAddressOf()<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_accf41747d77929c5a185f1f7d5c72263_1accf41747d77929c5a185f1f7d5c72263" kindref="member">DXGI_GET_QUEUE_INFO</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classTexture_a715fd642d50db2d070999d5f4cc3879b_1a715fd642d50db2d070999d5f4cc3879b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classTexture_a715fd642d50db2d070999d5f4cc3879b_1a715fd642d50db2d070999d5f4cc3879b" kindref="member">Texture::hasAlpha</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTexture_a891a27933cfc6deafcc3597ee9cfe07f_1a891a27933cfc6deafcc3597ee9cfe07f" kindref="member">m_bAlpha</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classTexture_aff8d7e3c74f035ccd2161ee662fdd615_1aff8d7e3c74f035ccd2161ee662fdd615" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classTexture_aff8d7e3c74f035ccd2161ee662fdd615_1aff8d7e3c74f035ccd2161ee662fdd615" kindref="member">Texture::getPath</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTexture_a3dd6dde05fca6bd7f4ab08b3a6307959_1a3dd6dde05fca6bd7f4ab08b3a6307959" kindref="member">m_path</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classTexture_a052fba7fdc48d8ab6aa3dd7b0733685e_1a052fba7fdc48d8ab6aa3dd7b0733685e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classTexture_a052fba7fdc48d8ab6aa3dd7b0733685e_1a052fba7fdc48d8ab6aa3dd7b0733685e" kindref="member">Texture::getWidth</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTexture_ac243c2a4552bc0af19b5b1ea812ce9ee_1ac243c2a4552bc0af19b5b1ea812ce9ee" kindref="member">m_width</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classTexture_ab783ec34f0deb747df517619c86942ba_1ab783ec34f0deb747df517619c86942ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classTexture_ab783ec34f0deb747df517619c86942ba_1ab783ec34f0deb747df517619c86942ba" kindref="member">Texture::getHeight</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTexture_ae8f4dc92aa7350d5e5805c520834604f_1ae8f4dc92aa7350d5e5805c520834604f" kindref="member">m_height</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classTexture_afdb1a6d1c899f3619d19fefeeea0de40_1afdb1a6d1c899f3619d19fefeeea0de40" refkind="member"><highlight class="normal">Microsoft::WRL::ComPtr&lt;ID3D11ShaderResourceView&gt;&amp;<sp/><ref refid="classTexture_afdb1a6d1c899f3619d19fefeeea0de40_1afdb1a6d1c899f3619d19fefeeea0de40" kindref="member">Texture::getD3dSrv</ref>()</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTexture_a6e38a7b24e9a8eb8714b8ce86e8305c8_1a6e38a7b24e9a8eb8714b8ce86e8305c8" kindref="member">m_pD3dSrv</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classTexture_a9a7654906f9ca05ca82c96f1f2da576e_1a9a7654906f9ca05ca82c96f1f2da576e" refkind="member"><highlight class="normal">std::shared_ptr&lt;Texture&gt;<sp/><ref refid="classTexture_a9a7654906f9ca05ca82c96f1f2da576e_1a9a7654906f9ca05ca82c96f1f2da576e" kindref="member">Texture::fetch</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filepath,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="texture_8h_a48efc2b83d04747965ce26c7eb8d406c_1a48efc2b83d04747965ce26c7eb8d406c" kindref="member">TextureOp</ref><sp/>op<sp/></highlight><highlight class="comment">/*=<sp/>nullptr*/</highlight><highlight class="normal"><sp/><sp/>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classBindableRegistry_a034568929d2dbcda2bf619e90d9fc68e_1a034568929d2dbcda2bf619e90d9fc68e" kindref="member">BindableRegistry::fetch&lt;Texture&gt;</ref>(<sp/>gfx,<sp/>filepath,<sp/>slot,<sp/>op<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classTexture_a72e33b3324d9429f293e843b517ac357_1a72e33b3324d9429f293e843b517ac357" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classTexture_a72e33b3324d9429f293e843b517ac357_1a72e33b3324d9429f293e843b517ac357" kindref="member">Texture::calcUid</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filepath,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="texture_8h_a48efc2b83d04747965ce26c7eb8d406c_1a48efc2b83d04747965ce26c7eb8d406c" kindref="member">TextureOp</ref><sp/>op<sp/></highlight><highlight class="comment">/*=<sp/>nullptr*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::string_literals;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<sp/><ref refid="classTexture_a0331ea0fa1111565a77e34930527aa9f_1a0331ea0fa1111565a77e34930527aa9f" kindref="member">Texture</ref><sp/>).name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">s<sp/>+<sp/>filepath<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">s<sp/>+<sp/>std::to_string(<sp/>slot<sp/>)<sp/>+<sp/>(<sp/>op<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<sp/><ref refid="namespaceutil_a3d18d29fbb21273515e6b38ff2b47109_1a3d18d29fbb21273515e6b38ff2b47109" kindref="member">util::pointerToInt</ref>(<sp/>std::addressof(op)<sp/>)<sp/>)<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classTexture_a628d855d2087b4a03c00f781290b26fa_1a628d855d2087b4a03c00f781290b26fa" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classTexture_a628d855d2087b4a03c00f781290b26fa_1a628d855d2087b4a03c00f781290b26fa" kindref="member">Texture::getUid</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTexture_a72e33b3324d9429f293e843b517ac357_1a72e33b3324d9429f293e843b517ac357" kindref="member">calcUid</ref>(<sp/><ref refid="classTexture_a3dd6dde05fca6bd7f4ab08b3a6307959_1a3dd6dde05fca6bd7f4ab08b3a6307959" kindref="member">m_path</ref>,<sp/><ref refid="classTexture_a80f9298671ae47c264992268f659287c_1a80f9298671ae47c264992268f659287c" kindref="member">m_slot</ref>,<sp/><ref refid="classTexture_abbf21618c668cdaeba940ca5e4c203a8_1abbf21618c668cdaeba940ca5e4c203a8" kindref="member">m_op</ref><sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classTexture_a9637f3b195ad4156f4c35dc6b6c7633c_1a9637f3b195ad4156f4c35dc6b6c7633c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classTexture_a9637f3b195ad4156f4c35dc6b6c7633c_1a9637f3b195ad4156f4c35dc6b6c7633c" kindref="member">Texture::getSlot</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTexture_a80f9298671ae47c264992268f659287c_1a80f9298671ae47c264992268f659287c" kindref="member">m_slot</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classTextureOffscreenRT_a20c9af6ea2487abb5c34158ee58c072f_1a20c9af6ea2487abb5c34158ee58c072f" refkind="member"><highlight class="normal"><ref refid="classTextureOffscreenRT_a20c9af6ea2487abb5c34158ee58c072f_1a20c9af6ea2487abb5c34158ee58c072f" kindref="member">TextureOffscreenRT::TextureOffscreenRT</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>width,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="texture__desc_8h_a6b4948cc0d12c93e6396540e02e2df58_1a6b4948cc0d12c93e6396540e02e2df58" kindref="member">RenderTargetViewMode</ref><sp/>rtvMode<sp/>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>m_slot(slot)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_TEXTURE2D_DESC<sp/>texDesc<sp/>=<sp/><ref refid="texture__desc_8h_aed49d8003c0bd913475b88771be11296_1aed49d8003c0bd913475b88771be11296" kindref="member">createTextureDescriptor</ref>(<sp/>width,<sp/>height,<sp/><ref refid="texture__desc_8h_a42d18799df978a38e809f8588cbd5f7b_1a42d18799df978a38e809f8588cbd5f7b" kindref="member">getFormatRtv</ref>(<sp/>rtvMode<sp/>),<sp/><ref refid="texture__desc_8h_a84e8864fab1faebd38dd020fb6050ee2_1a84e8864fab1faebd38dd020fb6050ee2a9504b991462f464a38554ba3f1a804ee" kindref="member">BindFlags::RenderTargetTexture</ref>,<sp/><ref refid="texture__desc_8h_a7e39f63b567b83d32dd82e7a0c062e08_1a7e39f63b567b83d32dd82e7a0c062e08a3986e6101d3d5b354d3b3b58445d046b" kindref="member">CpuAccessFlags::NoCpuAccess</ref>,<sp/><ref refid="texture__desc_8h_af3a2e76419de0e0d1ec1b12a83047412_1af3a2e76419de0e0d1ec1b12a83047412a79935518a3889663d8688b6b01fff051" kindref="member">TextureUsage::Default</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>mwrl::ComPtr&lt;ID3D11Texture2D&gt;<sp/>pTexture;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/><ref refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" kindref="member">getDevice</ref>(<sp/>gfx<sp/>)-&gt;CreateTexture2D(<sp/>&amp;texDesc,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;pTexture<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_SHADER_RESOURCE_VIEW_DESC<sp/>srvDesc{};</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Format<sp/>=<sp/>texDesc.Format;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.ViewDimension<sp/>=<sp/>D3D11_SRV_DIMENSION_TEXTURE2D;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2D.MostDetailedMip<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2D.MipLevels<sp/>=<sp/>1u;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" kindref="member">getDevice</ref>(<sp/>gfx<sp/>)-&gt;CreateShaderResourceView(<sp/>pTexture.Get(),<sp/>&amp;srvDesc,<sp/>&amp;<ref refid="classTextureOffscreenRT_afc1033b02b280efdf51050f586c98ddf_1afc1033b02b280efdf51050f586c98ddf" kindref="member">m_pD3dSrv</ref><sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>RTV<sp/>that<sp/>will<sp/>render<sp/>on<sp/>the<sp/>created<sp/>offscreen<sp/>texture<sp/>and<sp/>on<sp/>a<sp/>next<sp/>pass<sp/>we<sp/>can<sp/>use<sp/>this<sp/>RTV<sp/>to<sp/>read<sp/>that<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTextureOffscreenRT_ac30cfccbdba1046d26d3c4c3af5e379e_1ac30cfccbdba1046d26d3c4c3af5e379e" kindref="member">m_pRtv</ref><sp/>=<sp/>std::make_shared&lt;RenderTargetOutput&gt;(<sp/>gfx,<sp/>pTexture.Get()<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classTextureOffscreenRT_a49c465d1bd478ec9f0341828caf99caf_1a49c465d1bd478ec9f0341828caf99caf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTextureOffscreenRT_a49c465d1bd478ec9f0341828caf99caf_1a49c465d1bd478ec9f0341828caf99caf" kindref="member">TextureOffscreenRT::bind</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>getDeviceContext(<sp/>gfx<sp/>)-&gt;PSSetShaderResources(<sp/>m_slot,<sp/>1u,<sp/>m_pD3dSrv.GetAddressOf()<sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_accf41747d77929c5a185f1f7d5c72263_1accf41747d77929c5a185f1f7d5c72263" kindref="member">DXGI_GET_QUEUE_INFO</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classTextureOffscreenRT_a9c84ed001f296e7be0cac79810f06c91_1a9c84ed001f296e7be0cac79810f06c91" refkind="member"><highlight class="normal">std::shared_ptr&lt;RenderTargetOutput&gt;<sp/><ref refid="classTextureOffscreenRT_a9c84ed001f296e7be0cac79810f06c91_1a9c84ed001f296e7be0cac79810f06c91" kindref="member">TextureOffscreenRT::shareRenderTarget</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTextureOffscreenRT_ac30cfccbdba1046d26d3c4c3af5e379e_1ac30cfccbdba1046d26d3c4c3af5e379e" kindref="member">m_pRtv</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="classTextureOffscreenRT_a99c1248860d2295b692493bcb123cb02_1a99c1248860d2295b692493bcb123cb02" refkind="member"><highlight class="normal">std::shared_ptr&lt;RenderTargetOutput&gt;&amp;<sp/><ref refid="classTextureOffscreenRT_a99c1248860d2295b692493bcb123cb02_1a99c1248860d2295b692493bcb123cb02" kindref="member">TextureOffscreenRT::accessRtv</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTextureOffscreenRT_ac30cfccbdba1046d26d3c4c3af5e379e_1ac30cfccbdba1046d26d3c4c3af5e379e" kindref="member">m_pRtv</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classTextureOffscreenRT_a099e66a07343704711392d2299d5687d_1a099e66a07343704711392d2299d5687d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classTextureOffscreenRT_a099e66a07343704711392d2299d5687d_1a099e66a07343704711392d2299d5687d" kindref="member">TextureOffscreenRT::getSlot</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTextureOffscreenRT_aaedecd2208f87ce77b6e87e5c03ee19d_1aaedecd2208f87ce77b6e87e5c03ee19d" kindref="member">m_slot</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classTextureOffscreenDS_a945e26603caa6d94b95e1852faa6438e_1a945e26603caa6d94b95e1852faa6438e" refkind="member"><highlight class="normal"><ref refid="classTextureOffscreenDS_a945e26603caa6d94b95e1852faa6438e_1a945e26603caa6d94b95e1852faa6438e" kindref="member">TextureOffscreenDS::TextureOffscreenDS</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>width,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="texture__desc_8h_a5aacc2000fea78d975de8fe06e3698f2_1a5aacc2000fea78d975de8fe06e3698f2" kindref="member">DepthStencilViewMode</ref><sp/>dsvMode<sp/>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>m_slot(slot)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_TEXTURE2D_DESC<sp/>texDesc<sp/>=<sp/><ref refid="texture__desc_8h_aed49d8003c0bd913475b88771be11296_1aed49d8003c0bd913475b88771be11296" kindref="member">createTextureDescriptor</ref>(<sp/>width,<sp/>height,<sp/><ref refid="texture__desc_8h_a70ee284a2074507d586cded00e2e8617_1a70ee284a2074507d586cded00e2e8617" kindref="member">getTypelessFormatDsv</ref>(<sp/>dsvMode<sp/>),<sp/><ref refid="texture__desc_8h_a84e8864fab1faebd38dd020fb6050ee2_1a84e8864fab1faebd38dd020fb6050ee2a05274c5f679d387842c005d8563da7c7" kindref="member">BindFlags::DepthStencilTexture</ref>,<sp/><ref refid="texture__desc_8h_a7e39f63b567b83d32dd82e7a0c062e08_1a7e39f63b567b83d32dd82e7a0c062e08a3986e6101d3d5b354d3b3b58445d046b" kindref="member">CpuAccessFlags::NoCpuAccess</ref>,<sp/><ref refid="texture__desc_8h_af3a2e76419de0e0d1ec1b12a83047412_1af3a2e76419de0e0d1ec1b12a83047412a79935518a3889663d8688b6b01fff051" kindref="member">TextureUsage::Default</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>mwrl::ComPtr&lt;ID3D11Texture2D&gt;<sp/>pTexture;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/><ref refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" kindref="member">getDevice</ref>(<sp/>gfx<sp/>)-&gt;CreateTexture2D(<sp/>&amp;texDesc,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;pTexture<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_SHADER_RESOURCE_VIEW_DESC<sp/>srvDesc{};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Format<sp/>=<sp/><ref refid="texture__desc_8h_a735b8903be34d33b390feb6524fffcb7_1a735b8903be34d33b390feb6524fffcb7" kindref="member">getShaderInputFormatDsv</ref>(<sp/>dsvMode<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.ViewDimension<sp/>=<sp/>D3D11_SRV_DIMENSION_TEXTURE2D;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2D.MostDetailedMip<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2D.MipLevels<sp/>=<sp/>1u;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" kindref="member">getDevice</ref>(<sp/>gfx<sp/>)-&gt;CreateShaderResourceView(<sp/>pTexture.Get(),<sp/>&amp;srvDesc,<sp/>&amp;<ref refid="classTextureOffscreenDS_abb356b8ca3037bc0983219b434ea7161_1abb356b8ca3037bc0983219b434ea7161" kindref="member">m_pD3dSrv</ref><sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>DSV<sp/>that<sp/>will<sp/>render<sp/>on<sp/>the<sp/>created<sp/>offscreen<sp/>texture<sp/>and<sp/>on<sp/>a<sp/>next<sp/>pass<sp/>we<sp/>can<sp/>use<sp/>this<sp/>SRV<sp/>to<sp/>read<sp/>that<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTextureOffscreenDS_a9b26bfd254720792283511dd457cf329_1a9b26bfd254720792283511dd457cf329" kindref="member">m_pDsv</ref><sp/>=<sp/>std::make_shared&lt;DepthStencilOutput&gt;(<sp/>gfx,<sp/>pTexture.Get(),<sp/>dsvMode,<sp/>std::nullopt<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classTextureOffscreenDS_a7d8959140611d45c7178cd42c6e524ba_1a7d8959140611d45c7178cd42c6e524ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTextureOffscreenDS_a7d8959140611d45c7178cd42c6e524ba_1a7d8959140611d45c7178cd42c6e524ba" kindref="member">TextureOffscreenDS::bind</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>getDeviceContext(<sp/>gfx<sp/>)-&gt;PSSetShaderResources(<sp/>m_slot,<sp/>1u,<sp/>m_pD3dSrv.GetAddressOf()<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_accf41747d77929c5a185f1f7d5c72263_1accf41747d77929c5a185f1f7d5c72263" kindref="member">DXGI_GET_QUEUE_INFO</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classTextureOffscreenDS_a4cba906de522a7b08cc17ffb20f6b792_1a4cba906de522a7b08cc17ffb20f6b792" refkind="member"><highlight class="normal">std::shared_ptr&lt;DepthStencilOutput&gt;<sp/><ref refid="classTextureOffscreenDS_a4cba906de522a7b08cc17ffb20f6b792_1a4cba906de522a7b08cc17ffb20f6b792" kindref="member">TextureOffscreenDS::shareDepthBuffer</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="267"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTextureOffscreenDS_a9b26bfd254720792283511dd457cf329_1a9b26bfd254720792283511dd457cf329" kindref="member">m_pDsv</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classTextureOffscreenDS_a330165b4ce9659fbcc612432ea98e9b7_1a330165b4ce9659fbcc612432ea98e9b7" refkind="member"><highlight class="normal">std::shared_ptr&lt;DepthStencilOutput&gt;&amp;<sp/><ref refid="classTextureOffscreenDS_a330165b4ce9659fbcc612432ea98e9b7_1a330165b4ce9659fbcc612432ea98e9b7" kindref="member">TextureOffscreenDS::accessDsv</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTextureOffscreenDS_a9b26bfd254720792283511dd457cf329_1a9b26bfd254720792283511dd457cf329" kindref="member">m_pDsv</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classTextureOffscreenDS_a95a5353ca7c193f159457cadfeea0c79_1a95a5353ca7c193f159457cadfeea0c79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classTextureOffscreenDS_a95a5353ca7c193f159457cadfeea0c79_1a95a5353ca7c193f159457cadfeea0c79" kindref="member">TextureOffscreenDS::getSlot</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTextureOffscreenDS_a33e4b2416a7631cf81b49426783f5e3d_1a33e4b2416a7631cf81b49426783f5e3d" kindref="member">m_slot</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classTextureArrayOffscreenDS_aca6d6cb9a7b1e8449149ba3937dd7c6e_1aca6d6cb9a7b1e8449149ba3937dd7c6e" refkind="member"><highlight class="normal"><ref refid="classTextureArrayOffscreenDS_aca6d6cb9a7b1e8449149ba3937dd7c6e_1aca6d6cb9a7b1e8449149ba3937dd7c6e" kindref="member">TextureArrayOffscreenDS::TextureArrayOffscreenDS</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>width,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>slot,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="texture__desc_8h_a5aacc2000fea78d975de8fe06e3698f2_1a5aacc2000fea78d975de8fe06e3698f2" kindref="member">DepthStencilViewMode</ref><sp/>dsvMode,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nTextures<sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>m_slot(slot),</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nTextures{nTextures}</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>formats<sp/>like<sp/>DXGI_FORMAT_R32_TYPELESS,<sp/>DXGI_FORMAT_R24G8_TYPELESS<sp/>(typeless)<sp/>&amp;<sp/>DXGI_FORMAT_R32_FLOAT<sp/>(typed)<sp/>support<sp/>both<sp/>depth-stencil<sp/>operations<sp/>and<sp/>shader<sp/>resource<sp/>views</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_TEXTURE2D_DESC<sp/>texDesc<sp/>=<sp/><ref refid="texture__desc_8h_aed49d8003c0bd913475b88771be11296_1aed49d8003c0bd913475b88771be11296" kindref="member">createTextureDescriptor</ref>(<sp/>width,<sp/>height,<sp/><ref refid="texture__desc_8h_a70ee284a2074507d586cded00e2e8617_1a70ee284a2074507d586cded00e2e8617" kindref="member">getTypelessFormatDsv</ref>(<sp/>dsvMode<sp/>),<sp/><ref refid="texture__desc_8h_a84e8864fab1faebd38dd020fb6050ee2_1a84e8864fab1faebd38dd020fb6050ee2a05274c5f679d387842c005d8563da7c7" kindref="member">BindFlags::DepthStencilTexture</ref>,<sp/><ref refid="texture__desc_8h_a7e39f63b567b83d32dd82e7a0c062e08_1a7e39f63b567b83d32dd82e7a0c062e08a3986e6101d3d5b354d3b3b58445d046b" kindref="member">CpuAccessFlags::NoCpuAccess</ref>,<sp/><ref refid="texture__desc_8h_af3a2e76419de0e0d1ec1b12a83047412_1af3a2e76419de0e0d1ec1b12a83047412a79935518a3889663d8688b6b01fff051" kindref="member">TextureUsage::Default</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>nTextures<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>mwrl::ComPtr&lt;ID3D11Texture2D&gt;<sp/>pTextureArray;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/><ref refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" kindref="member">getDevice</ref>(<sp/>gfx<sp/>)-&gt;CreateTexture2D(<sp/>&amp;texDesc,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;pTextureArray<sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>D3D11_SHADER_RESOURCE_VIEW_DESC<sp/>srvDesc{};</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Format<sp/>=<sp/><ref refid="texture__desc_8h_a735b8903be34d33b390feb6524fffcb7_1a735b8903be34d33b390feb6524fffcb7" kindref="member">getShaderInputFormatDsv</ref>(<sp/>dsvMode<sp/>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.ViewDimension<sp/>=<sp/>D3D11_SRV_DIMENSION_TEXTURE2DARRAY;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2DArray.ArraySize<sp/>=<sp/>nTextures;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>textures/slices<sp/>in<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2DArray.FirstArraySlice<sp/>=<sp/>0u;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>of<sp/>the<sp/>texture/slice<sp/>in<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2DArray.MostDetailedMip<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>srvDesc.Texture2DArray.MipLevels<sp/>=<sp/>texDesc.MipLevels;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>srvDesc.Texture2DArray.ArraySize<sp/>==<sp/>texDesc.ArraySize<sp/>&amp;&amp;<sp/>srvDesc.Texture2DArray.ArraySize<sp/>==<sp/>nTextures,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>amount<sp/>of<sp/>textures<sp/>in<sp/>array!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" kindref="member">getDevice</ref>(<sp/>gfx<sp/>)-&gt;CreateShaderResourceView(<sp/>pTextureArray.Get(),<sp/>&amp;srvDesc,<sp/>&amp;<ref refid="classTextureArrayOffscreenDS_ad08db3511334d0865080e7632adde30f_1ad08db3511334d0865080e7632adde30f" kindref="member">m_pD3dSrv</ref><sp/>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTextureArrayOffscreenDS_a603b9d6edd6532ed43c30aafa56baa1b_1a603b9d6edd6532ed43c30aafa56baa1b" kindref="member">m_depthStencilViews</ref>.reserve(<sp/>nTextures<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>DSV<sp/>texture<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>nTextures;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTextureArrayOffscreenDS_a603b9d6edd6532ed43c30aafa56baa1b_1a603b9d6edd6532ed43c30aafa56baa1b" kindref="member">m_depthStencilViews</ref>.push_back(<sp/>std::make_shared&lt;DepthStencilOutput&gt;(<sp/>gfx,<sp/>pTextureArray.Get(),<sp/>dsvMode,<sp/>i,<sp/>std::nullopt<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="classTextureArrayOffscreenDS_a1f30c7f8c810f401124ff8a9d9326b7f_1a1f30c7f8c810f401124ff8a9d9326b7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTextureArrayOffscreenDS_a1f30c7f8c810f401124ff8a9d9326b7f_1a1f30c7f8c810f401124ff8a9d9326b7f" kindref="member">TextureArrayOffscreenDS::bind</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>getDeviceContext(<sp/>gfx<sp/>)-&gt;PSSetShaderResources(<sp/>m_slot,<sp/>1u,<sp/>m_pD3dSrv.GetAddressOf()<sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dxgi__info__queue_8h_accf41747d77929c5a185f1f7d5c72263_1accf41747d77929c5a185f1f7d5c72263" kindref="member">DXGI_GET_QUEUE_INFO</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classTextureArrayOffscreenDS_a9362397b1cbc6100f0d1515a2e2ed133_1a9362397b1cbc6100f0d1515a2e2ed133" refkind="member"><highlight class="normal">std::shared_ptr&lt;DepthStencilOutput&gt;<sp/><ref refid="classTextureArrayOffscreenDS_a9362397b1cbc6100f0d1515a2e2ed133_1a9362397b1cbc6100f0d1515a2e2ed133" kindref="member">TextureArrayOffscreenDS::shareDepthBuffer</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="326"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTextureArrayOffscreenDS_a603b9d6edd6532ed43c30aafa56baa1b_1a603b9d6edd6532ed43c30aafa56baa1b" kindref="member">m_depthStencilViews</ref>[index];</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="classTextureArrayOffscreenDS_a1795859f96e382635a686da09cb06d23_1a1795859f96e382635a686da09cb06d23" refkind="member"><highlight class="normal"><ref refid="classDepthStencilOutput" kindref="compound">DepthStencilOutput</ref>*<sp/><ref refid="classTextureArrayOffscreenDS_a1795859f96e382635a686da09cb06d23_1a1795859f96e382635a686da09cb06d23" kindref="member">TextureArrayOffscreenDS::accessDepthBuffer</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTextureArrayOffscreenDS_a603b9d6edd6532ed43c30aafa56baa1b_1a603b9d6edd6532ed43c30aafa56baa1b" kindref="member">m_depthStencilViews</ref>[index].get();</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classTextureArrayOffscreenDS_ae27472df75146ab560daec476b161a67_1ae27472df75146ab560daec476b161a67" refkind="member"><highlight class="normal"><ref refid="classDepthStencilOutput" kindref="compound">DepthStencilOutput</ref>*<sp/><ref refid="classTextureArrayOffscreenDS_ae27472df75146ab560daec476b161a67_1ae27472df75146ab560daec476b161a67" kindref="member">TextureArrayOffscreenDS::accessDsv</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_depthStencilViews[index].get();</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="classTextureArrayOffscreenDS_ad3f23e7ca676306ce21bd084e22ea6fe_1ad3f23e7ca676306ce21bd084e22ea6fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classTextureArrayOffscreenDS_ad3f23e7ca676306ce21bd084e22ea6fe_1ad3f23e7ca676306ce21bd084e22ea6fe" kindref="member">TextureArrayOffscreenDS::getSlot</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTextureArrayOffscreenDS_adb096dc72605cdfa1149b7aeee29280a_1adb096dc72605cdfa1149b7aeee29280a" kindref="member">m_slot</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="classTextureArrayOffscreenDS_a394552e6dae0290bfe23965f040b1748_1a394552e6dae0290bfe23965f040b1748" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classTextureArrayOffscreenDS_a394552e6dae0290bfe23965f040b1748_1a394552e6dae0290bfe23965f040b1748" kindref="member">TextureArrayOffscreenDS::getTextureCount</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTextureArrayOffscreenDS_acea5bcca953d4cbc105b2d70dbd96ffb_1acea5bcca953d4cbc105b2d70dbd96ffb" kindref="member">m_nTextures</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/texture.cpp"/>
  </compounddef>
</doxygen>
