<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classCamera" kind="class" language="C++" prot="public">
    <compoundname>Camera</compoundname>
    <includes refid="camera_8h" local="no">camera.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCamera_adb0c04e5448f0ee045ca510fdb5405cf_1adb0c04e5448f0ee045ca510fdb5405cf" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_translationSpeed</definition>
        <argsstring></argsstring>
        <name>m_translationSpeed</name>
        <qualifiedname>Camera::m_translationSpeed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="18" column="7" bodyfile="inc/camera.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a0b1c75781c142e6bb28761224d0b67ce_1a0b1c75781c142e6bb28761224d0b67ce" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_rotationSpeed</definition>
        <argsstring></argsstring>
        <name>m_rotationSpeed</name>
        <qualifiedname>Camera::m_rotationSpeed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="19" column="7" bodyfile="inc/camera.h" bodystart="19" bodyend="-1"/>
        <referencedby refid="classCamera_a4aa0720c85d630f02b29c833254551a6_1a4aa0720c85d630f02b29c833254551a6" compoundref="camera_8cpp" startline="361" endline="364">getRotationSpeed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_ae34dba3ef8b4a73e680c86f1637432ba_1ae34dba3ef8b4a73e680c86f1637432ba" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_nearZ</definition>
        <argsstring></argsstring>
        <name>m_nearZ</name>
        <qualifiedname>Camera::m_nearZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="20" column="7" bodyfile="inc/camera.h" bodystart="20" bodyend="-1"/>
        <referencedby refid="classCamera_a459c4094d26c1c4342563d8c57e5d57a_1a459c4094d26c1c4342563d8c57e5d57a" compoundref="camera_8cpp" startline="464" endline="467">getPerspectiveProjectionMatrix</referencedby>
        <referencedby refid="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" compoundref="camera_8cpp" startline="449" endline="456">updateCameraFrustum</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_ad2f737fa9ac9e419c9dde738848cd9d4_1ad2f737fa9ac9e419c9dde738848cd9d4" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_farZ</definition>
        <argsstring></argsstring>
        <name>m_farZ</name>
        <qualifiedname>Camera::m_farZ</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="21" column="7" bodyfile="inc/camera.h" bodystart="21" bodyend="-1"/>
        <referencedby refid="classCamera_a459c4094d26c1c4342563d8c57e5d57a_1a459c4094d26c1c4342563d8c57e5d57a" compoundref="camera_8cpp" startline="464" endline="467">getPerspectiveProjectionMatrix</referencedby>
        <referencedby refid="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" compoundref="camera_8cpp" startline="449" endline="456">updateCameraFrustum</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_aa1ce726b7396d34058d2684597d3318e_1aa1ce726b7396d34058d2684597d3318e" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_NearZDefault</definition>
        <argsstring></argsstring>
        <name>m_NearZDefault</name>
        <qualifiedname>Camera::m_NearZDefault</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="22" column="7" bodyfile="inc/camera.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a2a421b5480866ee34bf1f445e5f6e0ef_1a2a421b5480866ee34bf1f445e5f6e0ef" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_FarZDefault</definition>
        <argsstring></argsstring>
        <name>m_FarZDefault</name>
        <qualifiedname>Camera::m_FarZDefault</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="23" column="7" bodyfile="inc/camera.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a6d655887e5e87b12e19094ec89b74449_1a6d655887e5e87b12e19094ec89b74449" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <qualifiedname>Camera::m_width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="24" column="7" bodyfile="inc/camera.h" bodystart="24" bodyend="-1"/>
        <referencedby refid="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" compoundref="camera_8cpp" startline="140" endline="147">makeActive</referencedby>
        <referencedby refid="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" compoundref="camera_8cpp" startline="449" endline="456">updateCameraFrustum</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_ab78d1297dea3f67d7e59c1c1a2cf52ab_1ab78d1297dea3f67d7e59c1c1a2cf52ab" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <qualifiedname>Camera::m_height</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="25" column="7" bodyfile="inc/camera.h" bodystart="25" bodyend="-1"/>
        <referencedby refid="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" compoundref="camera_8cpp" startline="140" endline="147">makeActive</referencedby>
        <referencedby refid="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" compoundref="camera_8cpp" startline="449" endline="456">updateCameraFrustum</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a20a4a811978288156b482b1267f13dab_1a20a4a811978288156b482b1267f13dab" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_widthDefault</definition>
        <argsstring></argsstring>
        <name>m_widthDefault</name>
        <qualifiedname>Camera::m_widthDefault</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="26" column="7" bodyfile="inc/camera.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_ad9506e6640b04841e93c2db94847dde6_1ad9506e6640b04841e93c2db94847dde6" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_heightDefault</definition>
        <argsstring></argsstring>
        <name>m_heightDefault</name>
        <qualifiedname>Camera::m_heightDefault</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="27" column="7" bodyfile="inc/camera.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a9a5b3abea53ca97854696258029ee6cd_1a9a5b3abea53ca97854696258029ee6cd" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_aspectRatio</definition>
        <argsstring></argsstring>
        <name>m_aspectRatio</name>
        <qualifiedname>Camera::m_aspectRatio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="28" column="7" bodyfile="inc/camera.h" bodystart="28" bodyend="-1"/>
        <referencedby refid="classCamera_a459c4094d26c1c4342563d8c57e5d57a_1a459c4094d26c1c4342563d8c57e5d57a" compoundref="camera_8cpp" startline="464" endline="467">getPerspectiveProjectionMatrix</referencedby>
        <referencedby refid="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" compoundref="camera_8cpp" startline="449" endline="456">updateCameraFrustum</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a38e43d42c55982625419f60769cac43b_1a38e43d42c55982625419f60769cac43b" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_fovRadians</definition>
        <argsstring></argsstring>
        <name>m_fovRadians</name>
        <qualifiedname>Camera::m_fovRadians</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="29" column="7" bodyfile="inc/camera.h" bodystart="29" bodyend="-1"/>
        <referencedby refid="classCamera_af3981d25eb5b09097c9d60ef7f6a936c_1af3981d25eb5b09097c9d60ef7f6a936c" compoundref="camera_8cpp" startline="209" endline="212">getFovRadians</referencedby>
        <referencedby refid="classCamera_a459c4094d26c1c4342563d8c57e5d57a_1a459c4094d26c1c4342563d8c57e5d57a" compoundref="camera_8cpp" startline="464" endline="467">getPerspectiveProjectionMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a3c4f56de45dec516c93157dfe9aa2448_1a3c4f56de45dec516c93157dfe9aa2448" prot="private" static="no" mutable="no">
        <type>DirectX::XMFLOAT3</type>
        <definition>DirectX::XMFLOAT3 Camera::m_pos</definition>
        <argsstring></argsstring>
        <name>m_pos</name>
        <qualifiedname>Camera::m_pos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="30" column="19" bodyfile="inc/camera.h" bodystart="30" bodyend="-1"/>
        <referencedby refid="classCamera_a4e89fb4d7923b79a2ea9b6e892e2d3a7_1a4e89fb4d7923b79a2ea9b6e892e2d3a7" compoundref="camera_8cpp" startline="422" endline="425">getPosition</referencedby>
        <referencedby refid="classCamera_a5433d9b545d22abeecb3693cc832b99a_1a5433d9b545d22abeecb3693cc832b99a" compoundref="camera_8cpp" startline="417" endline="420">getPosition</referencedby>
        <referencedby refid="classCamera_aefe6e69f3d7bbdb9e48ae91ce22f485b_1aefe6e69f3d7bbdb9e48ae91ce22f485b" compoundref="camera_8cpp" startline="432" endline="435">getPositionMatrix</referencedby>
        <referencedby refid="classCamera_ab5b2ede544f3c7b5b24191703f96f460_1ab5b2ede544f3c7b5b24191703f96f460" compoundref="camera_8cpp" startline="442" endline="447">getTarget</referencedby>
        <referencedby refid="classCamera_a69061c32d9aae3cba2237a0733649928_1a69061c32d9aae3cba2237a0733649928" compoundref="camera_8cpp" startline="171" endline="176">getViewMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a1f85e07ba24f5f9a0d10efda54857a3f_1a1f85e07ba24f5f9a0d10efda54857a3f" prot="private" static="no" mutable="no">
        <type>DirectX::XMFLOAT3</type>
        <definition>DirectX::XMFLOAT3 Camera::m_posPrev</definition>
        <argsstring></argsstring>
        <name>m_posPrev</name>
        <qualifiedname>Camera::m_posPrev</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="31" column="19" bodyfile="inc/camera.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a0dd90368f15d7e0c172dfcb4caf6627e_1a0dd90368f15d7e0c172dfcb4caf6627e" prot="private" static="no" mutable="no">
        <type>DirectX::XMFLOAT3</type>
        <definition>DirectX::XMFLOAT3 Camera::m_posDefault</definition>
        <argsstring></argsstring>
        <name>m_posDefault</name>
        <qualifiedname>Camera::m_posDefault</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="32" column="19" bodyfile="inc/camera.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a2202e419e9440bbb26e6997248268b0b_1a2202e419e9440bbb26e6997248268b0b" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_pitch</definition>
        <argsstring></argsstring>
        <name>m_pitch</name>
        <qualifiedname>Camera::m_pitch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="33" column="7" bodyfile="inc/camera.h" bodystart="33" bodyend="-1"/>
        <referencedby refid="classCamera_a976313569576c8595a5e15d1c169ca9d_1a976313569576c8595a5e15d1c169ca9d" compoundref="camera_8cpp" startline="427" endline="430">getRotation</referencedby>
        <referencedby refid="classCamera_a1b8c041a2c04c520d64c73b8ab01b840_1a1b8c041a2c04c520d64c73b8ab01b840" compoundref="camera_8cpp" startline="437" endline="440">getRotationMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_ab856e56c25710180403bceca2c22a888_1ab856e56c25710180403bceca2c22a888" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_pitchPrev</definition>
        <argsstring></argsstring>
        <name>m_pitchPrev</name>
        <qualifiedname>Camera::m_pitchPrev</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="34" column="7" bodyfile="inc/camera.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a9f44d2b45faff50f09d91a1da0384fcc_1a9f44d2b45faff50f09d91a1da0384fcc" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_pitchDefault</definition>
        <argsstring></argsstring>
        <name>m_pitchDefault</name>
        <qualifiedname>Camera::m_pitchDefault</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="35" column="7" bodyfile="inc/camera.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_ae03a703f7273d3c869951b634f402771_1ae03a703f7273d3c869951b634f402771" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_yawDefault</definition>
        <argsstring></argsstring>
        <name>m_yawDefault</name>
        <qualifiedname>Camera::m_yawDefault</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="36" column="7" bodyfile="inc/camera.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a0f8807da02d4a1bb695be51793279873_1a0f8807da02d4a1bb695be51793279873" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_yaw</definition>
        <argsstring></argsstring>
        <name>m_yaw</name>
        <qualifiedname>Camera::m_yaw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="37" column="7" bodyfile="inc/camera.h" bodystart="37" bodyend="-1"/>
        <referencedby refid="classCamera_a976313569576c8595a5e15d1c169ca9d_1a976313569576c8595a5e15d1c169ca9d" compoundref="camera_8cpp" startline="427" endline="430">getRotation</referencedby>
        <referencedby refid="classCamera_a1b8c041a2c04c520d64c73b8ab01b840_1a1b8c041a2c04c520d64c73b8ab01b840" compoundref="camera_8cpp" startline="437" endline="440">getRotationMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a23e12021be77ab330284fad34c91c340_1a23e12021be77ab330284fad34c91c340" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Camera::m_yawPrev</definition>
        <argsstring></argsstring>
        <name>m_yawPrev</name>
        <qualifiedname>Camera::m_yawPrev</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="38" column="7" bodyfile="inc/camera.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a6ad830b0eebfaab3a181f022e6b8f03d_1a6ad830b0eebfaab3a181f022e6b8f03d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Camera::m_bTethered</definition>
        <argsstring></argsstring>
        <name>m_bTethered</name>
        <qualifiedname>Camera::m_bTethered</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="41" column="6" bodyfile="inc/camera.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_afa7cd578b69a71b3848e1c64fdea43a3_1afa7cd578b69a71b3848e1c64fdea43a3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Camera::m_bPespectiveProjection</definition>
        <argsstring></argsstring>
        <name>m_bPespectiveProjection</name>
        <qualifiedname>Camera::m_bPespectiveProjection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="42" column="6" bodyfile="inc/camera.h" bodystart="42" bodyend="-1"/>
        <referencedby refid="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" compoundref="camera_8cpp" startline="140" endline="147">makeActive</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a2f9e6d86b9814ef3488af9f201d1760a_1a2f9e6d86b9814ef3488af9f201d1760a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Camera::m_bShowWidget</definition>
        <argsstring></argsstring>
        <name>m_bShowWidget</name>
        <qualifiedname>Camera::m_bShowWidget</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="43" column="6" bodyfile="inc/camera.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_a4f25b59b81dcedbef0c58534116e0561_1a4f25b59b81dcedbef0c58534116e0561" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Camera::m_bShowFrustum</definition>
        <argsstring></argsstring>
        <name>m_bShowFrustum</name>
        <qualifiedname>Camera::m_bShowFrustum</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="44" column="6" bodyfile="inc/camera.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCamera_ac9530bde301f2e79c21bff33561f17da_1ac9530bde301f2e79c21bff33561f17da" prot="private" static="no" mutable="no">
        <type><ref refid="classModel" kindref="compound">Model</ref></type>
        <definition>Model Camera::m_cameraWidget</definition>
        <argsstring></argsstring>
        <name>m_cameraWidget</name>
        <qualifiedname>Camera::m_cameraWidget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="45" column="7" bodyfile="inc/camera.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="classCamera_a28fe2cb59984f7d7200a5b7a03b7fb01_1a28fe2cb59984f7d7200a5b7a03b7fb01" compoundref="camera_8cpp" startline="134" endline="138">connectMaterialsToRenderer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_ac2e3499708cef07f0c53ac3549985c05_1ac2e3499708cef07f0c53ac3549985c05" prot="private" static="no" mutable="no">
        <type><ref refid="classModel" kindref="compound">Model</ref></type>
        <definition>Model Camera::m_cameraFrustum</definition>
        <argsstring></argsstring>
        <name>m_cameraFrustum</name>
        <qualifiedname>Camera::m_cameraFrustum</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="46" column="7" bodyfile="inc/camera.h" bodystart="46" bodyend="-1"/>
        <referencedby refid="classCamera_a28fe2cb59984f7d7200a5b7a03b7fb01_1a28fe2cb59984f7d7200a5b7a03b7fb01" compoundref="camera_8cpp" startline="134" endline="138">connectMaterialsToRenderer</referencedby>
        <referencedby refid="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" compoundref="camera_8cpp" startline="449" endline="456">updateCameraFrustum</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCamera_acb7b3e084b057cc037734303700c5df7_1acb7b3e084b057cc037734303700c5df7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Camera::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <qualifiedname>Camera::m_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="47" column="13" bodyfile="inc/camera.h" bodystart="47" bodyend="-1"/>
        <referencedby refid="classCamera_a4cffeb51dd4475c274019f11b5c5c89f_1a4cffeb51dd4475c274019f11b5c5c89f" compoundref="camera_8cpp" startline="214" endline="217">getName</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classCamera_adc13a05bed1dc73ac90f29fc7b96dfa0_1adc13a05bed1dc73ac90f29fc7b96dfa0" prot="private" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Camera::getShadowOrthographicMatrix</definition>
        <argsstring>(const unsigned w, const unsigned h, const float shadowCamFarZ, const float shadowCamNearZ=1.0f) noexcept</argsstring>
        <name>getShadowOrthographicMatrix</name>
        <qualifiedname>Camera::getShadowOrthographicMatrix</qualifiedname>
        <param>
          <type>const unsigned</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>shadowCamFarZ</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>shadowCamNearZ</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="49" column="26" bodyfile="src/camera.cpp" bodystart="16" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a60f0edb6285926aad69f4dfcbfa11896_1a60f0edb6285926aad69f4dfcbfa11896" prot="private" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Camera::getShadowProjectionMatrix</definition>
        <argsstring>(const float shadowCamFarZ, const float shadowCamNearZ=1.0f) noexcept</argsstring>
        <name>getShadowProjectionMatrix</name>
        <qualifiedname>Camera::getShadowProjectionMatrix</qualifiedname>
        <param>
          <type>const float</type>
          <declname>shadowCamFarZ</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>shadowCamNearZ</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="50" column="26" bodyfile="src/camera.cpp" bodystart="24" bodyend="29"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classCamera_aaa6c4ca43fa06f9995d961d805fd4de3_1aaa6c4ca43fa06f9995d961d805fd4de3" prot="public" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMVECTOR</type>
        <definition>DirectX::XMVECTOR Camera::computeTargetVector</definition>
        <argsstring>(const DirectX::XMFLOAT3 &amp;pos, const float pitchDeg, const float yawDeg) noexcept</argsstring>
        <name>computeTargetVector</name>
        <qualifiedname>Camera::computeTargetVector</qualifiedname>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>pitchDeg</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>yawDeg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="52" column="26" bodyfile="src/camera.cpp" bodystart="31" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_acd1b1e7e17b69bdeb085b968e5793136_1acd1b1e7e17b69bdeb085b968e5793136" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; float, float &gt;</type>
        <definition>std::pair&lt; float, float &gt; Camera::computePitchYawInDegFromDirectionVector</definition>
        <argsstring>(const DirectX::XMFLOAT3 &amp;directionNormalized)</argsstring>
        <name>computePitchYawInDegFromDirectionVector</name>
        <qualifiedname>Camera::computePitchYawInDegFromDirectionVector</qualifiedname>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>directionNormalized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="53" column="18" bodyfile="src/camera.cpp" bodystart="50" bodyend="57"/>
        <referencedby refid="classDirectionalLight_a7ba55038fea019429f4d6833fba35eda_1a7ba55038fea019429f4d6833fba35eda" compoundref="light__source_8cpp" startline="171" endline="192">DirectionalLight::DirectionalLight</referencedby>
        <referencedby refid="classSpotLight_aa972a1f97ba572d1a73c3561f9c7834d_1aa972a1f97ba572d1a73c3561f9c7834d" compoundref="light__source_8cpp" startline="265" endline="286">SpotLight::SpotLight</referencedby>
        <referencedby refid="classCamera_a3a06462591b9d7c74a57d343330ac07a_1a3a06462591b9d7c74a57d343330ac07a" compoundref="camera_8cpp" startline="59" endline="63">computePitchYawRollInDegFromDirectionVector</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCamera_a3a06462591b9d7c74a57d343330ac07a_1a3a06462591b9d7c74a57d343330ac07a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DirectX::XMFLOAT3</type>
        <definition>DirectX::XMFLOAT3 Camera::computePitchYawRollInDegFromDirectionVector</definition>
        <argsstring>(const DirectX::XMFLOAT3 &amp;directionNormalized)</argsstring>
        <name>computePitchYawRollInDegFromDirectionVector</name>
        <qualifiedname>Camera::computePitchYawRollInDegFromDirectionVector</qualifiedname>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>directionNormalized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="54" column="26" bodyfile="src/camera.cpp" bodystart="59" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classCamera_a65fc3f5463fa3d988438c1e38770b876_1a65fc3f5463fa3d988438c1e38770b876" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Camera::Camera</definition>
        <argsstring>(Graphics &amp;gfx, const float width, const float height, const float fovDegrees=90.0f, const DirectX::XMFLOAT3 &amp;posDefault={0.0f, 0.0f, 0.0f}, const float pitchDegDefault=0.0f, const float yawDegDefault=0.0f, const bool bTethered=false, const bool bPerspectiveProjection=true, const float nearZ=0.5f, const float farZ=200.0f, const DirectX::XMFLOAT4 camWidgetColor={0.2f, 0.2f, 0.6f, 1.0f}, const DirectX::XMFLOAT4 camFrustumColor={0.6f, 0.2f, 0.2f, 1.0f}, const float translationSpeed=16.0f, const float rotationSpeed=0.096f, const bool bShowDebugMeshes=false) noexcept</argsstring>
        <name>Camera</name>
        <qualifiedname>Camera::Camera</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>fovDegrees</declname>
          <defval>90.0f</defval>
        </param>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>posDefault</declname>
          <defval>{0.0f, 0.0f, 0.0f}</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>pitchDegDefault</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>yawDegDefault</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>bTethered</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>bPerspectiveProjection</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>nearZ</declname>
          <defval>0.5f</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>farZ</declname>
          <defval>200.0f</defval>
        </param>
        <param>
          <type>const DirectX::XMFLOAT4</type>
          <declname>camWidgetColor</declname>
          <defval>{0.2f, 0.2f, 0.6f, 1.0f}</defval>
        </param>
        <param>
          <type>const DirectX::XMFLOAT4</type>
          <declname>camFrustumColor</declname>
          <defval>{0.6f, 0.2f, 0.2f, 1.0f}</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>translationSpeed</declname>
          <defval>16.0f</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>rotationSpeed</declname>
          <defval>0.096f</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>bShowDebugMeshes</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="56" column="1" bodyfile="src/camera.cpp" bodystart="65" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a12ef2532159ea4927385d862302129e7_1a12ef2532159ea4927385d862302129e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::update</definition>
        <argsstring>(const float dt, const float lerpBetweenFrames, const bool bEnableSmoothMovement=false) cond_noex</argsstring>
        <name>update</name>
        <qualifiedname>Camera::update</qualifiedname>
        <param>
          <type>const float</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lerpBetweenFrames</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>bEnableSmoothMovement</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="58" column="6" bodyfile="src/camera.cpp" bodystart="115" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_aa0f940aaaf3dc1afa030082b057feb76_1aa0f940aaaf3dc1afa030082b057feb76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::render</definition>
        <argsstring>(const size_t channel=rch::all) const cond_noex</argsstring>
        <name>render</name>
        <qualifiedname>Camera::render</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>channel</declname>
          <defval><ref refid="namespacerch_a7bda900872e1367b3434b6b548e17d2c_1a7bda900872e1367b3434b6b548e17d2c" kindref="member">rch::all</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="59" column="6" bodyfile="src/camera.cpp" bodystart="122" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a28fe2cb59984f7d7200a5b7a03b7fb01_1a28fe2cb59984f7d7200a5b7a03b7fb01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::connectMaterialsToRenderer</definition>
        <argsstring>(ren::Renderer &amp;ren)</argsstring>
        <name>connectMaterialsToRenderer</name>
        <qualifiedname>Camera::connectMaterialsToRenderer</qualifiedname>
        <param>
          <type><ref refid="classren_1_1Renderer" kindref="compound">ren::Renderer</ref> &amp;</type>
          <declname>ren</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="60" column="6" bodyfile="src/camera.cpp" bodystart="134" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::makeActive</definition>
        <argsstring>(Graphics &amp;gfx) const</argsstring>
        <name>makeActive</name>
        <qualifiedname>Camera::makeActive</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="61" column="6" bodyfile="src/camera.cpp" bodystart="140" bodyend="147"/>
        <referencedby refid="classSandbox3d_aac7b27aa253de8c2f127536da4249833_1aac7b27aa253de8c2f127536da4249833" compoundref="game_8cpp" startline="409" endline="466">Sandbox3d::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCamera_a2742b6e7168d1425c2cbd2685d90fab3_1a2742b6e7168d1425c2cbd2685d90fab3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::resetToDefault</definition>
        <argsstring>(Graphics &amp;gfx) noexcept</argsstring>
        <name>resetToDefault</name>
        <qualifiedname>Camera::resetToDefault</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="62" column="6" bodyfile="src/camera.cpp" bodystart="149" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a69061c32d9aae3cba2237a0733649928_1a69061c32d9aae3cba2237a0733649928" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Camera::getViewMatrix</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getViewMatrix</name>
        <qualifiedname>Camera::getViewMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="63" column="19" bodyfile="src/camera.cpp" bodystart="171" bodyend="176"/>
        <referencedby refid="classCamera_abb32e44fc006cdd7f0c999e27e8b2dee_1abb32e44fc006cdd7f0c999e27e8b2dee" compoundref="camera_8cpp" startline="219" endline="284">getFrustumPlanes</referencedby>
        <referencedby refid="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" compoundref="camera_8cpp" startline="140" endline="147">makeActive</referencedby>
        <referencedby refid="classDirectionalLight_aeeb09b18bf90a68ec390b88fffaf6916_1aeeb09b18bf90a68ec390b88fffaf6916" compoundref="light__source_8cpp" startline="255" endline="262">DirectionalLight::populatePscbData</referencedby>
        <referencedby refid="classPointLight_a1a2533dcd6eab3a1da900b88c1622ea9_1a1a2533dcd6eab3a1da900b88c1622ea9" compoundref="light__source_8cpp" startline="398" endline="405">PointLight::populatePscbData</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCamera_a119f72de69166ad7f8d69fdfd28437de_1a119f72de69166ad7f8d69fdfd28437de" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Camera::getReflectionViewMatrix</definition>
        <argsstring>(const DirectX::XMVECTOR &amp;mirrorPlane) const noexcept</argsstring>
        <name>getReflectionViewMatrix</name>
        <qualifiedname>Camera::getReflectionViewMatrix</qualifiedname>
        <param>
          <type>const DirectX::XMVECTOR &amp;</type>
          <declname>mirrorPlane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="64" column="19" bodyfile="src/camera.cpp" bodystart="178" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_aa79555b2e77e07c0f070016498185caa_1aa79555b2e77e07c0f070016498185caa" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Camera::getProjectionMatrix</definition>
        <argsstring>(Graphics &amp;gfx, const bool bForShadows, const float shadowCamFarZ) const noexcept</argsstring>
        <name>getProjectionMatrix</name>
        <qualifiedname>Camera::getProjectionMatrix</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>bForShadows</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>shadowCamFarZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="65" column="19" bodyfile="src/camera.cpp" bodystart="184" bodyend="191"/>
        <referencedby refid="classren_1_1ShadowPass_a31a85426ffac3f700c0b3c187b0567af_1a31a85426ffac3f700c0b3c187b0567af" compoundref="SHADOW__PASS_8CPP" startline="94" endline="141">ren::ShadowPass::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCamera_a7934bf160e8fbb077a85ae94563cd35f_1a7934bf160e8fbb077a85ae94563cd35f" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMVECTOR</type>
        <definition>DirectX::XMVECTOR Camera::getDirection</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDirection</name>
        <qualifiedname>Camera::getDirection</qualifiedname>
        <briefdescription>
<para>returns the vector describing the camera&apos;s direction - ie the direction the light is pointining - aka &quot;lookVector&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="67" column="19" bodyfile="src/camera.cpp" bodystart="193" bodyend="197"/>
        <referencedby refid="classCamera_a8e279f50486bb8c77e85e9149992c347_1a8e279f50486bb8c77e85e9149992c347" compoundref="camera_8cpp" startline="199" endline="202">getRight</referencedby>
        <referencedby refid="classCamera_ab5b2ede544f3c7b5b24191703f96f460_1ab5b2ede544f3c7b5b24191703f96f460" compoundref="camera_8cpp" startline="442" endline="447">getTarget</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCamera_a8e279f50486bb8c77e85e9149992c347_1a8e279f50486bb8c77e85e9149992c347" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMVECTOR</type>
        <definition>DirectX::XMVECTOR Camera::getRight</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRight</name>
        <qualifiedname>Camera::getRight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="68" column="19" bodyfile="src/camera.cpp" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a0b7848483ea5d46bee2849505620855e_1a0b7848483ea5d46bee2849505620855e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMVECTOR</type>
        <definition>DirectX::XMVECTOR Camera::getUp</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getUp</name>
        <qualifiedname>Camera::getUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="69" column="19" bodyfile="src/camera.cpp" bodystart="204" bodyend="207"/>
        <referencedby refid="classCamera_a8e279f50486bb8c77e85e9149992c347_1a8e279f50486bb8c77e85e9149992c347" compoundref="camera_8cpp" startline="199" endline="202">getRight</referencedby>
        <referencedby refid="classCamera_a69061c32d9aae3cba2237a0733649928_1a69061c32d9aae3cba2237a0733649928" compoundref="camera_8cpp" startline="171" endline="176">getViewMatrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCamera_af3981d25eb5b09097c9d60ef7f6a936c_1af3981d25eb5b09097c9d60ef7f6a936c" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Camera::getFovRadians</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFovRadians</name>
        <qualifiedname>Camera::getFovRadians</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="70" column="7" bodyfile="src/camera.cpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a4cffeb51dd4475c274019f11b5c5c89f_1a4cffeb51dd4475c274019f11b5c5c89f" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Camera::getName</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getName</name>
        <qualifiedname>Camera::getName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="71" column="19" bodyfile="src/camera.cpp" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_abb32e44fc006cdd7f0c999e27e8b2dee_1abb32e44fc006cdd7f0c999e27e8b2dee" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; DirectX::XMFLOAT4 &gt;</type>
        <definition>std::vector&lt; dx::XMFLOAT4 &gt; Camera::getFrustumPlanes</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFrustumPlanes</name>
        <qualifiedname>Camera::getFrustumPlanes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="72" column="13" bodyfile="src/camera.cpp" bodystart="219" bodyend="284"/>
        <referencedby refid="classMesh_aab3b7f01c082616f9656d44d7f75fdec_1aab3b7f01c082616f9656d44d7f75fdec" compoundref="mesh_8cpp" startline="247" endline="312">Mesh::isFrustumCulled</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCamera_a337eecc6a2570af8101a660be59f429d_1a337eecc6a2570af8101a660be59f429d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::displayImguiWidgets</definition>
        <argsstring>(Graphics &amp;gfx) noexcept</argsstring>
        <name>displayImguiWidgets</name>
        <qualifiedname>Camera::displayImguiWidgets</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="73" column="6" bodyfile="src/camera.cpp" bodystart="286" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a15b29e049281475c4ab96bd311c965fc_1a15b29e049281475c4ab96bd311c965fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::onWindowResize</definition>
        <argsstring>(Graphics &amp;gfx)</argsstring>
        <name>onWindowResize</name>
        <qualifiedname>Camera::onWindowResize</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="74" column="6" bodyfile="src/camera.cpp" bodystart="343" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a531fccf0eb0ea4af179305b20e6e3064_1a531fccf0eb0ea4af179305b20e6e3064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::setTethered</definition>
        <argsstring>(const bool bTethered) cond_noex</argsstring>
        <name>setTethered</name>
        <qualifiedname>Camera::setTethered</qualifiedname>
        <param>
          <type>const bool</type>
          <declname>bTethered</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="75" column="6" bodyfile="src/camera.cpp" bodystart="351" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a5975e7d803be000783917babdedddc08_1a5975e7d803be000783917babdedddc08" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::setRotationSpeed</definition>
        <argsstring>(const float rotationSpeed) noexcept</argsstring>
        <name>setRotationSpeed</name>
        <qualifiedname>Camera::setRotationSpeed</qualifiedname>
        <param>
          <type>const float</type>
          <declname>rotationSpeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="76" column="6" bodyfile="src/camera.cpp" bodystart="356" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a4aa0720c85d630f02b29c833254551a6_1a4aa0720c85d630f02b29c833254551a6" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Camera::getRotationSpeed</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRotationSpeed</name>
        <qualifiedname>Camera::getRotationSpeed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="77" column="7" bodyfile="src/camera.cpp" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a87848e679a7fc471cd020f3ae01299b1_1a87848e679a7fc471cd020f3ae01299b1" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::setRotation</definition>
        <argsstring>(const DirectX::XMFLOAT3 &amp;rot) noexcept</argsstring>
        <name>setRotation</name>
        <qualifiedname>Camera::setRotation</qualifiedname>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>rot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="79" column="6" bodyfile="src/camera.cpp" bodystart="366" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a6c7571eacc74a16f4ec5473afca8feaa_1a6c7571eacc74a16f4ec5473afca8feaa" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::rotateRel</definition>
        <argsstring>(const float dx, const float dy) noexcept</argsstring>
        <name>rotateRel</name>
        <qualifiedname>Camera::rotateRel</qualifiedname>
        <param>
          <type>const float</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="80" column="6" bodyfile="src/camera.cpp" bodystart="375" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_ac45d400a202f16e61708f7e1c71b7bf3_1ac45d400a202f16e61708f7e1c71b7bf3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::translateRel</definition>
        <argsstring>(DirectX::XMFLOAT3 translation) noexcept</argsstring>
        <name>translateRel</name>
        <qualifiedname>Camera::translateRel</qualifiedname>
        <param>
          <type>DirectX::XMFLOAT3</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="81" column="6" bodyfile="src/camera.cpp" bodystart="391" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_af7a1948acaa745a0689e8a754f4166a2_1af7a1948acaa745a0689e8a754f4166a2" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::setTranslation</definition>
        <argsstring>(const DirectX::XMFLOAT3 &amp;pos) noexcept</argsstring>
        <name>setTranslation</name>
        <qualifiedname>Camera::setTranslation</qualifiedname>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="82" column="6" bodyfile="src/camera.cpp" bodystart="405" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a5433d9b545d22abeecb3693cc832b99a_1a5433d9b545d22abeecb3693cc832b99a" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const DirectX::XMFLOAT3 &amp;</type>
        <definition>const DirectX::XMFLOAT3 &amp; Camera::getPosition</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPosition</name>
        <qualifiedname>Camera::getPosition</qualifiedname>
        <briefdescription>
<para>gets the camera matrix </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="84" column="25" bodyfile="src/camera.cpp" bodystart="417" bodyend="420"/>
        <referencedby refid="classMesh_ac1a06f67124e572821e7fc985711c8dd_1ac1a06f67124e572821e7fc985711c8dd" compoundref="mesh_8cpp" startline="203" endline="207">Mesh::getDistanceFromActiveCamera</referencedby>
        <referencedby refid="classren_1_1ShadowPass_a31a85426ffac3f700c0b3c187b0567af_1a31a85426ffac3f700c0b3c187b0567af" compoundref="SHADOW__PASS_8CPP" startline="94" endline="141">ren::ShadowPass::run</referencedby>
        <referencedby refid="classMesh_a8aeff98bfd0c764a8917047c98f9962f_1a8aeff98bfd0c764a8917047c98f9962f" compoundref="mesh_8cpp" startline="215" endline="220">Mesh::setDistanceFromActiveCamera</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCamera_a4e89fb4d7923b79a2ea9b6e892e2d3a7_1a4e89fb4d7923b79a2ea9b6e892e2d3a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DirectX::XMFLOAT3 &amp;</type>
        <definition>DirectX::XMFLOAT3 &amp; Camera::getPosition</definition>
        <argsstring>()</argsstring>
        <name>getPosition</name>
        <qualifiedname>Camera::getPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="85" column="19" bodyfile="src/camera.cpp" bodystart="422" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a976313569576c8595a5e15d1c169ca9d_1a976313569576c8595a5e15d1c169ca9d" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMFLOAT3</type>
        <definition>DirectX::XMFLOAT3 Camera::getRotation</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRotation</name>
        <qualifiedname>Camera::getRotation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="86" column="19" bodyfile="src/camera.cpp" bodystart="427" bodyend="430"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classCamera_aefe6e69f3d7bbdb9e48ae91ce22f485b_1aefe6e69f3d7bbdb9e48ae91ce22f485b" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Camera::getPositionMatrix</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPositionMatrix</name>
        <qualifiedname>Camera::getPositionMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="88" column="19" bodyfile="src/camera.cpp" bodystart="432" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_a1b8c041a2c04c520d64c73b8ab01b840_1a1b8c041a2c04c520d64c73b8ab01b840" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Camera::getRotationMatrix</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRotationMatrix</name>
        <qualifiedname>Camera::getRotationMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="89" column="19" bodyfile="src/camera.cpp" bodystart="437" bodyend="440"/>
        <referencedby refid="classCamera_a7934bf160e8fbb077a85ae94563cd35f_1a7934bf160e8fbb077a85ae94563cd35f" compoundref="camera_8cpp" startline="193" endline="197">getDirection</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCamera_ab5b2ede544f3c7b5b24191703f96f460_1ab5b2ede544f3c7b5b24191703f96f460" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMVECTOR</type>
        <definition>DirectX::XMVECTOR Camera::getTarget</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTarget</name>
        <qualifiedname>Camera::getTarget</qualifiedname>
        <briefdescription>
<para>target is the position of the camera&apos;s focus/focal point </para>
        </briefdescription>
        <detaileddescription>
<para>ofc the camera doesn&apos;t look at a position, it looks along a direction; any points along that direction will do to compute the view-matrix </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="92" column="19" bodyfile="src/camera.cpp" bodystart="442" bodyend="447"/>
        <referencedby refid="classCamera_a69061c32d9aae3cba2237a0733649928_1a69061c32d9aae3cba2237a0733649928" compoundref="camera_8cpp" startline="171" endline="176">getViewMatrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Camera::updateCameraFrustum</definition>
        <argsstring>(Graphics &amp;gfx)</argsstring>
        <name>updateCameraFrustum</name>
        <qualifiedname>Camera::updateCameraFrustum</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="93" column="6" bodyfile="src/camera.cpp" bodystart="449" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classCamera_afc76c2b8fcc7d3feb23235a9fff0ee6d_1afc76c2b8fcc7d3feb23235a9fff0ee6d" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Camera::getOrthographicProjectionMatrix</definition>
        <argsstring>(const unsigned width, const unsigned height) const noexcept</argsstring>
        <name>getOrthographicProjectionMatrix</name>
        <qualifiedname>Camera::getOrthographicProjectionMatrix</qualifiedname>
        <param>
          <type>const unsigned</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="94" column="19" bodyfile="src/camera.cpp" bodystart="458" bodyend="462"/>
        <referencedby refid="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" compoundref="camera_8cpp" startline="140" endline="147">makeActive</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCamera_a459c4094d26c1c4342563d8c57e5d57a_1a459c4094d26c1c4342563d8c57e5d57a" prot="private" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Camera::getPerspectiveProjectionMatrix</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPerspectiveProjectionMatrix</name>
        <qualifiedname>Camera::getPerspectiveProjectionMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/camera.h" line="95" column="19" bodyfile="src/camera.cpp" bodystart="464" bodyend="467"/>
        <referencedby refid="classCamera_abb32e44fc006cdd7f0c999e27e8b2dee_1abb32e44fc006cdd7f0c999e27e8b2dee" compoundref="camera_8cpp" startline="219" endline="284">getFrustumPlanes</referencedby>
        <referencedby refid="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" compoundref="camera_8cpp" startline="140" endline="147">makeActive</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Camera</label>
        <link refid="classCamera"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_cameraFrustum</edgelabel>
          <edgelabel>m_cameraWidget</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>IImguiNodeVisitor</label>
        <link refid="classIImguiNodeVisitor"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_pSelectedNode</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>ImguiPerModelNodeVisitor</label>
        <link refid="classImguiPerModelNodeVisitor"/>
        <childnode refid="4" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Model</label>
        <link refid="classModel"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_imguiVisitor</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Node</label>
        <link refid="classNode"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_pParent</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/camera.h" line="16" column="1" bodyfile="inc/camera.h" bodystart="17" bodyend="96"/>
    <listofallmembers>
      <member refid="classCamera_a65fc3f5463fa3d988438c1e38770b876_1a65fc3f5463fa3d988438c1e38770b876" prot="public" virt="non-virtual"><scope>Camera</scope><name>Camera</name></member>
      <member refid="classCamera_acd1b1e7e17b69bdeb085b968e5793136_1acd1b1e7e17b69bdeb085b968e5793136" prot="public" virt="non-virtual"><scope>Camera</scope><name>computePitchYawInDegFromDirectionVector</name></member>
      <member refid="classCamera_a3a06462591b9d7c74a57d343330ac07a_1a3a06462591b9d7c74a57d343330ac07a" prot="public" virt="non-virtual"><scope>Camera</scope><name>computePitchYawRollInDegFromDirectionVector</name></member>
      <member refid="classCamera_aaa6c4ca43fa06f9995d961d805fd4de3_1aaa6c4ca43fa06f9995d961d805fd4de3" prot="public" virt="non-virtual"><scope>Camera</scope><name>computeTargetVector</name></member>
      <member refid="classCamera_a28fe2cb59984f7d7200a5b7a03b7fb01_1a28fe2cb59984f7d7200a5b7a03b7fb01" prot="public" virt="non-virtual"><scope>Camera</scope><name>connectMaterialsToRenderer</name></member>
      <member refid="classCamera_a337eecc6a2570af8101a660be59f429d_1a337eecc6a2570af8101a660be59f429d" prot="public" virt="non-virtual"><scope>Camera</scope><name>displayImguiWidgets</name></member>
      <member refid="classCamera_a7934bf160e8fbb077a85ae94563cd35f_1a7934bf160e8fbb077a85ae94563cd35f" prot="public" virt="non-virtual"><scope>Camera</scope><name>getDirection</name></member>
      <member refid="classCamera_af3981d25eb5b09097c9d60ef7f6a936c_1af3981d25eb5b09097c9d60ef7f6a936c" prot="public" virt="non-virtual"><scope>Camera</scope><name>getFovRadians</name></member>
      <member refid="classCamera_abb32e44fc006cdd7f0c999e27e8b2dee_1abb32e44fc006cdd7f0c999e27e8b2dee" prot="public" virt="non-virtual"><scope>Camera</scope><name>getFrustumPlanes</name></member>
      <member refid="classCamera_a4cffeb51dd4475c274019f11b5c5c89f_1a4cffeb51dd4475c274019f11b5c5c89f" prot="public" virt="non-virtual"><scope>Camera</scope><name>getName</name></member>
      <member refid="classCamera_afc76c2b8fcc7d3feb23235a9fff0ee6d_1afc76c2b8fcc7d3feb23235a9fff0ee6d" prot="private" virt="non-virtual"><scope>Camera</scope><name>getOrthographicProjectionMatrix</name></member>
      <member refid="classCamera_a459c4094d26c1c4342563d8c57e5d57a_1a459c4094d26c1c4342563d8c57e5d57a" prot="private" virt="non-virtual"><scope>Camera</scope><name>getPerspectiveProjectionMatrix</name></member>
      <member refid="classCamera_a5433d9b545d22abeecb3693cc832b99a_1a5433d9b545d22abeecb3693cc832b99a" prot="public" virt="non-virtual"><scope>Camera</scope><name>getPosition</name></member>
      <member refid="classCamera_a4e89fb4d7923b79a2ea9b6e892e2d3a7_1a4e89fb4d7923b79a2ea9b6e892e2d3a7" prot="public" virt="non-virtual"><scope>Camera</scope><name>getPosition</name></member>
      <member refid="classCamera_aefe6e69f3d7bbdb9e48ae91ce22f485b_1aefe6e69f3d7bbdb9e48ae91ce22f485b" prot="private" virt="non-virtual"><scope>Camera</scope><name>getPositionMatrix</name></member>
      <member refid="classCamera_aa79555b2e77e07c0f070016498185caa_1aa79555b2e77e07c0f070016498185caa" prot="public" virt="non-virtual"><scope>Camera</scope><name>getProjectionMatrix</name></member>
      <member refid="classCamera_a119f72de69166ad7f8d69fdfd28437de_1a119f72de69166ad7f8d69fdfd28437de" prot="public" virt="non-virtual"><scope>Camera</scope><name>getReflectionViewMatrix</name></member>
      <member refid="classCamera_a8e279f50486bb8c77e85e9149992c347_1a8e279f50486bb8c77e85e9149992c347" prot="public" virt="non-virtual"><scope>Camera</scope><name>getRight</name></member>
      <member refid="classCamera_a976313569576c8595a5e15d1c169ca9d_1a976313569576c8595a5e15d1c169ca9d" prot="public" virt="non-virtual"><scope>Camera</scope><name>getRotation</name></member>
      <member refid="classCamera_a1b8c041a2c04c520d64c73b8ab01b840_1a1b8c041a2c04c520d64c73b8ab01b840" prot="private" virt="non-virtual"><scope>Camera</scope><name>getRotationMatrix</name></member>
      <member refid="classCamera_a4aa0720c85d630f02b29c833254551a6_1a4aa0720c85d630f02b29c833254551a6" prot="public" virt="non-virtual"><scope>Camera</scope><name>getRotationSpeed</name></member>
      <member refid="classCamera_adc13a05bed1dc73ac90f29fc7b96dfa0_1adc13a05bed1dc73ac90f29fc7b96dfa0" prot="private" virt="non-virtual"><scope>Camera</scope><name>getShadowOrthographicMatrix</name></member>
      <member refid="classCamera_a60f0edb6285926aad69f4dfcbfa11896_1a60f0edb6285926aad69f4dfcbfa11896" prot="private" virt="non-virtual"><scope>Camera</scope><name>getShadowProjectionMatrix</name></member>
      <member refid="classCamera_ab5b2ede544f3c7b5b24191703f96f460_1ab5b2ede544f3c7b5b24191703f96f460" prot="private" virt="non-virtual"><scope>Camera</scope><name>getTarget</name></member>
      <member refid="classCamera_a0b7848483ea5d46bee2849505620855e_1a0b7848483ea5d46bee2849505620855e" prot="public" virt="non-virtual"><scope>Camera</scope><name>getUp</name></member>
      <member refid="classCamera_a69061c32d9aae3cba2237a0733649928_1a69061c32d9aae3cba2237a0733649928" prot="public" virt="non-virtual"><scope>Camera</scope><name>getViewMatrix</name></member>
      <member refid="classCamera_a9a5b3abea53ca97854696258029ee6cd_1a9a5b3abea53ca97854696258029ee6cd" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_aspectRatio</name></member>
      <member refid="classCamera_afa7cd578b69a71b3848e1c64fdea43a3_1afa7cd578b69a71b3848e1c64fdea43a3" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_bPespectiveProjection</name></member>
      <member refid="classCamera_a4f25b59b81dcedbef0c58534116e0561_1a4f25b59b81dcedbef0c58534116e0561" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_bShowFrustum</name></member>
      <member refid="classCamera_a2f9e6d86b9814ef3488af9f201d1760a_1a2f9e6d86b9814ef3488af9f201d1760a" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_bShowWidget</name></member>
      <member refid="classCamera_a6ad830b0eebfaab3a181f022e6b8f03d_1a6ad830b0eebfaab3a181f022e6b8f03d" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_bTethered</name></member>
      <member refid="classCamera_ac2e3499708cef07f0c53ac3549985c05_1ac2e3499708cef07f0c53ac3549985c05" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_cameraFrustum</name></member>
      <member refid="classCamera_ac9530bde301f2e79c21bff33561f17da_1ac9530bde301f2e79c21bff33561f17da" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_cameraWidget</name></member>
      <member refid="classCamera_ad2f737fa9ac9e419c9dde738848cd9d4_1ad2f737fa9ac9e419c9dde738848cd9d4" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_farZ</name></member>
      <member refid="classCamera_a2a421b5480866ee34bf1f445e5f6e0ef_1a2a421b5480866ee34bf1f445e5f6e0ef" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_FarZDefault</name></member>
      <member refid="classCamera_a38e43d42c55982625419f60769cac43b_1a38e43d42c55982625419f60769cac43b" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_fovRadians</name></member>
      <member refid="classCamera_ab78d1297dea3f67d7e59c1c1a2cf52ab_1ab78d1297dea3f67d7e59c1c1a2cf52ab" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_height</name></member>
      <member refid="classCamera_ad9506e6640b04841e93c2db94847dde6_1ad9506e6640b04841e93c2db94847dde6" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_heightDefault</name></member>
      <member refid="classCamera_acb7b3e084b057cc037734303700c5df7_1acb7b3e084b057cc037734303700c5df7" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_name</name></member>
      <member refid="classCamera_ae34dba3ef8b4a73e680c86f1637432ba_1ae34dba3ef8b4a73e680c86f1637432ba" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_nearZ</name></member>
      <member refid="classCamera_aa1ce726b7396d34058d2684597d3318e_1aa1ce726b7396d34058d2684597d3318e" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_NearZDefault</name></member>
      <member refid="classCamera_a2202e419e9440bbb26e6997248268b0b_1a2202e419e9440bbb26e6997248268b0b" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_pitch</name></member>
      <member refid="classCamera_a9f44d2b45faff50f09d91a1da0384fcc_1a9f44d2b45faff50f09d91a1da0384fcc" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_pitchDefault</name></member>
      <member refid="classCamera_ab856e56c25710180403bceca2c22a888_1ab856e56c25710180403bceca2c22a888" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_pitchPrev</name></member>
      <member refid="classCamera_a3c4f56de45dec516c93157dfe9aa2448_1a3c4f56de45dec516c93157dfe9aa2448" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_pos</name></member>
      <member refid="classCamera_a0dd90368f15d7e0c172dfcb4caf6627e_1a0dd90368f15d7e0c172dfcb4caf6627e" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_posDefault</name></member>
      <member refid="classCamera_a1f85e07ba24f5f9a0d10efda54857a3f_1a1f85e07ba24f5f9a0d10efda54857a3f" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_posPrev</name></member>
      <member refid="classCamera_a0b1c75781c142e6bb28761224d0b67ce_1a0b1c75781c142e6bb28761224d0b67ce" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_rotationSpeed</name></member>
      <member refid="classCamera_adb0c04e5448f0ee045ca510fdb5405cf_1adb0c04e5448f0ee045ca510fdb5405cf" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_translationSpeed</name></member>
      <member refid="classCamera_a6d655887e5e87b12e19094ec89b74449_1a6d655887e5e87b12e19094ec89b74449" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_width</name></member>
      <member refid="classCamera_a20a4a811978288156b482b1267f13dab_1a20a4a811978288156b482b1267f13dab" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_widthDefault</name></member>
      <member refid="classCamera_a0f8807da02d4a1bb695be51793279873_1a0f8807da02d4a1bb695be51793279873" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_yaw</name></member>
      <member refid="classCamera_ae03a703f7273d3c869951b634f402771_1ae03a703f7273d3c869951b634f402771" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_yawDefault</name></member>
      <member refid="classCamera_a23e12021be77ab330284fad34c91c340_1a23e12021be77ab330284fad34c91c340" prot="private" virt="non-virtual"><scope>Camera</scope><name>m_yawPrev</name></member>
      <member refid="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" prot="public" virt="non-virtual"><scope>Camera</scope><name>makeActive</name></member>
      <member refid="classCamera_a15b29e049281475c4ab96bd311c965fc_1a15b29e049281475c4ab96bd311c965fc" prot="public" virt="non-virtual"><scope>Camera</scope><name>onWindowResize</name></member>
      <member refid="classCamera_aa0f940aaaf3dc1afa030082b057feb76_1aa0f940aaaf3dc1afa030082b057feb76" prot="public" virt="non-virtual"><scope>Camera</scope><name>render</name></member>
      <member refid="classCamera_a2742b6e7168d1425c2cbd2685d90fab3_1a2742b6e7168d1425c2cbd2685d90fab3" prot="public" virt="non-virtual"><scope>Camera</scope><name>resetToDefault</name></member>
      <member refid="classCamera_a6c7571eacc74a16f4ec5473afca8feaa_1a6c7571eacc74a16f4ec5473afca8feaa" prot="public" virt="non-virtual"><scope>Camera</scope><name>rotateRel</name></member>
      <member refid="classCamera_a87848e679a7fc471cd020f3ae01299b1_1a87848e679a7fc471cd020f3ae01299b1" prot="public" virt="non-virtual"><scope>Camera</scope><name>setRotation</name></member>
      <member refid="classCamera_a5975e7d803be000783917babdedddc08_1a5975e7d803be000783917babdedddc08" prot="public" virt="non-virtual"><scope>Camera</scope><name>setRotationSpeed</name></member>
      <member refid="classCamera_a531fccf0eb0ea4af179305b20e6e3064_1a531fccf0eb0ea4af179305b20e6e3064" prot="public" virt="non-virtual"><scope>Camera</scope><name>setTethered</name></member>
      <member refid="classCamera_af7a1948acaa745a0689e8a754f4166a2_1af7a1948acaa745a0689e8a754f4166a2" prot="public" virt="non-virtual"><scope>Camera</scope><name>setTranslation</name></member>
      <member refid="classCamera_ac45d400a202f16e61708f7e1c71b7bf3_1ac45d400a202f16e61708f7e1c71b7bf3" prot="public" virt="non-virtual"><scope>Camera</scope><name>translateRel</name></member>
      <member refid="classCamera_a12ef2532159ea4927385d862302129e7_1a12ef2532159ea4927385d862302129e7" prot="public" virt="non-virtual"><scope>Camera</scope><name>update</name></member>
      <member refid="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" prot="private" virt="non-virtual"><scope>Camera</scope><name>updateCameraFrustum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
