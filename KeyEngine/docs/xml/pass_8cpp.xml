<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="pass_8cpp" kind="file" language="C++">
    <compoundname>pass.cpp</compoundname>
    <includes refid="pass_8h" local="yes">pass.h</includes>
    <includes refid="binder_8h" local="yes">binder.h</includes>
    <incdepgraph>
      <node id="18">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>bindable.h</label>
        <link refid="bindable_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>binder.h</label>
        <link refid="binder_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>bitmap.h</label>
        <link refid="bitmap_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="26">
        <label>depth_stencil_view.h</label>
        <link refid="depth__stencil__view_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>graphics_friend.h</label>
        <link refid="graphics__friend_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>key_exception.h</label>
        <link refid="key__exception_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>key_wrl.h</label>
        <link refid="key__wrl_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>linker.h</label>
        <link refid="linker_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="2">
        <label>pass.h</label>
        <link refid="pass_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>render_surface.h</label>
        <link refid="render__surface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>render_target.h</label>
        <link refid="render__target_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>renderer_exception.h</label>
        <link refid="renderer__exception_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>texture_desc.h</label>
        <link refid="texture__desc_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/pass.cpp</label>
        <link refid="pass_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>DirectxMath.h</label>
      </node>
      <node id="30">
        <label>Windows.h</label>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="17">
        <label>d3d11.h</label>
      </node>
      <node id="32">
        <label>dxtex/DirectXTex.h</label>
      </node>
      <node id="19">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="22">
        <label>optional</label>
      </node>
      <node id="29">
        <label>sdkddkver.h</label>
      </node>
      <node id="10">
        <label>sstream</label>
      </node>
      <node id="14">
        <label>stdexcept</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="8">
        <label>typeinfo</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="24">
        <label>wrl.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceren">ren</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pass_8h" kindref="compound">pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="binder_8h" kindref="compound">binder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceren" kindref="compound">ren</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classren_1_1IPass_a72360515966748b13f592095c12f58fa_1a72360515966748b13f592095c12f58fa" refkind="member"><highlight class="normal"><ref refid="classren_1_1IPass_a72360515966748b13f592095c12f58fa_1a72360515966748b13f592095c12f58fa" kindref="member">IPass::IPass</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bActive<sp/></highlight><highlight class="comment">/*=<sp/>true*/</highlight><highlight class="normal"><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name{name},</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bActive{bActive}</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classren_1_1IPass_ac0132ac18bad1d6379a9d27e3d25bc18_1ac0132ac18bad1d6379a9d27e3d25bc18" refkind="member"><highlight class="normal"><ref refid="classren_1_1IPass_ac0132ac18bad1d6379a9d27e3d25bc18_1ac0132ac18bad1d6379a9d27e3d25bc18" kindref="member">IPass::~IPass</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>pass_;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classren_1_1IPass_a3c9f7768f492d9a50371acec9b61f12b_1a3c9f7768f492d9a50371acec9b61f12b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classren_1_1IPass_a3c9f7768f492d9a50371acec9b61f12b_1a3c9f7768f492d9a50371acec9b61f12b" kindref="member">IPass::getName</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IPass_aa3a178f92cb6197605a486211a90367a_1aa3a178f92cb6197605a486211a90367a" kindref="member">m_name</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classren_1_1IPass_a80971a3d1212629cd1ba61033df55f84_1a80971a3d1212629cd1ba61033df55f84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IPass_a80971a3d1212629cd1ba61033df55f84_1a80971a3d1212629cd1ba61033df55f84" kindref="member">IPass::validate</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;binder<sp/>:<sp/><ref refid="classren_1_1IPass_aea2aeb943b24bd538b91487dbbee1349_1aea2aeb943b24bd538b91487dbbee1349" kindref="member">m_binders</ref><sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binder-&gt;validateLinkage();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classren_1_1IPass_ae8d7a067929cabbe900ec89643cbcdba_1ae8d7a067929cabbe900ec89643cbcdba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IPass_ae8d7a067929cabbe900ec89643cbcdba_1ae8d7a067929cabbe900ec89643cbcdba" kindref="member">IPass::setActive</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bActive<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bActive<sp/>=<sp/>bActive;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classren_1_1IPass_a7ef6e9979f151480bc34dca08b19bec1_1a7ef6e9979f151480bc34dca08b19bec1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IPass_a7ef6e9979f151480bc34dca08b19bec1_1a7ef6e9979f151480bc34dca08b19bec1" kindref="member">IPass::isActive</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IPass_ab8ff53f070bce5debcf6bb3ce26206eb_1ab8ff53f070bce5debcf6bb3ce26206eb" kindref="member">m_bActive</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classren_1_1IPass_a589910e72e67f1d1ec37faea4d840074_1a589910e72e67f1d1ec37faea4d840074" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IPass_a589910e72e67f1d1ec37faea4d840074_1a589910e72e67f1d1ec37faea4d840074" kindref="member">IPass::recreateRtvsAndDsvs</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>pass_;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classren_1_1IPass_aebd5aa69455727600d0e979906a0a111_1aebd5aa69455727600d0e979906a0a111" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::unique_ptr&lt;IBinder&gt;&gt;&amp;<sp/><ref refid="classren_1_1IPass_aebd5aa69455727600d0e979906a0a111_1aebd5aa69455727600d0e979906a0a111" kindref="member">IPass::getBinders</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="51"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IPass_aea2aeb943b24bd538b91487dbbee1349_1aea2aeb943b24bd538b91487dbbee1349" kindref="member">m_binders</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classren_1_1IPass_ae0910189678e800c86f665bca8c88a03_1ae0910189678e800c86f665bca8c88a03" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::unique_ptr&lt;ILinker&gt;&gt;&amp;<sp/><ref refid="classren_1_1IPass_ae0910189678e800c86f665bca8c88a03_1ae0910189678e800c86f665bca8c88a03" kindref="member">IPass::getLinkers</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IPass_a44af75ecb642c6c1f47d316bf129daa8_1a44af75ecb642c6c1f47d316bf129daa8" kindref="member">m_linkers</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classren_1_1IPass_a6cffed1b315846ece319e4ce5f508843_1a6cffed1b315846ece319e4ce5f508843" refkind="member"><highlight class="normal"><ref refid="classren_1_1IBinder" kindref="compound">IBinder</ref>&amp;<sp/><ref refid="classren_1_1IPass_a6cffed1b315846ece319e4ce5f508843_1a6cffed1b315846ece319e4ce5f508843" kindref="member">IPass::getBinder</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="61"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;binder<sp/>:<sp/><ref refid="classren_1_1IPass_aea2aeb943b24bd538b91487dbbee1349_1aea2aeb943b24bd538b91487dbbee1349" kindref="member">m_binders</ref><sp/>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>binder-&gt;getName()<sp/>==<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*binder;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;BindableBinder<sp/>named<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>not<sp/>found<sp/>in<sp/>pass:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classren_1_1IPass_a3c9f7768f492d9a50371acec9b61f12b_1a3c9f7768f492d9a50371acec9b61f12b" kindref="member">getName</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/>oss.str()<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classren_1_1IPass_a171eeb96584abbbbe1f158fbca5628f0_1a171eeb96584abbbbe1f158fbca5628f0" refkind="member"><highlight class="normal"><ref refid="classren_1_1ILinker" kindref="compound">ILinker</ref>&amp;<sp/><ref refid="classren_1_1IPass_a171eeb96584abbbbe1f158fbca5628f0_1a171eeb96584abbbbe1f158fbca5628f0" kindref="member">IPass::getLinker</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;linker<sp/>:<sp/><ref refid="classren_1_1IPass_a44af75ecb642c6c1f47d316bf129daa8_1a44af75ecb642c6c1f47d316bf129daa8" kindref="member">m_linkers</ref><sp/>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>linker-&gt;getName()<sp/>==<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*linker;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Linker<sp/>named<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>not<sp/>found<sp/>in<sp/>pass:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classren_1_1IPass_a3c9f7768f492d9a50371acec9b61f12b_1a3c9f7768f492d9a50371acec9b61f12b" kindref="member">getName</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/>oss.str()<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classren_1_1IPass_ab8c6a6dae673214dccd302aea9ce6e72_1ab8c6a6dae673214dccd302aea9ce6e72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IPass_ab8c6a6dae673214dccd302aea9ce6e72_1ab8c6a6dae673214dccd302aea9ce6e72" kindref="member">IPass::addBinder</ref>(<sp/>std::unique_ptr&lt;IBinder&gt;<sp/>pBinder<sp/>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verify<sp/>there<sp/>are<sp/>no<sp/>name<sp/>collisions<sp/>with<sp/>other<sp/>binders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;binder<sp/>:<sp/><ref refid="classren_1_1IPass_aea2aeb943b24bd538b91487dbbee1349_1aea2aeb943b24bd538b91487dbbee1349" kindref="member">m_binders</ref><sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>binder-&gt;getName()<sp/>==<sp/>pBinder-&gt;getName()<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;BindableBinder<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>pBinder-&gt;getName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>collides<sp/>with<sp/>existing.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IPass_aea2aeb943b24bd538b91487dbbee1349_1aea2aeb943b24bd538b91487dbbee1349" kindref="member">m_binders</ref>.emplace_back(<sp/>std::move(<sp/>pBinder<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classren_1_1IPass_aa9c50563c1bd98e1c377d819d9e2dc09_1aa9c50563c1bd98e1c377d819d9e2dc09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IPass_aa9c50563c1bd98e1c377d819d9e2dc09_1aa9c50563c1bd98e1c377d819d9e2dc09" kindref="member">IPass::addLinker</ref>(<sp/>std::unique_ptr&lt;ILinker&gt;<sp/>pLinker<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verify<sp/>there<sp/>are<sp/>no<sp/>name<sp/>collisions<sp/>with<sp/>other<sp/>linkers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;linker<sp/>:<sp/><ref refid="classren_1_1IPass_a44af75ecb642c6c1f47d316bf129daa8_1a44af75ecb642c6c1f47d316bf129daa8" kindref="member">m_linkers</ref><sp/>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>linker-&gt;getName()<sp/>==<sp/>pLinker-&gt;getName()<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Linker<sp/>name<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>pLinker-&gt;getName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>collides<sp/>with<sp/>existing.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IPass_a44af75ecb642c6c1f47d316bf129daa8_1a44af75ecb642c6c1f47d316bf129daa8" kindref="member">m_linkers</ref>.emplace_back(<sp/>std::move(<sp/>pLinker<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classren_1_1IPass_a261403c4ce33bc13fe3b5e0487c79664_1a261403c4ce33bc13fe3b5e0487c79664" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IPass_a261403c4ce33bc13fe3b5e0487c79664_1a261403c4ce33bc13fe3b5e0487c79664" kindref="member">IPass::setupBinderTarget</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;currentPassBinderName,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;targetPassName,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;targetPassLinkerName<sp/>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;binder<sp/>=<sp/><ref refid="classren_1_1IPass_a6cffed1b315846ece319e4ce5f508843_1a6cffed1b315846ece319e4ce5f508843" kindref="member">getBinder</ref>(<sp/>currentPassBinderName<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>binder.setPassAndLinkerNames(<sp/>targetPassName,<sp/>targetPassLinkerName<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight><highlight class="comment">//ren</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/pass.cpp"/>
  </compounddef>
</doxygen>
