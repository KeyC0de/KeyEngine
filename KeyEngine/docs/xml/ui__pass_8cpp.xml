<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="ui__pass_8cpp" kind="file" language="C++">
    <compoundname>ui_pass.cpp</compoundname>
    <includes refid="ui__pass_8h" local="yes">ui_pass.h</includes>
    <includes refid="graphics_8h" local="yes">graphics.h</includes>
    <includes refid="ui__component_8h" local="yes">ui_component.h</includes>
    <includes local="yes">DirectXTK/SpriteFont.h</includes>
    <includes local="yes">DirectXTK/SpriteBatch.h</includes>
    <includes local="no">variant</includes>
    <includes refid="rasterizer__state_8h" local="yes">rasterizer_state.h</includes>
    <includes refid="texture_8h" local="yes">texture.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includes refid="settings__manager_8h" local="yes">settings_manager.h</includes>
    <incdepgraph>
      <node id="33">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>bindable.h</label>
        <link refid="bindable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>bitmap.h</label>
        <link refid="bitmap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="25">
        <label>console.h</label>
        <link refid="console_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>depth_stencil_view.h</label>
        <link refid="depth__stencil__view_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>graphics_friend.h</label>
        <link refid="graphics__friend_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>key_exception.h</label>
        <link refid="key__exception_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>key_timer.h</label>
        <link refid="key__timer_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>key_wrl.h</label>
        <link refid="key__wrl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="56">
        <label>rasterizer_state.h</label>
        <link refid="rasterizer__state_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>rectangle.h</label>
        <link refid="rectangle_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>render_surface.h</label>
        <link refid="render__surface_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>render_target.h</label>
        <link refid="render__target_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>reporter_access.h</label>
        <link refid="reporter__access_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>reporter_listener.h</label>
        <link refid="reporter__listener_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>settings_manager.h</label>
        <link refid="settings__manager_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>texture.h</label>
        <link refid="texture_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>texture_desc.h</label>
        <link refid="texture__desc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>ui_component.h</label>
        <link refid="ui__component_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ui_pass.h</label>
        <link refid="ui__pass_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/ui_pass.cpp</label>
        <link refid="ui__pass_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>DirectXMath.h</label>
      </node>
      <node id="55">
        <label>DirectXTK/SpriteBatch.h</label>
      </node>
      <node id="54">
        <label>DirectXTK/SpriteFont.h</label>
      </node>
      <node id="61">
        <label>DirectxMath.h</label>
      </node>
      <node id="9">
        <label>Windows.h</label>
      </node>
      <node id="41">
        <label>algorithm</label>
      </node>
      <node id="57">
        <label>array</label>
      </node>
      <node id="37">
        <label>bitset</label>
      </node>
      <node id="24">
        <label>chrono</label>
      </node>
      <node id="39">
        <label>cinttypes</label>
      </node>
      <node id="27">
        <label>cmath</label>
      </node>
      <node id="38">
        <label>cstddef</label>
      </node>
      <node id="28">
        <label>cstdint</label>
      </node>
      <node id="5">
        <label>d3d11.h</label>
      </node>
      <node id="13">
        <label>d3dcompiler.h</label>
      </node>
      <node id="12">
        <label>dxgi1_4.h</label>
      </node>
      <node id="62">
        <label>dxtex/DirectXTex.h</label>
      </node>
      <node id="45">
        <label>execution</label>
      </node>
      <node id="50">
        <label>functional</label>
      </node>
      <node id="40">
        <label>future</label>
      </node>
      <node id="31">
        <label>iomanip</label>
      </node>
      <node id="34">
        <label>iostream</label>
      </node>
      <node id="43">
        <label>iterator</label>
      </node>
      <node id="32">
        <label>limits</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="42">
        <label>numeric</label>
      </node>
      <node id="64">
        <label>optional</label>
      </node>
      <node id="44">
        <label>regex</label>
      </node>
      <node id="8">
        <label>sdkddkver.h</label>
      </node>
      <node id="36">
        <label>set</label>
      </node>
      <node id="30">
        <label>sstream</label>
      </node>
      <node id="19">
        <label>stdexcept</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="68">
        <label>string_view</label>
      </node>
      <node id="23">
        <label>thread</label>
      </node>
      <node id="29">
        <label>type_traits</label>
      </node>
      <node id="49">
        <label>variant</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
      <node id="11">
        <label>wrl.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacegui">gui</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ui__pass_8h" kindref="compound">ui_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphics_8h" kindref="compound">graphics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ui__component_8h" kindref="compound">ui_component.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DirectXTK/SpriteFont.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DirectXTK/SpriteBatch.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;variant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rasterizer__state_8h" kindref="compound">rasterizer_state.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texture_8h" kindref="compound">texture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="settings__manager_8h" kindref="compound">settings_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(<sp/>lib,<sp/>&quot;DirectXTK.lib&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceDirectX" kindref="compound">dx</ref><sp/>=<sp/><ref refid="namespaceDirectX" kindref="compound">DirectX</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegui" kindref="compound">gui</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classgui_1_1UIPass_adf242a98de9ca144f16b77fa7f4714f8_1adf242a98de9ca144f16b77fa7f4714f8" refkind="member"><highlight class="normal"><ref refid="classgui_1_1UIPass_adf242a98de9ca144f16b77fa7f4714f8_1adf242a98de9ca144f16b77fa7f4714f8" kindref="member">UIPass::UIPass</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgui_1_1UIPass_a020ffc12ad8cc707ffa8e427361831ae_1a020ffc12ad8cc707ffa8e427361831ae" kindref="member">recreate</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classgui_1_1UIPass_a3381a5aaacd06f25dc83043e8dfa2296_1a3381a5aaacd06f25dc83043e8dfa2296" refkind="member"><highlight class="normal"><ref refid="classgui_1_1UIPass_a3381a5aaacd06f25dc83043e8dfa2296_1a3381a5aaacd06f25dc83043e8dfa2296" kindref="member">UIPass::~UIPass</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classgui_1_1UIPass_a020ffc12ad8cc707ffa8e427361831ae_1a020ffc12ad8cc707ffa8e427361831ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgui_1_1UIPass_a020ffc12ad8cc707ffa8e427361831ae_1a020ffc12ad8cc707ffa8e427361831ae" kindref="member">UIPass::recreate</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgui_1_1UIPass_a4233726966cf31e5ccb392234fb53616_1a4233726966cf31e5ccb392234fb53616" kindref="member">m_pRasterizerState</ref><sp/>=<sp/><ref refid="classRasterizerState_ae33cba5eb6c008f927cb16e8c3c226f1_1ae33cba5eb6c008f927cb16e8c3c226f1" kindref="member">RasterizerState::fetch</ref>(<sp/>gfx,<sp/><ref refid="classRasterizerState_a3151107239aadcbe3426db7cce10f08e_1a3151107239aadcbe3426db7cce10f08eae2d59bb2d8146bb29d1722df1efc72e1" kindref="member">RasterizerState::RasterizerMode::DefaultRS</ref>,<sp/><ref refid="classRasterizerState_ab64eb708d2b58194806f2bee4f93dd65_1ab64eb708d2b58194806f2bee4f93dd65a816d9b64ac288103c37d263f3b2113cf" kindref="member">RasterizerState::FillMode::Solid</ref>,<sp/><ref refid="classRasterizerState_aeaf96eb61bdc4f7e17fe5c351a090891_1aeaf96eb61bdc4f7e17fe5c351a090891ac3b808e9b6b703082096f4da97d5d401" kindref="member">RasterizerState::FaceMode::Front</ref><sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgui_1_1UIPass_a729c5a16e681f696a5adbcc74e6a0f2f_1a729c5a16e681f696a5adbcc74e6a0f2f" kindref="member">m_pSpriteBatch</ref><sp/>=<sp/>std::make_unique&lt;dx::SpriteBatch&gt;(<sp/><ref refid="classGraphicsFriend_a619e32893ab49ea6c5200e7c2d52e2f2_1a619e32893ab49ea6c5200e7c2d52e2f2" kindref="member">getDeviceContext</ref>(<sp/>gfx<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::string_literals;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fontPath<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;assets/fonts/&quot;</highlight><highlight class="normal">s<sp/>+<sp/><ref refid="namespaceutil_a6f14f660ccbdb1435f227700fa1dfd94_1a6f14f660ccbdb1435f227700fa1dfd94" kindref="member">util::s2ws</ref>(<sp/><ref refid="classSettingsManager_a92617e378ef941b075dd8343d283bd00_1a92617e378ef941b075dd8343d283bd00" kindref="member">SettingsManager::getInstance</ref>().getSettings().sFontName<sp/>)<sp/>+<sp/>L</highlight><highlight class="stringliteral">&quot;.spritefont&quot;</highlight><highlight class="normal">s;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgui_1_1UIPass_aaaa613b46c210567ab1849fde72cd737_1aaaa613b46c210567ab1849fde72cd737" kindref="member">m_pSpriteFont</ref><sp/>=<sp/>std::make_unique&lt;dx::SpriteFont&gt;(<sp/><ref refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" kindref="member">getDevice</ref>(<sp/>gfx<sp/>),<sp/>fontPath.c_str()<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>root<sp/>Component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgui_1_1UIPass_a0b0211f474ae7c90cc23eb3aa7e47cb4_1a0b0211f474ae7c90cc23eb3aa7e47cb4" kindref="member">m_pRoot</ref><sp/>=<sp/>std::make_unique&lt;Component&gt;(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>gfx.<ref refid="classGraphics_af1489a7a2f0b6cf0f94f31ccb03943fa_1af1489a7a2f0b6cf0f94f31ccb03943fa" kindref="member">getClientWidth</ref>(),<sp/>gfx.<ref refid="classGraphics_a6b1ed076f5063af9f5814d23df30dc24_1a6b1ed076f5063af9f5814d23df30dc24" kindref="member">getClientHeight</ref>()<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::variant&lt;Component*,<sp/>std::string&gt;<sp/>pRoot;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>pRoot<sp/>=<sp/><ref refid="classgui_1_1UIPass_a0b0211f474ae7c90cc23eb3aa7e47cb4_1a0b0211f474ae7c90cc23eb3aa7e47cb4" kindref="member">m_pRoot</ref>.get();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;std::string,<sp/>std::string&gt;&gt;<sp/>compStateTexts;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compStateTexts.emplace_back(<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">s,<sp/></highlight><highlight class="stringliteral">&quot;KeyEngine<sp/>-<sp/>All<sp/>Rights<sp/>Reserved&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgui_1_1Component_a76ad8dc481d4c14ea15c4254c9581a4a_1a76ad8dc481d4c14ea15c4254c9581a4a" kindref="member">Component::create_component</ref>(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;logo&quot;</highlight><highlight class="normal">,<sp/>pRoot,<sp/>gfx.<ref refid="classGraphics_af1489a7a2f0b6cf0f94f31ccb03943fa_1af1489a7a2f0b6cf0f94f31ccb03943fa" kindref="member">getClientWidth</ref>()<sp/>-<sp/>320,<sp/>gfx.<ref refid="classGraphics_a6b1ed076f5063af9f5814d23df30dc24_1a6b1ed076f5063af9f5814d23df30dc24" kindref="member">getClientHeight</ref>()<sp/>-<sp/>100,<sp/>60,<sp/>6,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>compStateTexts,<sp/>{},<sp/>dx::Colors::White,<sp/>dx::XMFLOAT2{.8f,<sp/>.8f}</highlight><highlight class="comment">/*,<sp/>&quot;With<sp/>a<sp/>tooltip<sp/>too!&quot;*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#TODO:<sp/>come<sp/>up<sp/>with<sp/>automatic<sp/>sizing<sp/>of<sp/>text-only<sp/>components<sp/>given<sp/>the<sp/>length<sp/>of<sp/>the<sp/>text<sp/>size-to-content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSettingsManager_a92617e378ef941b075dd8343d283bd00_1a92617e378ef941b075dd8343d283bd00" kindref="member">SettingsManager::getInstance</ref>().getSettings().bFpsCounting<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;std::string,<sp/>std::string&gt;&gt;<sp/>compStateTexts;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compStateTexts.emplace_back(<sp/></highlight><highlight class="stringliteral">&quot;default_fps_counter&quot;</highlight><highlight class="normal">s,<sp/></highlight><highlight class="stringliteral">&quot;fps_counter&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgui_1_1Component_a76ad8dc481d4c14ea15c4254c9581a4a_1a76ad8dc481d4c14ea15c4254c9581a4a" kindref="member">Component::create_component</ref>(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;fps_counter&quot;</highlight><highlight class="normal">,<sp/>pRoot,<sp/>0,<sp/>0,<sp/>32,<sp/>8,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>compStateTexts,<sp/>{},<sp/>dx::Colors::Green<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;std::string,<sp/>std::string&gt;&gt;<sp/>compStateImages;</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::string<sp/>filepath<sp/>=<sp/>&quot;assets/textures/ui/red_vignette.png&quot;s;</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compStateImages.emplace_back(<sp/>&quot;default&quot;s,<sp/>filepath<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>bitmapWidth;</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>bitmapHeight;</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>bitmap<sp/>=<sp/>Bitmap::loadFromFile(<sp/>filepath<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmapWidth<sp/>=<sp/>bitmap.getWidth();</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmapHeight<sp/>=<sp/>bitmap.getHeight();</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Component::create_component(<sp/>gfx,<sp/>&quot;vignette&quot;,<sp/>pRoot,<sp/>(gfx.getClientWidth()<sp/>&gt;&gt;<sp/>1)<sp/>-<sp/>(bitmapWidth<sp/>&gt;&gt;<sp/>1),<sp/>(gfx.getClientHeight()<sp/>&gt;&gt;<sp/>1)<sp/>-<sp/>(bitmapHeight<sp/>&gt;&gt;<sp/>1),<sp/>bitmapWidth,<sp/>bitmapHeight,<sp/>false,<sp/>{},<sp/>compStateImages<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;std::string,<sp/>std::string&gt;&gt;<sp/>compStateImages;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filepath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;assets/textures/ui/health_icon.png&quot;</highlight><highlight class="normal">s;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compStateImages.emplace_back(<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">s,<sp/>filepath<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitmapWidth;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitmapHeight;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bitmap<sp/>=<sp/><ref refid="classBitmap_a6e287dc135d2267f1ec28766b54f58ac_1a6e287dc135d2267f1ec28766b54f58ac" kindref="member">Bitmap::loadFromFile</ref>(<sp/>filepath<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmapWidth<sp/>=<sp/>bitmap.getWidth();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitmapHeight<sp/>=<sp/>bitmap.getHeight();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgui_1_1Component_a76ad8dc481d4c14ea15c4254c9581a4a_1a76ad8dc481d4c14ea15c4254c9581a4a" kindref="member">Component::create_component</ref>(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;health_icon&quot;</highlight><highlight class="normal">,<sp/>pRoot,<sp/>10,<sp/>gfx.<ref refid="classGraphics_a6b1ed076f5063af9f5814d23df30dc24_1a6b1ed076f5063af9f5814d23df30dc24" kindref="member">getClientHeight</ref>()<sp/>-<sp/>10<sp/>-<sp/>bitmapHeight<sp/>*<sp/>1.7,<sp/>bitmapWidth,<sp/>bitmapHeight,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>{},<sp/>compStateImages<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classgui_1_1UIPass_ab34b6f0aba97ebace64355b7a0b701e9_1ab34b6f0aba97ebace64355b7a0b701e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgui_1_1UIPass_ab34b6f0aba97ebace64355b7a0b701e9_1ab34b6f0aba97ebace64355b7a0b701e9" kindref="member">UIPass::update</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dt,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;int,<sp/>int&gt;<sp/>inputXandY,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lerpBetweenFrames<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pRoot-&gt;update(<sp/>dt,<sp/>{inputXandY.first,<sp/>inputXandY.second},<sp/>lerpBetweenFrames<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classgui_1_1UIPass_af36b0efb0e82c0b8ea32a3a8da8c53b0_1af36b0efb0e82c0b8ea32a3a8da8c53b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgui_1_1UIPass_af36b0efb0e82c0b8ea32a3a8da8c53b0_1af36b0efb0e82c0b8ea32a3a8da8c53b0" kindref="member">UIPass::render</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cond_noex</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pRoot-&gt;render(<sp/>gfx,<sp/>m_pSpriteBatch.get(),<sp/>m_pSpriteFont.get(),<sp/>m_pRasterizerState.get()<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classgui_1_1UIPass_a0ae0211dcaa6b7289d14b062dc1ff8ea_1a0ae0211dcaa6b7289d14b062dc1ff8ea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Component&gt;&amp;<sp/><ref refid="classgui_1_1UIPass_a0ae0211dcaa6b7289d14b062dc1ff8ea_1a0ae0211dcaa6b7289d14b062dc1ff8ea" kindref="member">UIPass::getRoot</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgui_1_1UIPass_a0b0211f474ae7c90cc23eb3aa7e47cb4_1a0b0211f474ae7c90cc23eb3aa7e47cb4" kindref="member">m_pRoot</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classgui_1_1UIPass_a31c2ddfaea8547324c2b2708ffb111b1_1a31c2ddfaea8547324c2b2708ffb111b1" refkind="member"><highlight class="normal">std::unique_ptr&lt;Component&gt;&amp;<sp/><ref refid="classgui_1_1UIPass_a0ae0211dcaa6b7289d14b062dc1ff8ea_1a0ae0211dcaa6b7289d14b062dc1ff8ea" kindref="member">UIPass::getRoot</ref>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgui_1_1UIPass_a0b0211f474ae7c90cc23eb3aa7e47cb4_1a0b0211f474ae7c90cc23eb3aa7e47cb4" kindref="member">m_pRoot</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>gui</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/ui_pass.cpp"/>
  </compounddef>
</doxygen>
