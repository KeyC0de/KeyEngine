<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="octree_8cpp" kind="file" language="C++">
    <compoundname>octree.cpp</compoundname>
    <includes refid="octree_8h" local="yes">octree.h</includes>
    <incdepgraph>
      <node id="2">
        <label>octree.h</label>
        <link refid="octree_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/octree.cpp</label>
        <link refid="octree_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>DirectXMath.h</label>
      </node>
      <node id="3">
        <label>cstddef</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="octree_8h" kindref="compound">octree.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceDirectX" kindref="compound">dx</ref><sp/>=<sp/><ref refid="namespaceDirectX" kindref="compound">DirectX</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="classOctree_a288e573ccc46fee7b0f77bfd5f6478e3_1a288e573ccc46fee7b0f77bfd5f6478e3" kindref="member">Octree::Octree</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMFLOAT3<sp/>&amp;m_center,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMFLOAT3<sp/>&amp;halfDim<sp/>)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>m_center(<sp/>m_center<sp/>),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>m_half(<sp/>halfDim<sp/>),</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>m_data(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initially<sp/>there<sp/>are<sp/>no<sp/>m_children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_children[i]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classOctree_a9b398786e41fc7497ea7bc9f264596f5_1a9b398786e41fc7497ea7bc9f264596f5" refkind="member"><highlight class="normal"><ref refid="classOctree_a288e573ccc46fee7b0f77bfd5f6478e3_1a288e573ccc46fee7b0f77bfd5f6478e3" kindref="member">Octree::Octree</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classOctree" kindref="compound">Octree</ref><sp/>&amp;rhs<sp/>)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>m_center(<sp/>rhs.m_center<sp/>),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>m_half(<sp/>rhs.m_half<sp/>),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>m_data(<sp/>rhs.m_data<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classOctree_a6705a6ae06fab5a0dfdd79f45576020d_1a6705a6ae06fab5a0dfdd79f45576020d" refkind="member"><highlight class="normal"><ref refid="classOctree_a6705a6ae06fab5a0dfdd79f45576020d_1a6705a6ae06fab5a0dfdd79f45576020d" kindref="member">Octree::~Octree</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classOctree_a7ea759b535af4b7a6d23cacda2d62765_1a7ea759b535af4b7a6d23cacda2d62765" kindref="member">m_children</ref>[i];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classOctree_a4edd2af2d4cedc9a01f76ce525adbca1_1a4edd2af2d4cedc9a01f76ce525adbca1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classOctree_a4edd2af2d4cedc9a01f76ce525adbca1_1a4edd2af2d4cedc9a01f76ce525adbca1" kindref="member">Octree::getOctantContainingPoint</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMFLOAT3<sp/>&amp;point<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="38"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oct<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>point.x<sp/>&gt;=<sp/><ref refid="classOctree_a2522baa7f50932f82eeaedc2c426952f_1a2522baa7f50932f82eeaedc2c426952f" kindref="member">m_center</ref>.x<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oct<sp/>|=<sp/>4;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0b<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>point.y<sp/>&gt;=<sp/><ref refid="classOctree_a2522baa7f50932f82eeaedc2c426952f_1a2522baa7f50932f82eeaedc2c426952f" kindref="member">m_center</ref>.y<sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oct<sp/>|=<sp/>2;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0b<sp/>010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>point.z<sp/>&gt;=<sp/><ref refid="classOctree_a2522baa7f50932f82eeaedc2c426952f_1a2522baa7f50932f82eeaedc2c426952f" kindref="member">m_center</ref>.z<sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oct<sp/>|=<sp/>1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0b<sp/>001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oct;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classOctree_ae1ab7d4beee257afbca9a1975137e32b_1ae1ab7d4beee257afbca9a1975137e32b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classOctree_ae1ab7d4beee257afbca9a1975137e32b_1ae1ab7d4beee257afbca9a1975137e32b" kindref="member">Octree::isLeafNode</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>This<sp/>is<sp/>correct,<sp/>but<sp/>overkill</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>for(<sp/>int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>m_children[i]<sp/>!=<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classOctree_a7ea759b535af4b7a6d23cacda2d62765_1a7ea759b535af4b7a6d23cacda2d62765" kindref="member">m_children</ref>[0]<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classOctree_ab6706e538ad4d06dd1dc8d7e0dbc4f85_1ab6706e538ad4d06dd1dc8d7e0dbc4f85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOctree_ab6706e538ad4d06dd1dc8d7e0dbc4f85_1ab6706e538ad4d06dd1dc8d7e0dbc4f85" kindref="member">Octree::insert</ref>(<sp/><ref refid="octree_8h_aaf5b531b30e1cf3570c4ac47b057e0b4_1aaf5b531b30e1cf3570c4ac47b057e0b4" kindref="member">OctreeData</ref><sp/>*data<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>node<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>m_data<sp/>node<sp/>yet<sp/>assigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>it<sp/>is<sp/>a<sp/>leaf,<sp/>then<sp/>we&apos;re<sp/>done!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classOctree_ae1ab7d4beee257afbca9a1975137e32b_1ae1ab7d4beee257afbca9a1975137e32b" kindref="member">isLeafNode</ref>()<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classOctree_a4110f6074692c9f49b4546f00a439432_1a4110f6074692c9f49b4546f00a439432" kindref="member">m_data</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOctree_a4110f6074692c9f49b4546f00a439432_1a4110f6074692c9f49b4546f00a439432" kindref="member">m_data</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;re<sp/>at<sp/>a<sp/>leaf,<sp/>but<sp/>there&apos;s<sp/>already<sp/>something<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>split<sp/>this<sp/>node<sp/>so<sp/>that<sp/>it<sp/>has<sp/>8<sp/>children<sp/>octants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>insert<sp/>`m_data`<sp/>and<sp/>`data`<sp/>to<sp/>children<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>data<sp/>for<sp/>a<sp/>later<sp/>re-insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octree_8h_aaf5b531b30e1cf3570c4ac47b057e0b4_1aaf5b531b30e1cf3570c4ac47b057e0b4" kindref="member">OctreeData</ref><sp/>*oldData<sp/>=<sp/><ref refid="classOctree_a4110f6074692c9f49b4546f00a439432_1a4110f6074692c9f49b4546f00a439432" kindref="member">m_data</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOctree_a4110f6074692c9f49b4546f00a439432_1a4110f6074692c9f49b4546f00a439432" kindref="member">m_data</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>the<sp/>current<sp/>node<sp/>and<sp/>create<sp/>new<sp/>empty<sp/>trees<sp/>for<sp/>each<sp/>child<sp/>octant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>bounding<sp/>boxes<sp/>for<sp/>each<sp/>child</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx::XMFLOAT3<sp/>newCenter<sp/>=<sp/><ref refid="classOctree_a2522baa7f50932f82eeaedc2c426952f_1a2522baa7f50932f82eeaedc2c426952f" kindref="member">m_center</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newCenter.x<sp/>+=<sp/><ref refid="classOctree_ada75fb425d41149b5328e5db3c3be938_1ada75fb425d41149b5328e5db3c3be938" kindref="member">m_half</ref>.x<sp/>*<sp/>(<sp/>i<sp/>&amp;<sp/>4<sp/>?<sp/>0.5f<sp/>:<sp/>-0.5f<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newCenter.y<sp/>+=<sp/><ref refid="classOctree_ada75fb425d41149b5328e5db3c3be938_1ada75fb425d41149b5328e5db3c3be938" kindref="member">m_half</ref>.y<sp/>*<sp/>(<sp/>i<sp/>&amp;<sp/>2<sp/>?<sp/>0.5f<sp/>:<sp/>-0.5f<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newCenter.z<sp/>+=<sp/><ref refid="classOctree_ada75fb425d41149b5328e5db3c3be938_1ada75fb425d41149b5328e5db3c3be938" kindref="member">m_half</ref>.z<sp/>*<sp/>(<sp/>i<sp/>&amp;<sp/>1<sp/>?<sp/>0.5f<sp/>:<sp/>-0.5f<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOctree_a7ea759b535af4b7a6d23cacda2d62765_1a7ea759b535af4b7a6d23cacda2d62765" kindref="member">m_children</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classOctree" kindref="compound">Octree</ref>{<sp/>newCenter,<sp/><ref refid="classOctree_ada75fb425d41149b5328e5db3c3be938_1ada75fb425d41149b5328e5db3c3be938" kindref="member">m_half</ref><sp/>*<sp/>0.5f<sp/>};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>re-insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(we<sp/>wouldn&apos;t<sp/>need<sp/>to<sp/>insert<sp/>from<sp/>the<sp/>root,<sp/>because<sp/>we<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>know<sp/>it&apos;s<sp/>guaranteed<sp/>to<sp/>be<sp/>in<sp/>this<sp/>section<sp/>of<sp/>the<sp/>tree)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOctree_a7ea759b535af4b7a6d23cacda2d62765_1a7ea759b535af4b7a6d23cacda2d62765" kindref="member">m_children</ref>[<ref refid="classOctree_a4edd2af2d4cedc9a01f76ce525adbca1_1a4edd2af2d4cedc9a01f76ce525adbca1" kindref="member">getOctantContainingPoint</ref>(<sp/>oldData-&gt;getPosition()<sp/>)]-&gt;<ref refid="classOctree_ab6706e538ad4d06dd1dc8d7e0dbc4f85_1ab6706e538ad4d06dd1dc8d7e0dbc4f85" kindref="member">insert</ref>(<sp/>oldData<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOctree_a7ea759b535af4b7a6d23cacda2d62765_1a7ea759b535af4b7a6d23cacda2d62765" kindref="member">m_children</ref>[<ref refid="classOctree_a4edd2af2d4cedc9a01f76ce525adbca1_1a4edd2af2d4cedc9a01f76ce525adbca1" kindref="member">getOctantContainingPoint</ref>(<sp/>data-&gt;getPosition()<sp/>)]-&gt;<ref refid="classOctree_ab6706e538ad4d06dd1dc8d7e0dbc4f85_1ab6706e538ad4d06dd1dc8d7e0dbc4f85" kindref="member">insert</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>at<sp/>an<sp/>interior<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>recursively<sp/>into<sp/>the<sp/>appropriate<sp/>child<sp/>octant<sp/>until<sp/>we<sp/>reach<sp/>a<sp/>leaf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>octant<sp/>=<sp/><ref refid="classOctree_a4edd2af2d4cedc9a01f76ce525adbca1_1a4edd2af2d4cedc9a01f76ce525adbca1" kindref="member">getOctantContainingPoint</ref>(<sp/>data-&gt;getPosition()<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOctree_a7ea759b535af4b7a6d23cacda2d62765_1a7ea759b535af4b7a6d23cacda2d62765" kindref="member">m_children</ref>[octant]-&gt;<ref refid="classOctree_ab6706e538ad4d06dd1dc8d7e0dbc4f85_1ab6706e538ad4d06dd1dc8d7e0dbc4f85" kindref="member">insert</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classOctree_a9ca58e8b8198c3953833a69b82b35bda_1a9ca58e8b8198c3953833a69b82b35bda" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOctree_a9ca58e8b8198c3953833a69b82b35bda_1a9ca58e8b8198c3953833a69b82b35bda" kindref="member">Octree::getEntitiesWithinBBox</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMFLOAT3<sp/>&amp;requestedMin,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMFLOAT3<sp/>&amp;requestedMax,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;OctreeData*&gt;&amp;<sp/>resultsOut<sp/>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;re<sp/>at<sp/>a<sp/>leaf<sp/>node,<sp/>check<sp/>to<sp/>see<sp/>whether<sp/>the<sp/>point<sp/>is<sp/>inside<sp/>the<sp/>BBox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classOctree_ae1ab7d4beee257afbca9a1975137e32b_1ae1ab7d4beee257afbca9a1975137e32b" kindref="member">isLeafNode</ref>()<sp/>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classOctree_a4110f6074692c9f49b4546f00a439432_1a4110f6074692c9f49b4546f00a439432" kindref="member">m_data</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMFLOAT3<sp/>p<sp/>=<sp/><ref refid="classOctree_a4110f6074692c9f49b4546f00a439432_1a4110f6074692c9f49b4546f00a439432" kindref="member">m_data</ref>-&gt;getPosition();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p.x<sp/>&gt;<sp/>requestedMax.x<sp/>||<sp/>p.y<sp/>&gt;<sp/>requestedMax.y<sp/>||<sp/>p.z<sp/>&gt;<sp/>requestedMax.z<sp/>||<sp/>p.x<sp/>&lt;<sp/>requestedMin.x<sp/>||<sp/>p.y<sp/>&lt;<sp/>requestedMin.y<sp/>||<sp/>p.z<sp/>&lt;<sp/>requestedMin.z<sp/>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultsOut.push_back(<sp/><ref refid="classOctree_a4110f6074692c9f49b4546f00a439432_1a4110f6074692c9f49b4546f00a439432" kindref="member">m_data</ref><sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>at<sp/>an<sp/>interior<sp/>node<sp/>of<sp/>the<sp/>tree.<sp/>We<sp/>will<sp/>check<sp/>to<sp/>see<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>query<sp/>bounding<sp/>box<sp/>lies<sp/>outside<sp/>the<sp/>octants<sp/>of<sp/>this<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>min/max<sp/>corners<sp/>of<sp/>this<sp/>child<sp/>octant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx::XMFLOAT3<sp/>childMax<sp/>=<sp/><ref refid="classOctree_a7ea759b535af4b7a6d23cacda2d62765_1a7ea759b535af4b7a6d23cacda2d62765" kindref="member">m_children</ref>[i]-&gt;<ref refid="classOctree_a2522baa7f50932f82eeaedc2c426952f_1a2522baa7f50932f82eeaedc2c426952f" kindref="member">m_center</ref><sp/>+<sp/><ref refid="classOctree_a7ea759b535af4b7a6d23cacda2d62765_1a7ea759b535af4b7a6d23cacda2d62765" kindref="member">m_children</ref>[i]-&gt;<ref refid="classOctree_ada75fb425d41149b5328e5db3c3be938_1ada75fb425d41149b5328e5db3c3be938" kindref="member">m_half</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx::XMFLOAT3<sp/>childMin<sp/>=<sp/><ref refid="classOctree_a7ea759b535af4b7a6d23cacda2d62765_1a7ea759b535af4b7a6d23cacda2d62765" kindref="member">m_children</ref>[i]-&gt;<ref refid="classOctree_a2522baa7f50932f82eeaedc2c426952f_1a2522baa7f50932f82eeaedc2c426952f" kindref="member">m_center</ref><sp/>-<sp/><ref refid="classOctree_a7ea759b535af4b7a6d23cacda2d62765_1a7ea759b535af4b7a6d23cacda2d62765" kindref="member">m_children</ref>[i]-&gt;<ref refid="classOctree_ada75fb425d41149b5328e5db3c3be938_1ada75fb425d41149b5328e5db3c3be938" kindref="member">m_half</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>child&apos;s<sp/>{min,max}<sp/>lie<sp/>out<sp/>of<sp/>requested<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>childMax.x<sp/>&lt;<sp/>requestedMin.x</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>childMax.y<sp/>&lt;<sp/>requestedMin.y</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>childMax.z<sp/>&lt;<sp/>requestedMin.z</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>childMin.x<sp/>&gt;<sp/>requestedMax.x</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>childMin.y<sp/>&gt;<sp/>requestedMax.y</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>childMin.z<sp/>&gt;<sp/>requestedMax.z<sp/>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ve<sp/>determined<sp/>that<sp/>this<sp/>child<sp/>contains<sp/>the<sp/>requested<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classOctree_a7ea759b535af4b7a6d23cacda2d62765_1a7ea759b535af4b7a6d23cacda2d62765" kindref="member">m_children</ref>[i]-&gt;<ref refid="classOctree_a9ca58e8b8198c3953833a69b82b35bda_1a9ca58e8b8198c3953833a69b82b35bda" kindref="member">getEntitiesWithinBBox</ref>(<sp/>requestedMin,<sp/>requestedMax,<sp/>resultsOut<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/octree.cpp"/>
  </compounddef>
</doxygen>
