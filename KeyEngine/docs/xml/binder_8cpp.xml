<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="binder_8cpp" kind="file" language="C++">
    <compoundname>binder.cpp</compoundname>
    <includes refid="binder_8h" local="yes">binder.h</includes>
    <includes local="no">cctype</includes>
    <includes refid="renderer__exception_8h" local="yes">renderer_exception.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includes refid="assertions__console_8h" local="yes">assertions_console.h</includes>
    <incdepgraph>
      <node id="15">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>bindable.h</label>
        <link refid="bindable_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>binder.h</label>
        <link refid="binder_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>bitmap.h</label>
        <link refid="bitmap_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="24">
        <label>depth_stencil_view.h</label>
        <link refid="depth__stencil__view_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>graphics_friend.h</label>
        <link refid="graphics__friend_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>key_exception.h</label>
        <link refid="key__exception_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>key_wrl.h</label>
        <link refid="key__wrl_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>linker.h</label>
        <link refid="linker_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="17">
        <label>render_surface.h</label>
        <link refid="render__surface_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>render_target.h</label>
        <link refid="render__target_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>renderer_exception.h</label>
        <link refid="renderer__exception_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>texture_desc.h</label>
        <link refid="texture__desc_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/binder.cpp</label>
        <link refid="binder_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>DirectxMath.h</label>
      </node>
      <node id="28">
        <label>Windows.h</label>
      </node>
      <node id="41">
        <label>algorithm</label>
      </node>
      <node id="18">
        <label>array</label>
      </node>
      <node id="37">
        <label>bitset</label>
      </node>
      <node id="33">
        <label>cctype</label>
      </node>
      <node id="39">
        <label>cinttypes</label>
      </node>
      <node id="38">
        <label>cstddef</label>
      </node>
      <node id="14">
        <label>d3d11.h</label>
      </node>
      <node id="30">
        <label>dxtex/DirectXTex.h</label>
      </node>
      <node id="45">
        <label>execution</label>
      </node>
      <node id="40">
        <label>future</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="43">
        <label>iterator</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="42">
        <label>numeric</label>
      </node>
      <node id="20">
        <label>optional</label>
      </node>
      <node id="44">
        <label>regex</label>
      </node>
      <node id="27">
        <label>sdkddkver.h</label>
      </node>
      <node id="36">
        <label>set</label>
      </node>
      <node id="7">
        <label>sstream</label>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="6">
        <label>type_traits</label>
      </node>
      <node id="5">
        <label>typeinfo</label>
      </node>
      <node id="35">
        <label>vector</label>
      </node>
      <node id="22">
        <label>wrl.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceren">ren</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="binder_8h" kindref="compound">binder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cctype&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderer__exception_8h" kindref="compound">renderer_exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assertions__console_8h" kindref="compound">assertions_console.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceren" kindref="compound">ren</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classren_1_1IBinder_ac1030ca1e3d499a26546667741065bf6_1ac1030ca1e3d499a26546667741065bf6" refkind="member"><highlight class="normal"><ref refid="classren_1_1IBinder_ac1030ca1e3d499a26546667741065bf6_1ac1030ca1e3d499a26546667741065bf6" kindref="member">IBinder::IBinder</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name<sp/>)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name{name}</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>!name.empty(),<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>name<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bValidName<sp/>=<sp/>std::all_of(<sp/>name.begin(),<sp/>name.end(),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::isalnum(<sp/>c<sp/>)<sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>bValidName<sp/>&amp;&amp;<sp/>!std::isdigit(<sp/>name.front()<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>Input<sp/>name!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classren_1_1IBinder_addedf6dfc3d0ed6066b26fc04705d349_1addedf6dfc3d0ed6066b26fc04705d349" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IBinder_addedf6dfc3d0ed6066b26fc04705d349_1addedf6dfc3d0ed6066b26fc04705d349" kindref="member">IBinder::setPassAndLinkerNames</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;passName,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;linkerName<sp/>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>!passName.empty(),<sp/></highlight><highlight class="stringliteral">&quot;Pass<sp/>name<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>!linkerName.empty(),<sp/></highlight><highlight class="stringliteral">&quot;Output<sp/>name<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPassNameValid<sp/>=<sp/>std::all_of(<sp/>passName.begin(),<sp/>passName.end(),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::isalnum(<sp/>c<sp/>)<sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>passName<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;$&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>(<sp/>!bPassNameValid<sp/>||<sp/>std::isdigit(<sp/>passName.front()<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;IBinder<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classren_1_1IBinder_a35c782b42674b69887f03fc038ccf6a8_1a35c782b42674b69887f03fc038ccf6a8" kindref="member">m_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>Invalid<sp/>pass<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>passName<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IBinder_a94cccb29d98a504bfa532559a059cf69_1a94cccb29d98a504bfa532559a059cf69" kindref="member">m_passName</ref><sp/>=<sp/>passName;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkLinkerName<sp/>=<sp/>std::all_of(<sp/>linkerName.begin(),<sp/>linkerName.end(),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::isalnum(<sp/>c<sp/>)<sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!checkLinkerName<sp/>||<sp/>std::isdigit(<sp/>linkerName.front()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;IBinder<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classren_1_1IBinder_a35c782b42674b69887f03fc038ccf6a8_1a35c782b42674b69887f03fc038ccf6a8" kindref="member">m_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>Invalid<sp/>output<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>linkerName<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IBinder_a08396c56db98c2a56856889425faf612_1a08396c56db98c2a56856889425faf612" kindref="member">m_linkerName</ref><sp/>=<sp/>linkerName;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classren_1_1IBinder_ae172f9fbccaa1892ec815db67f65eb91_1ae172f9fbccaa1892ec815db67f65eb91" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classren_1_1IBinder_ae172f9fbccaa1892ec815db67f65eb91_1ae172f9fbccaa1892ec815db67f65eb91" kindref="member">IBinder::getName</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IBinder_a35c782b42674b69887f03fc038ccf6a8_1a35c782b42674b69887f03fc038ccf6a8" kindref="member">m_name</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classren_1_1IBinder_a64585dc2d047254637335f70083a67b6_1a64585dc2d047254637335f70083a67b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classren_1_1IBinder_a64585dc2d047254637335f70083a67b6_1a64585dc2d047254637335f70083a67b6" kindref="member">IBinder::getPassName</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IBinder_a94cccb29d98a504bfa532559a059cf69_1a94cccb29d98a504bfa532559a059cf69" kindref="member">m_passName</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classren_1_1IBinder_ac109d2e346a1ab633d0e41d096227b2f_1ac109d2e346a1ab633d0e41d096227b2f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classren_1_1IBinder_ac109d2e346a1ab633d0e41d096227b2f_1ac109d2e346a1ab633d0e41d096227b2f" kindref="member">IBinder::getLinkerName</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classren_1_1IBinder_a08396c56db98c2a56856889425faf612_1a08396c56db98c2a56856889425faf612" kindref="member">m_linkerName</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight><highlight class="comment">//ren</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/binder.cpp"/>
  </compounddef>
</doxygen>
