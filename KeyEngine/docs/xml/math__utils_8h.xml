<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="math__utils_8h" kind="file" language="C++">
    <compoundname>math_utils.h</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">limits</includes>
    <includes refid="assertions__console_8h" local="yes">assertions_console.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includedby refid="key__timer_8h" local="yes">inc/key_timer.h</includedby>
    <includedby refid="MODEL_8CPP" local="yes">src/MODEL.CPP</includedby>
    <includedby refid="SHADOW__PASS_8CPP" local="yes">src/SHADOW_PASS.CPP</includedby>
    <includedby refid="bmp__loader_8cpp" local="yes">src/bmp_loader.cpp</includedby>
    <includedby refid="camera_8cpp" local="yes">src/camera.cpp</includedby>
    <includedby refid="d3d__utils_8cpp" local="yes">src/d3d_utils.cpp</includedby>
    <includedby refid="geometry_8cpp" local="yes">src/geometry.cpp</includedby>
    <includedby refid="graphics_8cpp" local="yes">src/graphics.cpp</includedby>
    <includedby refid="imgui__visitors_8cpp" local="yes">src/imgui_visitors.cpp</includedby>
    <includedby refid="light__source_8cpp" local="yes">src/light_source.cpp</includedby>
    <includedby refid="math__utils_8cpp" local="yes">src/math_utils.cpp</includedby>
    <includedby refid="pass__2d_8cpp" local="yes">src/pass_2d.cpp</includedby>
    <includedby refid="perlin__noise_8cpp" local="yes">src/perlin_noise.cpp</includedby>
    <includedby refid="renderer_8cpp" local="yes">src/renderer.cpp</includedby>
    <includedby refid="settings__manager_8cpp" local="yes">src/settings_manager.cpp</includedby>
    <includedby refid="terrain_8cpp" local="yes">src/terrain.cpp</includedby>
    <includedby refid="window_8cpp" local="yes">src/window.cpp</includedby>
    <incdepgraph>
      <node id="8">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>inc/math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>bitset</label>
      </node>
      <node id="16">
        <label>cinttypes</label>
      </node>
      <node id="2">
        <label>cmath</label>
      </node>
      <node id="15">
        <label>cstddef</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="22">
        <label>execution</label>
      </node>
      <node id="17">
        <label>future</label>
      </node>
      <node id="6">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="20">
        <label>iterator</label>
      </node>
      <node id="7">
        <label>limits</label>
      </node>
      <node id="19">
        <label>numeric</label>
      </node>
      <node id="21">
        <label>regex</label>
      </node>
      <node id="13">
        <label>set</label>
      </node>
      <node id="5">
        <label>sstream</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>inc/constant_buffer.h</label>
        <link refid="constant__buffer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>inc/game.h</label>
        <link refid="game_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>inc/graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>inc/key_timer.h</label>
        <link refid="key__timer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>inc/math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>inc/performance_log.h</label>
        <link refid="performance__log_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inc/shadow_pass.h</label>
        <link refid="shadow__pass_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>inc/sky_vscb.h</label>
        <link refid="sky__vscb_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/MODEL.CPP</label>
        <link refid="MODEL_8CPP"/>
      </node>
      <node id="9">
        <label>src/SHADOW_PASS.CPP</label>
        <link refid="SHADOW__PASS_8CPP"/>
      </node>
      <node id="20">
        <label>src/blend_state.cpp</label>
        <link refid="blend__state_8cpp"/>
      </node>
      <node id="21">
        <label>src/blur_outline_draw_pass.cpp</label>
        <link refid="blur__outline__draw__pass_8cpp"/>
      </node>
      <node id="59">
        <label>src/bmp_loader.cpp</label>
        <link refid="bmp__loader_8cpp"/>
      </node>
      <node id="22">
        <label>src/camera.cpp</label>
        <link refid="camera_8cpp"/>
      </node>
      <node id="15">
        <label>src/camera_frustum.cpp</label>
        <link refid="camera__frustum_8cpp"/>
      </node>
      <node id="23">
        <label>src/camera_manager.cpp</label>
        <link refid="camera__manager_8cpp"/>
      </node>
      <node id="16">
        <label>src/camera_widget.cpp</label>
        <link refid="camera__widget_8cpp"/>
      </node>
      <node id="57">
        <label>src/console.cpp</label>
        <link refid="console_8cpp"/>
      </node>
      <node id="24">
        <label>src/constant_buffer_ex.cpp</label>
        <link refid="constant__buffer__ex_8cpp"/>
      </node>
      <node id="25">
        <label>src/cube.cpp</label>
        <link refid="cube_8cpp"/>
      </node>
      <node id="26">
        <label>src/cube_texture.cpp</label>
        <link refid="cube__texture_8cpp"/>
      </node>
      <node id="60">
        <label>src/d3d_utils.cpp</label>
        <link refid="d3d__utils_8cpp"/>
      </node>
      <node id="27">
        <label>src/depth_stencil_state.cpp</label>
        <link refid="depth__stencil__state_8cpp"/>
      </node>
      <node id="28">
        <label>src/depth_stencil_view.cpp</label>
        <link refid="depth__stencil__view_8cpp"/>
      </node>
      <node id="29">
        <label>src/fullscreen_pass.cpp</label>
        <link refid="fullscreen__pass_8cpp"/>
      </node>
      <node id="4">
        <label>src/game.cpp</label>
        <link refid="game_8cpp"/>
      </node>
      <node id="61">
        <label>src/geometry.cpp</label>
        <link refid="geometry_8cpp"/>
      </node>
      <node id="30">
        <label>src/graphics.cpp</label>
        <link refid="graphics_8cpp"/>
      </node>
      <node id="31">
        <label>src/graphics_friend.cpp</label>
        <link refid="graphics__friend_8cpp"/>
      </node>
      <node id="32">
        <label>src/horizontal_blur_pass.cpp</label>
        <link refid="horizontal__blur__pass_8cpp"/>
      </node>
      <node id="62">
        <label>src/imgui_visitors.cpp</label>
        <link refid="imgui__visitors_8cpp"/>
      </node>
      <node id="33">
        <label>src/index_buffer.cpp</label>
        <link refid="index__buffer_8cpp"/>
      </node>
      <node id="34">
        <label>src/input_layout.cpp</label>
        <link refid="input__layout_8cpp"/>
      </node>
      <node id="35">
        <label>src/job.cpp</label>
        <link refid="job_8cpp"/>
      </node>
      <node id="58">
        <label>src/key_sound.cpp</label>
        <link refid="key__sound_8cpp"/>
      </node>
      <node id="10">
        <label>src/light_source.cpp</label>
        <link refid="light__source_8cpp"/>
      </node>
      <node id="36">
        <label>src/line.cpp</label>
        <link refid="line_8cpp"/>
      </node>
      <node id="5">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="37">
        <label>src/material_loader.cpp</label>
        <link refid="material__loader_8cpp"/>
      </node>
      <node id="63">
        <label>src/math_utils.cpp</label>
        <link refid="math__utils_8cpp"/>
      </node>
      <node id="38">
        <label>src/mouse_picker.cpp</label>
        <link refid="mouse__picker_8cpp"/>
      </node>
      <node id="39">
        <label>src/pass_2d.cpp</label>
        <link refid="pass__2d_8cpp"/>
      </node>
      <node id="56">
        <label>src/performance_log.cpp</label>
        <link refid="performance__log_8cpp"/>
      </node>
      <node id="64">
        <label>src/perlin_noise.cpp</label>
        <link refid="perlin__noise_8cpp"/>
      </node>
      <node id="40">
        <label>src/pixel_shader.cpp</label>
        <link refid="pixel__shader_8cpp"/>
      </node>
      <node id="41">
        <label>src/plane.cpp</label>
        <link refid="plane_8cpp"/>
      </node>
      <node id="42">
        <label>src/primitive_topology.cpp</label>
        <link refid="primitive__topology_8cpp"/>
      </node>
      <node id="43">
        <label>src/rasterizer_state.cpp</label>
        <link refid="rasterizer__state_8cpp"/>
      </node>
      <node id="44">
        <label>src/render_target.cpp</label>
        <link refid="render__target_8cpp"/>
      </node>
      <node id="11">
        <label>src/renderer.cpp</label>
        <link refid="renderer_8cpp"/>
      </node>
      <node id="65">
        <label>src/settings_manager.cpp</label>
        <link refid="settings__manager_8cpp"/>
      </node>
      <node id="13">
        <label>src/sky_pass.cpp</label>
        <link refid="sky__pass_8cpp"/>
      </node>
      <node id="14">
        <label>src/sky_vscb.cpp</label>
        <link refid="sky__vscb_8cpp"/>
      </node>
      <node id="45">
        <label>src/sphere.cpp</label>
        <link refid="sphere_8cpp"/>
      </node>
      <node id="17">
        <label>src/terrain.cpp</label>
        <link refid="terrain_8cpp"/>
      </node>
      <node id="46">
        <label>src/testing.cpp</label>
        <link refid="testing_8cpp"/>
      </node>
      <node id="47">
        <label>src/texture.cpp</label>
        <link refid="texture_8cpp"/>
      </node>
      <node id="48">
        <label>src/texture_sampler_state.cpp</label>
        <link refid="texture__sampler__state_8cpp"/>
      </node>
      <node id="18">
        <label>src/transform_vscb.cpp</label>
        <link refid="transform__vscb_8cpp"/>
      </node>
      <node id="49">
        <label>src/ui_component.cpp</label>
        <link refid="ui__component_8cpp"/>
      </node>
      <node id="50">
        <label>src/ui_pass.cpp</label>
        <link refid="ui__pass_8cpp"/>
      </node>
      <node id="51">
        <label>src/vertex_buffer.cpp</label>
        <link refid="vertex__buffer_8cpp"/>
      </node>
      <node id="52">
        <label>src/vertex_shader.cpp</label>
        <link refid="vertex__shader_8cpp"/>
      </node>
      <node id="53">
        <label>src/viewport.cpp</label>
        <link refid="viewport_8cpp"/>
      </node>
      <node id="54">
        <label>src/window.cpp</label>
        <link refid="window_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classutil_1_1ByteSet" prot="public">util::ByteSet</innerclass>
    <innernamespace refid="namespaceutil">util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assertions__console_8h" kindref="compound">assertions_console.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceutil" kindref="compound">util</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespaceutil_a9cb19702de08e7aca317e7a795f37040_1a9cb19702de08e7aca317e7a795f37040" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a9cb19702de08e7aca317e7a795f37040_1a9cb19702de08e7aca317e7a795f37040" kindref="member">PI</ref><sp/>=<sp/>3.14159265f;</highlight></codeline>
<codeline lineno="17" refid="namespaceutil_a1df469c258d832b8be26b2ca436ee115_1a1df469c258d832b8be26b2ca436ee115" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a1df469c258d832b8be26b2ca436ee115_1a1df469c258d832b8be26b2ca436ee115" kindref="member">PI_D</ref><sp/>=<sp/>3.1415926535897932;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19" refid="namespaceutil_a1f46fe404f647e8e415ddd6e1e487b89_1a1f46fe404f647e8e415ddd6e1e487b89" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a1f46fe404f647e8e415ddd6e1e487b89_1a1f46fe404f647e8e415ddd6e1e487b89" kindref="member">Epsilon</ref><sp/>=<sp/>std::numeric_limits&lt;T&gt;::epsilon();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constexpr<sp/>float<sp/>Epsilon<sp/>=<sp/>1.19209e-07;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>DirectXMath<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constexpr<sp/>double<sp/>Epsilon_d<sp/>=<sp/>2.22045e-16;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="24" refid="namespaceutil_a2e4fe9aa4716394e2805e543799fc447_1a2e4fe9aa4716394e2805e543799fc447" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a2e4fe9aa4716394e2805e543799fc447_1a2e4fe9aa4716394e2805e543799fc447" kindref="member">abs</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>val<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>val<sp/>&gt;=<sp/>0<sp/>)<sp/>?</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-val;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="33" refid="namespaceutil_ac97480a5df1556320ccc259c914c1c33_1ac97480a5df1556320ccc259c914c1c33" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_ac97480a5df1556320ccc259c914c1c33_1ac97480a5df1556320ccc259c914c1c33" kindref="member">truncate</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>val<sp/>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="namespaceutil_a2e4fe9aa4716394e2805e543799fc447_1a2e4fe9aa4716394e2805e543799fc447" kindref="member">util::abs</ref>(<sp/>val<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="comment">//<sp/><sp/>#WARNING:<sp/>Innacurate,<sp/>just<sp/>use<sp/>std::fmod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//template&lt;typename<sp/>T,<sp/>typename<sp/>=<sp/>std::enable_if_t&lt;std::is_floating_point_v&lt;T&gt;&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//constexpr<sp/>T<sp/>modulusFloat(<sp/>const<sp/>T<sp/>divident,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>const<sp/>T<sp/>divisor<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>divident<sp/>-<sp/>util::truncate(<sp/>divident<sp/>/<sp/>divisor<sp/>)<sp/>*<sp/>divisor;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="48" refid="namespaceutil_a5613c348b3692b0253e342a1b13555ef_1a5613c348b3692b0253e342a1b13555ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a5613c348b3692b0253e342a1b13555ef_1a5613c348b3692b0253e342a1b13555ef" kindref="member">modulus</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>divident,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>divisor<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(<sp/>std::is_floating_point_v&lt;T&gt;<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fmod(<sp/>divident,<sp/>divisor<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>divident<sp/>%<sp/>divisor;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>disable<sp/>:<sp/>4244<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="63" refid="namespaceutil_a42d2ccb619f95403446082ae98138a5c_1a42d2ccb619f95403446082ae98138a5c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a42d2ccb619f95403446082ae98138a5c_1a42d2ccb619f95403446082ae98138a5c" kindref="member">ceil</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>val<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val<sp/>+<sp/>(T)1<sp/>-<sp/><ref refid="namespaceutil_a5613c348b3692b0253e342a1b13555ef_1a5613c348b3692b0253e342a1b13555ef" kindref="member">util::modulus</ref>(<sp/>val,<sp/>(T)1<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>default<sp/>:<sp/>4244<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>disable<sp/>:<sp/>4244<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="71" refid="namespaceutil_a58e7805f849ad738fcc0d637ecb77919_1a58e7805f849ad738fcc0d637ecb77919" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a58e7805f849ad738fcc0d637ecb77919_1a58e7805f849ad738fcc0d637ecb77919" kindref="member">floor</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>val<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val<sp/>-<sp/><ref refid="namespaceutil_a5613c348b3692b0253e342a1b13555ef_1a5613c348b3692b0253e342a1b13555ef" kindref="member">util::modulus</ref>(<sp/>val,<sp/>(T)1<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>default<sp/>:<sp/>4244<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="78" refid="namespaceutil_a9af4afdb82a7b89d7ff477feb683947d_1a9af4afdb82a7b89d7ff477feb683947d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a9af4afdb82a7b89d7ff477feb683947d_1a9af4afdb82a7b89d7ff477feb683947d" kindref="member">round</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>val<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a58e7805f849ad738fcc0d637ecb77919_1a58e7805f849ad738fcc0d637ecb77919" kindref="member">util::floor</ref>(<sp/>val<sp/>+<sp/>(T)0.5<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>J,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;J&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="85" refid="namespaceutil_ad0d0cc222ef61a720cf2a5cc1aec8ff8_1ad0d0cc222ef61a720cf2a5cc1aec8ff8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_ad0d0cc222ef61a720cf2a5cc1aec8ff8_1ad0d0cc222ef61a720cf2a5cc1aec8ff8" kindref="member">powerOf</ref>(<sp/>T<sp/>x,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>J<sp/>n<sp/>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>n<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;powerOf<sp/>doesn&apos;t<sp/>handle<sp/>negatives<sp/>powers!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>n<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>xo<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>--n<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>*=<sp/>xo;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="103" refid="namespaceutil_aeda13ee8a3f52a650523b8c6bfd2b61b_1aeda13ee8a3f52a650523b8c6bfd2b61b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_aeda13ee8a3f52a650523b8c6bfd2b61b_1aeda13ee8a3f52a650523b8c6bfd2b61b" kindref="member">getFractionalPart</ref>(<sp/>T<sp/>val<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="namespaceutil_a2e4fe9aa4716394e2805e543799fc447_1a2e4fe9aa4716394e2805e543799fc447" kindref="member">util::abs</ref>(<sp/>val<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val<sp/>-<sp/>(std::int64_t)val;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="110" refid="namespaceutil_aea61d2ef154830ad1294ac3cc6776628_1aea61d2ef154830ad1294ac3cc6776628" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>std::uint64_t<sp/><ref refid="namespaceutil_aea61d2ef154830ad1294ac3cc6776628_1aea61d2ef154830ad1294ac3cc6776628" kindref="member">getFractionalPartAsInt</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>val,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfDecimalPlaces<sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>integralPart;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>fractionalPart<sp/>=<sp/>std::modf(<sp/>val,<sp/>&amp;integralPart<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a9af4afdb82a7b89d7ff477feb683947d_1a9af4afdb82a7b89d7ff477feb683947d" kindref="member">util::round</ref>(<sp/>fractionalPart<sp/>*<sp/><ref refid="namespaceutil_ad0d0cc222ef61a720cf2a5cc1aec8ff8_1ad0d0cc222ef61a720cf2a5cc1aec8ff8" kindref="member">util::powerOf</ref>(<sp/>10,<sp/>numberOfDecimalPlaces<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="119" refid="namespaceutil_abbef8e9194b651fe51e9b998c26739e7_1abbef8e9194b651fe51e9b998c26739e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_abbef8e9194b651fe51e9b998c26739e7_1abbef8e9194b651fe51e9b998c26739e7" kindref="member">clamp</ref>(<sp/>T<sp/>number,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>minimum,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>maximum<sp/>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>number<sp/>&lt;<sp/>minimum<sp/>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minimum;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>number<sp/>&gt;<sp/>maximum<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maximum;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>number;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>use<sp/>this<sp/>instead<sp/>of<sp/>mapRange<sp/>when<sp/>you<sp/>don&apos;t<sp/>want<sp/>to<sp/>scale<sp/>the<sp/>values<sp/>of<sp/>the<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="137" refid="namespaceutil_a5db2cb4938195122f9929c8358024ff3_1a5db2cb4938195122f9929c8358024ff3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a5db2cb4938195122f9929c8358024ff3_1a5db2cb4938195122f9929c8358024ff3" kindref="member">numberToCoord</ref>(<sp/>T<sp/>number,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amountPerGradation,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGradations,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_x_axis<sp/>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amountLimit<sp/>=<sp/>amountPerGradation<sp/>*<sp/>nGradations<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>number<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>integer<sp/>=<sp/><ref refid="namespaceutil_abbef8e9194b651fe51e9b998c26739e7_1abbef8e9194b651fe51e9b998c26739e7" kindref="member">util::clamp</ref>(<sp/>integer,<sp/>-amountLimit,<sp/>amountLimit<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>floor<sp/>because<sp/>we<sp/>want<sp/>to<sp/>return<sp/>a<sp/>number<sp/>in<sp/>the<sp/>form<sp/>of<sp/>an<sp/>integer<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord<sp/>=<sp/><ref refid="namespaceutil_a58e7805f849ad738fcc0d637ecb77919_1a58e7805f849ad738fcc0d637ecb77919" kindref="member">util::floor</ref>(<sp/>integer<sp/>/<sp/>amountPerGradation<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>coord<sp/>=<sp/>coord<sp/>+<sp/>(<sp/>nGradations<sp/>/<sp/>2<sp/>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>flip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!is_x_axis<sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord<sp/>=<sp/>nGradations<sp/>+<sp/>1<sp/>-<sp/>coord;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coord;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="159" refid="namespaceutil_a3fb577feda44ff7eba9c92b53e673f1b_1a3fb577feda44ff7eba9c92b53e673f1b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a3fb577feda44ff7eba9c92b53e673f1b_1a3fb577feda44ff7eba9c92b53e673f1b" kindref="member">mapRangeRounded</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>val,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>inFirst,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>inLast,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>outFirst,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>outLast<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(outLast<sp/>-<sp/>outFirst)<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(inLast<sp/>-<sp/>inFirst);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>outFirst<sp/>+<sp/><ref refid="namespaceutil_a9af4afdb82a7b89d7ff477feb683947d_1a9af4afdb82a7b89d7ff477feb683947d" kindref="member">util::round</ref>(slope<sp/>*<sp/>(<sp/>val<sp/>-<sp/>inFirst<sp/>))<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="170" refid="namespaceutil_a7972d7da89f87d143aa9097a2f83c9d4_1a7972d7da89f87d143aa9097a2f83c9d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a7972d7da89f87d143aa9097a2f83c9d4_1a7972d7da89f87d143aa9097a2f83c9d4" kindref="member">mapRange</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>val,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>inFirst,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>inLast,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>outFirst,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>outLast<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slope<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(outLast<sp/>-<sp/>outFirst)<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(inLast<sp/>-<sp/>inFirst);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>outFirst<sp/>+<sp/>slope<sp/>*<sp/>(val<sp/>-<sp/>inFirst)<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="comment">//<sp/>examples:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>util::isApproximatelyEqual(<sp/>8.74227766e-08f,<sp/>0.0f<sp/>);<sp/><sp/><sp/><sp/>//<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>util::isApproximatelyEqual(<sp/>-0.999999940f,<sp/>-1.0f<sp/>);<sp/><sp/><sp/><sp/><sp/>//<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">ing_po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="185" refid="namespaceutil_a0ad004849a7e0c00352c9907f23bb198_1a0ad004849a7e0c00352c9907f23bb198" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a0ad004849a7e0c00352c9907f23bb198_1a0ad004849a7e0c00352c9907f23bb198" kindref="member">isApproximatelyEqual</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>x,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>y<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(<sp/>x<sp/>-<sp/>y<sp/>)<sp/>&lt;=<sp/><ref refid="namespaceutil_a1f46fe404f647e8e415ddd6e1e487b89_1a1f46fe404f647e8e415ddd6e1e487b89" kindref="member">Epsilon&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fast<sp/>multiplication<sp/>by<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="193" refid="namespaceutil_a36f24693be7541930204513fba53095f_1a36f24693be7541930204513fba53095f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a36f24693be7541930204513fba53095f_1a36f24693be7541930204513fba53095f" kindref="member">mult10</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>num<sp/>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>num<sp/>&lt;&lt;<sp/>3<sp/>)<sp/>+<sp/>(<sp/>num<sp/>&lt;&lt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fast<sp/>division<sp/>by<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//https://stackoverflow.com/a/5558614/4743275</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="201" refid="namespaceutil_a4d3114ad4b2572880992732ff3aff6a6_1a4d3114ad4b2572880992732ff3aff6a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a4d3114ad4b2572880992732ff3aff6a6_1a4d3114ad4b2572880992732ff3aff6a6" kindref="member">div10</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>dividend<sp/>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invDivisor<sp/>=<sp/>0x1999999A;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>(<sp/>invDivisor<sp/>*<sp/>dividend<sp/>)<sp/>&gt;&gt;<sp/>32<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="209" refid="namespaceutil_a17b3c735495491f3781a50b216438caf_1a17b3c735495491f3781a50b216438caf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a17b3c735495491f3781a50b216438caf_1a17b3c735495491f3781a50b216438caf" kindref="member">squareRoot</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>x<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>.00001;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>guess<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Negative<sp/>Argument.<sp/>Error!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(T)1.0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespaceutil_a2e4fe9aa4716394e2805e543799fc447_1a2e4fe9aa4716394e2805e543799fc447" kindref="member">util::abs</ref>(<sp/>(<sp/>guess<sp/>*<sp/>guess<sp/>)<sp/>/<sp/>x<sp/>-<sp/>1<sp/>)<sp/>&gt;=<sp/>epsilon<sp/>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>guess<sp/>=<sp/>(<sp/>x<sp/>/<sp/>guess<sp/>+<sp/>guess<sp/>)<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;rep<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>i</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>guess<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>guess</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>guess;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="236" refid="namespaceutil_a6f7ed38c6cb8770246dbd82f30bcde7f_1a6f7ed38c6cb8770246dbd82f30bcde7f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a6f7ed38c6cb8770246dbd82f30bcde7f_1a6f7ed38c6cb8770246dbd82f30bcde7f" kindref="member">quadratic</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>a,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>b,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>c<sp/>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>discriminant<sp/>=<sp/>b<sp/>*<sp/>b<sp/>-<sp/>4<sp/>*<sp/>a<sp/>*<sp/>c;<sp/></highlight><highlight class="comment">//<sp/>diakrinousa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>discriminant<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Imaginary<sp/>roots.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>discriminant<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>only<sp/>one<sp/>root:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>-b<sp/>/<sp/>(2.0<sp/>*<sp/>a)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1st<sp/>root:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(<sp/>-b<sp/>+<sp/><ref refid="namespaceutil_a17b3c735495491f3781a50b216438caf_1a17b3c735495491f3781a50b216438caf" kindref="member">util::squareRoot</ref>(<sp/>discriminant<sp/>)<sp/>)<sp/>/<sp/>(<sp/>2<sp/>*<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t<sp/>2nd<sp/>root:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(<sp/>-b<sp/>-<sp/><ref refid="namespaceutil_a17b3c735495491f3781a50b216438caf_1a17b3c735495491f3781a50b216438caf" kindref="member">util::squareRoot</ref>(<sp/>discriminant<sp/>)<sp/>)<sp/>/<sp/>(<sp/>2<sp/>*<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="263" refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" kindref="member">square</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>*<sp/>x;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="269" refid="namespaceutil_a8da9df39bac50860c8b13dbea7166b71_1a8da9df39bac50860c8b13dbea7166b71" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespaceutil_a8da9df39bac50860c8b13dbea7166b71_1a8da9df39bac50860c8b13dbea7166b71" kindref="member">toHexString</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>i<sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>T<sp/>)<sp/>*<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::hex</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oss.str();</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="281" refid="namespaceutil_aa1410673520251e8adac7cc3bb6b53ec_1aa1410673520251e8adac7cc3bb6b53ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_aa1410673520251e8adac7cc3bb6b53ec_1aa1410673520251e8adac7cc3bb6b53ec" kindref="member">normalizeTo01</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>val,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>min,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>max<sp/>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>val<sp/>-<sp/>min<sp/>)<sp/>/<sp/>(<sp/>max<sp/>-<sp/>min<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>convert<sp/>a<sp/>range<sp/>of<sp/>numbers<sp/>to<sp/>any<sp/>other<sp/>range<sp/>of<sp/>numbers<sp/>maintaining<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>protecting<sp/>against<sp/>the<sp/>the<sp/>case<sp/>where<sp/>the<sp/>old<sp/>range<sp/>is<sp/>0<sp/>(<sp/>oldMin<sp/>=<sp/>oldMax<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="291" refid="namespaceutil_add4d8b0dd31847872bc5aecd1f9c307a_1add4d8b0dd31847872bc5aecd1f9c307a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_add4d8b0dd31847872bc5aecd1f9c307a_1add4d8b0dd31847872bc5aecd1f9c307a" kindref="member">convertRange</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>valueInRange,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>oldMin,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>oldMax,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>newMin,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>newMax<sp/>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>oldRange<sp/>=<sp/>oldMax<sp/>-<sp/>oldMin;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>newValueInRange;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>oldRange<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newValueInRange<sp/>=<sp/>newMin;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>newRange<sp/>=<sp/>newMax<sp/>-<sp/>newMin;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newValueInRange<sp/>=<sp/>(<sp/>(<sp/>(<sp/>valueInRange<sp/>-<sp/>oldMin<sp/>)<sp/>*<sp/>newRange<sp/>)<sp/>/<sp/>oldRange<sp/>)<sp/>+<sp/>newMin;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newValueInRange;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="313" refid="namespaceutil_a4bb3661bd6981253daff0d4676749651_1a4bb3661bd6981253daff0d4676749651" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a4bb3661bd6981253daff0d4676749651_1a4bb3661bd6981253daff0d4676749651" kindref="member">wrapAngle</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>angleRad<sp/>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>val<sp/>=<sp/>std::fmod(<sp/>angleRad,<sp/>(T)2.0<sp/>*<sp/>(T)<ref refid="namespaceutil_a1df469c258d832b8be26b2ca436ee115_1a1df469c258d832b8be26b2ca436ee115" kindref="member">PI_D</ref><sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>val<sp/>&gt;<sp/>(T)<ref refid="namespaceutil_a1df469c258d832b8be26b2ca436ee115_1a1df469c258d832b8be26b2ca436ee115" kindref="member">PI_D</ref><sp/>)<sp/>?</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>val<sp/>-<sp/>(T)2.0<sp/>*<sp/>(T)<ref refid="namespaceutil_a1df469c258d832b8be26b2ca436ee115_1a1df469c258d832b8be26b2ca436ee115" kindref="member">PI_D</ref><sp/>)<sp/>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>&gt;<sp/>2pi<sp/>subtract<sp/>2pi<sp/>from<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="323" refid="namespaceutil_a9ae2547dbf481d93da2a600fcab91ffa_1a9ae2547dbf481d93da2a600fcab91ffa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a9ae2547dbf481d93da2a600fcab91ffa_1a9ae2547dbf481d93da2a600fcab91ffa" kindref="member">toRadians</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>deg<sp/>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>deg<sp/>*<sp/><ref refid="namespaceutil_a9cb19702de08e7aca317e7a795f37040_1a9cb19702de08e7aca317e7a795f37040" kindref="member">PI</ref><sp/>)<sp/>/<sp/>(T)180.0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="330" refid="namespaceutil_a80c74393452d6c7fb4ac1d854c905c8a_1a80c74393452d6c7fb4ac1d854c905c8a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a80c74393452d6c7fb4ac1d854c905c8a_1a80c74393452d6c7fb4ac1d854c905c8a" kindref="member">toDegrees</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>rad<sp/>)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>rad<sp/>*<sp/>(T)180.0<sp/>)<sp/>/<sp/><ref refid="namespaceutil_a9cb19702de08e7aca317e7a795f37040_1a9cb19702de08e7aca317e7a795f37040" kindref="member">PI</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a4333f2f85b482976f011e521728d23aa_1a4333f2f85b482976f011e521728d23aa" kindref="member">normalizeAngleDeg</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>angleDeg<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a1c89c4b84e6c94896fd73ca1d3821faa_1a1c89c4b84e6c94896fd73ca1d3821faa" kindref="member">isAngleDegWithinRange</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angleDeg,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b<sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="340" refid="namespaceutil_a1fabcee5cfce6935f5525a672110face_1a1fabcee5cfce6935f5525a672110face" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a1fabcee5cfce6935f5525a672110face_1a1fabcee5cfce6935f5525a672110face" kindref="member">interpolate</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;src,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;dst,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>src<sp/>+<sp/>alpha<sp/>*<sp/>(<sp/>dst<sp/>-<sp/>src<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346" refid="namespaceutil_a62c80b402cab4b59e95be83a68faacb2_1a62c80b402cab4b59e95be83a68faacb2" refkind="member"><highlight class="normal"><ref refid="utils__global_8h_a7ca14f19bceddbf7f92d70e763f5e5b4_1a7ca14f19bceddbf7f92d70e763f5e5b4" kindref="member">ALIAS_FUNCTION</ref>(<sp/><ref refid="namespaceutil_a1fabcee5cfce6935f5525a672110face_1a1fabcee5cfce6935f5525a672110face" kindref="member">interpolate</ref>,<sp/>lerp<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>is<sp/>distance<sp/>from<sp/>center<sp/>of<sp/>Kernel/curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>is<sp/>the<sp/>standard<sp/>deviation<sp/>of<sp/>the<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="354" refid="namespaceutil_ac8a2092a72d02aa310e114fc79673f57_1ac8a2092a72d02aa310e114fc79673f57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_ac8a2092a72d02aa310e114fc79673f57_1ac8a2092a72d02aa310e114fc79673f57" kindref="member">gaussian1d</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>x,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>sigma,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>mean<sp/>=<sp/>(T)0<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>ss<sp/>=<sp/><ref refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" kindref="member">util::square</ref>(<sp/>sigma<sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(T)1<sp/>/<sp/>sqrt(<sp/>(T)2<sp/>*<sp/>(T)<ref refid="namespaceutil_a1df469c258d832b8be26b2ca436ee115_1a1df469c258d832b8be26b2ca436ee115" kindref="member">PI_D</ref><sp/>*<sp/>ss<sp/>)<sp/>)<sp/>*<sp/>exp(<sp/>-<ref refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" kindref="member">util::square</ref>(<sp/>x<sp/>-<sp/>mean<sp/>)<sp/>/<sp/>((T)2<sp/>*<sp/>ss)<sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="364" refid="namespaceutil_a1810a179a19e611ea6d512b61b97a61b_1a1810a179a19e611ea6d512b61b97a61b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a1810a179a19e611ea6d512b61b97a61b_1a1810a179a19e611ea6d512b61b97a61b" kindref="member">gaussian2d</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>x,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>y,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>sigma<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>ss<sp/>=<sp/><ref refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" kindref="member">util::square</ref>(<sp/>sigma<sp/>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(T)1<sp/>/<sp/>sqrt(<sp/>(T)2<sp/>*<sp/>(T)<ref refid="namespaceutil_a1df469c258d832b8be26b2ca436ee115_1a1df469c258d832b8be26b2ca436ee115" kindref="member">PI_D</ref><sp/>*<sp/>ss<sp/>)<sp/>)<sp/>*<sp/>exp(<sp/>-(<sp/>(<sp/><ref refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" kindref="member">util::square</ref>(<sp/>x<sp/>)<sp/>+<sp/><ref refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" kindref="member">util::square</ref>(<sp/>y<sp/>)<sp/>)<sp/>/<sp/>(<sp/>(T)2<sp/>*<sp/><ref refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" kindref="member">util::square</ref>(<sp/>ss<sp/>)<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>an<sp/>image<sp/>filter<sp/>it<sp/>can<sp/>be<sp/>used<sp/>to<sp/>smoothen/blur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#TODO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="376" refid="namespaceutil_adb467cffbff18127cef94c3418dca920_1adb467cffbff18127cef94c3418dca920" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_adb467cffbff18127cef94c3418dca920_1adb467cffbff18127cef94c3418dca920" kindref="member">gaussianFilter</ref>(<sp/></highlight><highlight class="comment">/*Image*<sp/>img,*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>x,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>y,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kernelSize<sp/>=<sp/>5<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>sigma<sp/>=<sp/><ref refid="namespaceutil_a42d2ccb619f95403446082ae98138a5c_1a42d2ccb619f95403446082ae98138a5c" kindref="member">util::ceil</ref>(<sp/>(<sp/>kernelSize<sp/>-<sp/>(T)1<sp/>)<sp/>/<sp/>(T)6<sp/>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>ss<sp/>=<sp/><ref refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" kindref="member">util::square</ref>(<sp/>sigma<sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>-kernelSize;<sp/>i<sp/>&lt;<sp/>kernelSize;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>-kernelSize;<sp/>j<sp/>&lt;<sp/>kernelSize;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(T)1<sp/>/<sp/>sqrt(<sp/>(T)2<sp/>*<sp/>(T)<ref refid="namespaceutil_a1df469c258d832b8be26b2ca436ee115_1a1df469c258d832b8be26b2ca436ee115" kindref="member">PI_D</ref><sp/>*<sp/>ss<sp/>)<sp/>)<sp/>*<sp/>exp(<sp/>-(<sp/>(<sp/><ref refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" kindref="member">util::square</ref>(<sp/>x<sp/>)<sp/>+<sp/><ref refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" kindref="member">util::square</ref>(<sp/>y<sp/>)<sp/>)<sp/>/<sp/>(<sp/>(T)2<sp/>*<sp/><ref refid="namespaceutil_a5d636960b2782b61ea876609328470d4_1a5d636960b2782b61ea876609328470d4" kindref="member">util::square</ref>(<sp/>ss<sp/>)<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="393" refid="namespaceutil_ad75839159c882b952ed1bb8e7a742697_1ad75839159c882b952ed1bb8e7a742697" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_ad75839159c882b952ed1bb8e7a742697_1ad75839159c882b952ed1bb8e7a742697" kindref="member">randomInRange</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>start,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>end<sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>rand()<sp/>*<sp/>(<sp/>end<sp/>-<sp/>start<sp/>+<sp/>1<sp/>)<sp/>)<sp/>+<sp/>start;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="400" refid="namespaceutil_a2a1ad5fba27ae51e668d2f9eb0f5e91c_1a2a1ad5fba27ae51e668d2f9eb0f5e91c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a2a1ad5fba27ae51e668d2f9eb0f5e91c_1a2a1ad5fba27ae51e668d2f9eb0f5e91c" kindref="member">signum</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>val<sp/>)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val<sp/>&gt;<sp/>(T)<sp/>0<sp/>?</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>:</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>std::enable_if_t&lt;std::is_arithmetic_v&lt;T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="408" refid="namespaceutil_a7cea5ffdc34b4aac2eb8bbbcef6734c0_1a7cea5ffdc34b4aac2eb8bbbcef6734c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>T<sp/><ref refid="namespaceutil_a7cea5ffdc34b4aac2eb8bbbcef6734c0_1a7cea5ffdc34b4aac2eb8bbbcef6734c0" kindref="member">nthMultipleOf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>number,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>multiple;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;=<sp/>n;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiple<sp/>=<sp/>i<sp/>*<sp/>number;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>multiple;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a1211fa8e894591a77f7486f478d77fc6_1a1211fa8e894591a77f7486f478d77fc6" kindref="member">nextPowerOf2</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Complexity:<sp/>O(log_n(m))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a758a63b46e99a774a19e9ddd520bc65a_1a758a63b46e99a774a19e9ddd520bc65a" kindref="member">gcd</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divident,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divisor<sp/>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_aec3b656d9b57d19b7606c42a5fc867e2_1aec3b656d9b57d19b7606c42a5fc867e2" kindref="member">factorialOf</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a877f952aa1d6672af06e84ac66a6bfd1_1a877f952aa1d6672af06e84ac66a6bfd1" kindref="member">isPrime</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a7f606e49e4a62fef3cd258e61ed52b36_1a7f606e49e4a62fef3cd258e61ed52b36" kindref="member">computeTriangularNumber</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a0e934fb844bf60cb5c0e211141162ede_1a0e934fb844bf60cb5c0e211141162ede" kindref="member">isPowerOfTwo</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>value<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a65a18284a43416d037ebb1552998268c_1a65a18284a43416d037ebb1552998268c" kindref="member">cosine</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a4f336975ca420f87d54fa60fcbcaa8ef_1a4f336975ca420f87d54fa60fcbcaa8ef" kindref="member">sine</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_af2b18232aad377b0f849e261c667b192_1af2b18232aad377b0f849e261c667b192" kindref="member">linearSearch</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*A,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_ac106a29bc8c2019999bac178dc1d4f9e_1ac106a29bc8c2019999bac178dc1d4f9e" kindref="member">binarySearch</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*A,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a051e42270e861e705165662e98ef3a5f_1a051e42270e861e705165662e98ef3a5f" kindref="member">toDecimal</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hex<sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a383c13af9a1086f2f2e7925379644974_1a383c13af9a1086f2f2e7925379644974" kindref="member">toHex</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dec<sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a70abed632e50f5ad83dc9a60ac0ffa3d_1a70abed632e50f5ad83dc9a60ac0ffa3d" kindref="member">printDec2Bin</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a46c4bb08aa780e556c6f79c7fa366366_1a46c4bb08aa780e556c6f79c7fa366366" kindref="member">printDecToBin</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_ac6adf3c3c73d7fc30a415812897d8730_1ac6adf3c3c73d7fc30a415812897d8730" kindref="member">haveOppositeSigns</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a9c07badeeb1f276700aa07d6f9c67e98_1a9c07badeeb1f276700aa07d6f9c67e98" kindref="member">msbIndexOfDec</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a7be47189cc4f7a85c57b999a1c27ec3a_1a7be47189cc4f7a85c57b999a1c27ec3a" kindref="member">countSetBits</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_ab1362dfa9d3fdb70aa9622ce7b25bc68_1ab1362dfa9d3fdb70aa9622ce7b25bc68" kindref="member">isPowerOf2</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a4a013cbf3a9e8a69632005c8eb05f30c_1a4a013cbf3a9e8a69632005c8eb05f30c" kindref="member">convertToBase</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a3ff14b6402beee2193fd266c9dd38b4c_1a3ff14b6402beee2193fd266c9dd38b4c" kindref="member">isNthBitSet</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>posOfTestBit<sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a3b5279060c8cf1e37d66efb1c5713827_1a3b5279060c8cf1e37d66efb1c5713827" kindref="member">swapBits</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_abe9d79bee6ce10a21eb1df3284e34739_1abe9d79bee6ce10a21eb1df3284e34739" kindref="member">setNthBit</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a8a10339f6981abedeca3d91e0417e3ee_1a8a10339f6981abedeca3d91e0417e3ee" kindref="member">clearNthBit</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a3ab679991f6532514ef070142d9b5e01_1a3ab679991f6532514ef070142d9b5e01" kindref="member">toggleNthBit</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_acd548992752c40870a8ccbb50a155a8f_1acd548992752c40870a8ccbb50a155a8f" kindref="member">isSet</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bitPos<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a71f689b172e5d8012806cf3f9b652fa3_1a71f689b172e5d8012806cf3f9b652fa3" kindref="member">isSetByNumber</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitFlag<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceutil_a36c6964cf7808d1afb0909c42fe05d5c_1a36c6964cf7808d1afb0909c42fe05d5c" kindref="member">changeNthBit</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bitVal<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b&gt;</highlight></codeline>
<codeline lineno="468" refid="classutil_1_1ByteSet" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classutil_1_1ByteSet" kindref="compound">ByteSet</ref></highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472" refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea0b55685ab668eb00f5d2b1cec892d73a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea0b55685ab668eb00f5d2b1cec892d73a" kindref="member">bit7</ref><sp/>=<sp/>(<sp/>b<sp/>&amp;<sp/>0x80<sp/>)<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="473" refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703eac89027bf1294c2ce3d788bea4cb49708" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703eac89027bf1294c2ce3d788bea4cb49708" kindref="member">bit6</ref><sp/>=<sp/>(<sp/>b<sp/>&amp;<sp/>0x40<sp/>)<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="474" refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea53ac3f89bddcead198a67504ee49f103" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea53ac3f89bddcead198a67504ee49f103" kindref="member">bit5</ref><sp/>=<sp/>(<sp/>b<sp/>&amp;<sp/>0x20<sp/>)<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="475" refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea53721f63d558cdd3496a2426150fbed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea53721f63d558cdd3496a2426150fbed3" kindref="member">bit4</ref><sp/>=<sp/>(<sp/>b<sp/>&amp;<sp/>0x10<sp/>)<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="476" refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703eab9047bac74e8e44445c11f6378bfadc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703eab9047bac74e8e44445c11f6378bfadc3" kindref="member">bit3</ref><sp/>=<sp/>(<sp/>b<sp/>&amp;<sp/>0x08<sp/>)<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="477" refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea45d818c01cf6b4489a673c43247f74c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea45d818c01cf6b4489a673c43247f74c7" kindref="member">bit2</ref><sp/>=<sp/>(<sp/>b<sp/>&amp;<sp/>0x04<sp/>)<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="478" refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea931b836a69683c88f14f0e5bf8ab1aa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea931b836a69683c88f14f0e5bf8ab1aa5" kindref="member">bit1</ref><sp/>=<sp/>(<sp/>b<sp/>&amp;<sp/>0x02<sp/>)<sp/>?<sp/>1<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea6464d7e24b8cb88727e66f55c5513d81" kindref="member">bit0</ref><sp/>=<sp/>(<sp/>b<sp/>&amp;<sp/>0x01<sp/>)<sp/>?<sp/>1<sp/>:<sp/>0</highlight></codeline>
<codeline lineno="480" refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea6464d7e24b8cb88727e66f55c5513d81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classutil_1_1ByteSet_a896a43dfa4e158c4c11eee9d0ab91b61_1a896a43dfa4e158c4c11eee9d0ab91b61ad534695983b9d00f8c8e169b9468c2fe" kindref="member">nbits</ref><sp/>=<sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea6464d7e24b8cb88727e66f55c5513d81" kindref="member">bit0</ref><sp/>+<sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea931b836a69683c88f14f0e5bf8ab1aa5" kindref="member">bit1</ref><sp/>+<sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea45d818c01cf6b4489a673c43247f74c7" kindref="member">bit2</ref><sp/>+<sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703eab9047bac74e8e44445c11f6378bfadc3" kindref="member">bit3</ref><sp/>+<sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea53721f63d558cdd3496a2426150fbed3" kindref="member">bit4</ref><sp/>+<sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea53ac3f89bddcead198a67504ee49f103" kindref="member">bit5</ref><sp/>+<sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703eac89027bf1294c2ce3d788bea4cb49708" kindref="member">bit6</ref><sp/>+<sp/><ref refid="classutil_1_1ByteSet_a15a8d6fbc50c20846487bcea06e4703e_1a15a8d6fbc50c20846487bcea06e4703ea0b55685ab668eb00f5d2b1cec892d73a" kindref="member">bit7</ref></highlight></codeline>
<codeline lineno="485" refid="classutil_1_1ByteSet_a896a43dfa4e158c4c11eee9d0ab91b61_1a896a43dfa4e158c4c11eee9d0ab91b61ad534695983b9d00f8c8e169b9468c2fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="486"><highlight class="normal">};</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>namespace<sp/>util</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="inc/math_utils.h"/>
  </compounddef>
</doxygen>
