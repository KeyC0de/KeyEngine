<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="key__sound_8cpp" kind="file" language="C++">
    <compoundname>key_sound.cpp</compoundname>
    <includes refid="key__sound_8h" local="yes">key_sound.h</includes>
    <includes refid="winner_8h" local="yes">winner.h</includes>
    <includes refid="key__timer_8h" local="yes">key_timer.h</includes>
    <includes refid="assertions__console_8h" local="yes">assertions_console.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includes refid="os__utils_8h" local="yes">os_utils.h</includes>
    <includes local="no">algorithm</includes>
    <includes refid="reporter__access_8h" local="yes">reporter_access.h</includes>
    <includes refid="reporter__listener__events_8h" local="yes">reporter_listener_events.h</includes>
    <includes refid="thread__poolj_8h" local="yes">thread_poolj.h</includes>
    <incdepgraph>
      <node id="13">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>console.h</label>
        <link refid="console_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>key_exception.h</label>
        <link refid="key__exception_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>key_sound.h</label>
        <link refid="key__sound_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>key_timer.h</label>
        <link refid="key__timer_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="42">
        <label>os_utils.h</label>
        <link refid="os__utils_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>reporter_access.h</label>
        <link refid="reporter__access_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>reporter_listener.h</label>
        <link refid="reporter__listener_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>reporter_listener_events.h</label>
        <link refid="reporter__listener__events_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>thread_poolj.h</label>
        <link refid="thread__poolj_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/key_sound.cpp</label>
        <link refid="key__sound_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>ShlObj.h</label>
      </node>
      <node id="17">
        <label>Windows.h</label>
      </node>
      <node id="35">
        <label>algorithm</label>
      </node>
      <node id="31">
        <label>bitset</label>
      </node>
      <node id="20">
        <label>chrono</label>
      </node>
      <node id="33">
        <label>cinttypes</label>
      </node>
      <node id="23">
        <label>cmath</label>
      </node>
      <node id="44">
        <label>comdef.h</label>
      </node>
      <node id="6">
        <label>condition_variable</label>
      </node>
      <node id="32">
        <label>cstddef</label>
      </node>
      <node id="24">
        <label>cstdint</label>
      </node>
      <node id="39">
        <label>execution</label>
      </node>
      <node id="46">
        <label>functional</label>
      </node>
      <node id="34">
        <label>future</label>
      </node>
      <node id="27">
        <label>iomanip</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="37">
        <label>iterator</label>
      </node>
      <node id="54">
        <label>jthread/jthread.h</label>
      </node>
      <node id="55">
        <label>jthread/stop_token.h</label>
      </node>
      <node id="28">
        <label>limits</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="5">
        <label>mutex</label>
      </node>
      <node id="36">
        <label>numeric</label>
      </node>
      <node id="47">
        <label>optional</label>
      </node>
      <node id="53">
        <label>queue</label>
      </node>
      <node id="38">
        <label>regex</label>
      </node>
      <node id="16">
        <label>sdkddkver.h</label>
      </node>
      <node id="30">
        <label>set</label>
      </node>
      <node id="26">
        <label>sstream</label>
      </node>
      <node id="57">
        <label>stdexcept</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="19">
        <label>thread</label>
      </node>
      <node id="45">
        <label>tlhelp32.h</label>
      </node>
      <node id="25">
        <label>type_traits</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="49">
        <label>wincred.h</label>
      </node>
      <node id="43">
        <label>winternl.h</label>
      </node>
      <node id="8">
        <label>wrl\client.h</label>
      </node>
      <node id="10">
        <label>x3daudio.h</label>
      </node>
      <node id="9">
        <label>xaudio2.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacewav">wav</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="key__sound_8cpp_ab7fcb44ece61adb3354c39374fa16dcb_1ab7fcb44ece61adb3354c39374fa16dcb" prot="public" static="no">
        <name>fourccRIFF</name>
        <initializer>&apos;FFIR&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/key_sound.cpp" line="294" column="9" bodyfile="src/key_sound.cpp" bodystart="294" bodyend="-1"/>
        <referencedby refid="classSound_a14ac6aede2a2992054c848975f8062b5_1a14ac6aede2a2992054c848975f8062b5" compoundref="key__sound_8cpp" startline="390" endline="465">Sound::Sound</referencedby>
        <referencedby refid="classSound_ac387272947ef28e7a64947fc8950a540_1ac387272947ef28e7a64947fc8950a540" compoundref="key__sound_8cpp" startline="302" endline="368">Sound::findChunk</referencedby>
      </memberdef>
      <memberdef kind="define" id="key__sound_8cpp_ad6d58b71922626c6252d3f5886140ffa_1ad6d58b71922626c6252d3f5886140ffa" prot="public" static="no">
        <name>fourccDATA</name>
        <initializer>&apos;atad&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/key_sound.cpp" line="295" column="9" bodyfile="src/key_sound.cpp" bodystart="295" bodyend="-1"/>
        <referencedby refid="classSound_a14ac6aede2a2992054c848975f8062b5_1a14ac6aede2a2992054c848975f8062b5" compoundref="key__sound_8cpp" startline="390" endline="465">Sound::Sound</referencedby>
      </memberdef>
      <memberdef kind="define" id="key__sound_8cpp_a3b11bd848753dd06a2b6fdf5b40be196_1a3b11bd848753dd06a2b6fdf5b40be196" prot="public" static="no">
        <name>fourccFMT</name>
        <initializer>&apos; tmf&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/key_sound.cpp" line="296" column="9" bodyfile="src/key_sound.cpp" bodystart="296" bodyend="-1"/>
        <referencedby refid="classSound_a14ac6aede2a2992054c848975f8062b5_1a14ac6aede2a2992054c848975f8062b5" compoundref="key__sound_8cpp" startline="390" endline="465">Sound::Sound</referencedby>
      </memberdef>
      <memberdef kind="define" id="key__sound_8cpp_a3a18d0138f07b42901388a89b8c26604_1a3a18d0138f07b42901388a89b8c26604" prot="public" static="no">
        <name>fourccWAVE</name>
        <initializer>&apos;EVAW&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/key_sound.cpp" line="297" column="9" bodyfile="src/key_sound.cpp" bodystart="297" bodyend="-1"/>
        <referencedby refid="classSound_a14ac6aede2a2992054c848975f8062b5_1a14ac6aede2a2992054c848975f8062b5" compoundref="key__sound_8cpp" startline="390" endline="465">Sound::Sound</referencedby>
      </memberdef>
      <memberdef kind="define" id="key__sound_8cpp_ad1c73a8f08bfaeb26e636983b3bbb8a1_1ad1c73a8f08bfaeb26e636983b3bbb8a1" prot="public" static="no">
        <name>fourccXWMA</name>
        <initializer>&apos;AMWX&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/key_sound.cpp" line="298" column="9" bodyfile="src/key_sound.cpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="key__sound_8cpp_a3dc9eaa34f1f519ce538460f1d11d9f7_1a3dc9eaa34f1f519ce538460f1d11d9f7" prot="public" static="no">
        <name>fourccDPDS</name>
        <initializer>&apos;sdpd&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/key_sound.cpp" line="299" column="9" bodyfile="src/key_sound.cpp" bodystart="299" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="key__sound_8h" kindref="compound">key_sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="winner_8h" kindref="compound">winner.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="key__timer_8h" kindref="compound">key_timer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assertions__console_8h" kindref="compound">assertions_console.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="os__utils_8h" kindref="compound">os_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reporter__access_8h" kindref="compound">reporter_access.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="reporter__listener__events_8h" kindref="compound">reporter_listener_events.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="thread__poolj_8h" kindref="compound">thread_poolj.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(<sp/>lib,<sp/>&quot;xaudio2_8.lib&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mwrl<sp/>=<sp/>Microsoft::WRL;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="namespacewav" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacewav" kindref="compound">wav</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wav<sp/>properties<sp/>-<sp/>all<sp/>sounds<sp/>must<sp/>have<sp/>the<sp/>same<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="namespacewav_abe188c42be0b0e76e1ceda2650ee9b3a_1abe188c42be0b0e76e1ceda2650ee9b3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>WORD<sp/><ref refid="namespacewav_abe188c42be0b0e76e1ceda2650ee9b3a_1abe188c42be0b0e76e1ceda2650ee9b3a" kindref="member">nChannelsPerSound</ref><sp/>=<sp/>2u;</highlight></codeline>
<codeline lineno="24" refid="namespacewav_a2bb40914c2953ad0ff6333af159be8e9_1a2bb40914c2953ad0ff6333af159be8e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>DWORD<sp/><ref refid="namespacewav_a2bb40914c2953ad0ff6333af159be8e9_1a2bb40914c2953ad0ff6333af159be8e9" kindref="member">nSamplesPerSec</ref><sp/>=<sp/>48000u;<sp/></highlight><highlight class="comment">//<sp/>valid:<sp/>44100u,<sp/>48000u,<sp/>96000u</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespacewav_aef183314fb60d9b60c7b5e8859b08c61_1aef183314fb60d9b60c7b5e8859b08c61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>WORD<sp/><ref refid="namespacewav_aef183314fb60d9b60c7b5e8859b08c61_1aef183314fb60d9b60c7b5e8859b08c61" kindref="member">nBitsPerSample</ref><sp/>=<sp/>16u;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>wav</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classSoundManager_a19632df55e5cb35000159716a0937fbe_1a19632df55e5cb35000159716a0937fbe" refkind="member"><highlight class="normal"><ref refid="classSoundManager_a19632df55e5cb35000159716a0937fbe_1a19632df55e5cb35000159716a0937fbe" kindref="member">SoundManager::SoundManager</ref>(<sp/>WAVEFORMATEXTENSIBLE<sp/>*format<sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>CoInitializeEx(<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>COINIT_MULTITHREADED<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_a62632566d029de664c5e8869f0a36341_1a62632566d029de664c5e8869f0a36341" kindref="member">m_pFormat</ref><sp/>=<sp/>format;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>XAudio2Create(<sp/>&amp;<ref refid="classSoundManager_adcd65dcf480bcf28875ac4710b9fd31e_1adcd65dcf480bcf28875ac4710b9fd31e" kindref="member">m_pXAudio2</ref>,<sp/>0u,<sp/>XAUDIO2_DEFAULT_PROCESSOR<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classSoundManager_adcd65dcf480bcf28875ac4710b9fd31e_1adcd65dcf480bcf28875ac4710b9fd31e" kindref="member">m_pXAudio2</ref>-&gt;CreateMasteringVoice(<sp/>&amp;<ref refid="classSoundManager_a0155befc758a62ccfef8293bd1e1c63d_1a0155befc758a62ccfef8293bd1e1c63d" kindref="member">m_pMasterVoice</ref><sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_af209e8e9233afa44d535db66dd2f921e_1af209e8e9233afa44d535db66dd2f921e" kindref="member">m_idleChannels</ref>.reserve(<sp/><ref refid="classSoundManager_ad1372049f59b9ad5359e39b4c3b00b83_1ad1372049f59b9ad5359e39b4c3b00b83" kindref="member">s_nMaxAudioChannels</ref><sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classSoundManager_ad1372049f59b9ad5359e39b4c3b00b83_1ad1372049f59b9ad5359e39b4c3b00b83" kindref="member">s_nMaxAudioChannels</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSoundManager_af209e8e9233afa44d535db66dd2f921e_1af209e8e9233afa44d535db66dd2f921e" kindref="member">m_idleChannels</ref>.emplace_back(<sp/>std::make_unique&lt;Channel&gt;()<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_a96893224e08b96e5d32e790d0952b9d6_1a96893224e08b96e5d32e790d0952b9d6" kindref="member">m_submixes</ref>.reserve(<sp/><ref refid="classSoundManager_abcba73213c4974b765badc66bef132d9_1abcba73213c4974b765badc66bef132d9" kindref="member">s_nMaxSubmixes</ref><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classSoundManager_abcba73213c4974b765badc66bef132d9_1abcba73213c4974b765badc66bef132d9" kindref="member">s_nMaxSubmixes</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSoundManager_a96893224e08b96e5d32e790d0952b9d6_1a96893224e08b96e5d32e790d0952b9d6" kindref="member">m_submixes</ref>.emplace_back(<sp/>std::make_unique&lt;Submix&gt;()<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classSoundManager_aaecdaa9f10a6dd44795cb6ae0885c38a_1aaecdaa9f10a6dd44795cb6ae0885c38a" refkind="member"><highlight class="normal"><ref refid="classSoundManager_aaecdaa9f10a6dd44795cb6ae0885c38a_1aaecdaa9f10a6dd44795cb6ae0885c38a" kindref="member">SoundManager::~SoundManager</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>ul{<ref refid="classSoundManager_aec659fd70f9fc75d73ecff371a81cc30_1aec659fd70f9fc75d73ecff371a81cc30" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_af0a4bbdc43edf627464c153cc8d84b25_1af0a4bbdc43edf627464c153cc8d84b25" kindref="member">m_occupiedChannels</ref>.clear();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_af209e8e9233afa44d535db66dd2f921e_1af209e8e9233afa44d535db66dd2f921e" kindref="member">m_idleChannels</ref>.clear();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_a96893224e08b96e5d32e790d0952b9d6_1a96893224e08b96e5d32e790d0952b9d6" kindref="member">m_submixes</ref>.clear();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_a0155befc758a62ccfef8293bd1e1c63d_1a0155befc758a62ccfef8293bd1e1c63d" kindref="member">m_pMasterVoice</ref>-&gt;DestroyVoice();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_a0155befc758a62ccfef8293bd1e1c63d_1a0155befc758a62ccfef8293bd1e1c63d" kindref="member">m_pMasterVoice</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classSoundManager_1_1Channel_aadc3d5523ad54205848ae16d235c3b78_1aadc3d5523ad54205848ae16d235c3b78" refkind="member"><highlight class="normal"><ref refid="classSoundManager_1_1Channel_aadc3d5523ad54205848ae16d235c3b78_1aadc3d5523ad54205848ae16d235c3b78" kindref="member">SoundManager::Channel::~Channel</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSoundManager_1_1Channel_adc2592dd8f7f2ed3701a32baf12df372_1adc2592dd8f7f2ed3701a32baf12df372" kindref="member">m_pSourceVoice</ref><sp/>||<sp/><ref refid="classSoundManager_1_1Channel_a7a4d36846e0e0fb4a1354c98c72359b0_1a7a4d36846e0e0fb4a1354c98c72359b0" kindref="member">m_pSound</ref><sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSoundManager_1_1Channel_adc2592dd8f7f2ed3701a32baf12df372_1adc2592dd8f7f2ed3701a32baf12df372" kindref="member">m_pSourceVoice</ref>-&gt;DestroyVoice();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSoundManager_1_1Channel_adc2592dd8f7f2ed3701a32baf12df372_1adc2592dd8f7f2ed3701a32baf12df372" kindref="member">m_pSourceVoice</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSoundManager_1_1Channel_a7a4d36846e0e0fb4a1354c98c72359b0_1a7a4d36846e0e0fb4a1354c98c72359b0" kindref="member">m_pSound</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classSoundManager_1_1Channel_a2763d55d0132595bc75bd5023629c11b_1a2763d55d0132595bc75bd5023629c11b" refkind="member"><highlight class="normal"><ref refid="classSoundManager_1_1Channel_a04e2334276c6b3fb260569adf6a2dfd2_1a04e2334276c6b3fb260569adf6a2dfd2" kindref="member">SoundManager::Channel::Channel</ref>(<sp/><ref refid="classSoundManager_1_1Channel" kindref="compound">Channel</ref><sp/>&amp;&amp;rhs<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pSourceVoice{rhs.m_pSourceVoice},</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pSound{rhs.m_pSound}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_pSourceVoice<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_pSound<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classSoundManager_1_1Channel_a64d6f61f24fd7514322dbc2193c63f49_1a64d6f61f24fd7514322dbc2193c63f49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_1_1Channel_a64d6f61f24fd7514322dbc2193c63f49_1a64d6f61f24fd7514322dbc2193c63f49" kindref="member">SoundManager::Channel::operator=</ref>(<sp/><ref refid="classSoundManager_1_1Channel" kindref="compound">Channel</ref><sp/>&amp;&amp;rhs<sp/>)<sp/>cond_noex<sp/>-&gt;<sp/><ref refid="classSoundManager_1_1Channel" kindref="compound">Channel</ref>&amp;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_1_1Channel" kindref="compound">Channel</ref><sp/>tmp{std::move(<sp/>rhs<sp/>)};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>tmp<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classSoundManager_1_1Channel_ac96947ac0fe438b53be241d5b0f02a45_1ac96947ac0fe438b53be241d5b0f02a45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_1_1Channel_ac96947ac0fe438b53be241d5b0f02a45_1ac96947ac0fe438b53be241d5b0f02a45" kindref="member">SoundManager::Channel::setupChannel</ref>(<sp/><ref refid="classSoundManager" kindref="compound">SoundManager</ref><sp/>&amp;soundManager,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound" kindref="compound">Sound</ref><sp/>&amp;sound<sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pSound<sp/>=<sp/>&amp;sound;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">VoiceCallback</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IXAudio2VoiceCallback</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~VoiceCallback()<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Called<sp/>when<sp/>the<sp/>voice<sp/>is<sp/>about<sp/>to<sp/>start<sp/>processing<sp/>a<sp/>new<sp/>audio<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>STDMETHODCALLTYPE<sp/>OnBufferStart(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pBufferContext<sp/>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="109"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass_;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Called<sp/>when<sp/>the<sp/>voice<sp/>finishes<sp/>processing<sp/>a<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>STDMETHODCALLTYPE<sp/>OnBufferEnd(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pBufferContext<sp/>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSoundManager_1_1Channel" kindref="compound">Channel</ref><sp/>&amp;channel<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="classSoundManager_1_1Channel" kindref="compound">Channel</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pBufferContext<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel.<ref refid="classSoundManager_1_1Channel_a6849d436e409966424b6c6ed899cc8a6_1a6849d436e409966424b6c6ed899cc8a6" kindref="member">stopSound</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::unique_lock&lt;std::mutex&gt;<sp/>lg{channel.m_pSound-&gt;m_mu};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>Sound&apos;s<sp/>channel<sp/>if<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel.<ref refid="classSoundManager_1_1Channel_a7a4d36846e0e0fb4a1354c98c72359b0_1a7a4d36846e0e0fb4a1354c98c72359b0" kindref="member">m_pSound</ref>-&gt;<ref refid="classSound_ad09685bdd580fcef12897080e6e0219c_1ad09685bdd580fcef12897080e6e0219c" kindref="member">m_busyChannels</ref>.erase(<sp/>std::find(<sp/>channel.<ref refid="classSoundManager_1_1Channel_a7a4d36846e0e0fb4a1354c98c72359b0_1a7a4d36846e0e0fb4a1354c98c72359b0" kindref="member">m_pSound</ref>-&gt;<ref refid="classSound_ad09685bdd580fcef12897080e6e0219c_1ad09685bdd580fcef12897080e6e0219c" kindref="member">m_busyChannels</ref>.begin(),<sp/>channel.<ref refid="classSoundManager_1_1Channel_a7a4d36846e0e0fb4a1354c98c72359b0_1a7a4d36846e0e0fb4a1354c98c72359b0" kindref="member">m_pSound</ref>-&gt;<ref refid="classSound_ad09685bdd580fcef12897080e6e0219c_1ad09685bdd580fcef12897080e6e0219c" kindref="member">m_busyChannels</ref>.end(),<sp/>&amp;channel<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>notify<sp/>any<sp/>thread<sp/>that<sp/>might<sp/>be<sp/>waiting<sp/>for<sp/>activeChannels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>become<sp/>zero<sp/>(i.e.<sp/>thread<sp/>calling<sp/>destructor)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel.<ref refid="classSoundManager_1_1Channel_a7a4d36846e0e0fb4a1354c98c72359b0_1a7a4d36846e0e0fb4a1354c98c72359b0" kindref="member">m_pSound</ref>-&gt;<ref refid="classSound_a48edb3fd85b64943a27420d56c516c4c_1a48edb3fd85b64943a27420d56c516c4c" kindref="member">m_condVar</ref>.notify_all();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSoundManager_af3dcc32423f79c6fd4b05c99fcb38c62_1af3dcc32423f79c6fd4b05c99fcb38c62" kindref="member">SoundManager::getInstance</ref>().<ref refid="classSoundManager_a76471ec78202494756e392fd848a03d5_1a76471ec78202494756e392fd848a03d5" kindref="member">deactivateChannel</ref>(<sp/>channel<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Called<sp/>when<sp/>the<sp/>voice<sp/>reaches<sp/>the<sp/>end<sp/>position<sp/>of<sp/>a<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>STDMETHODCALLTYPE<sp/>OnLoopEnd(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pBufferContext<sp/>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="131"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass_;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Called<sp/>when<sp/>the<sp/>voice<sp/>has<sp/>just<sp/>finished<sp/>playing<sp/>a<sp/>contiguous<sp/>audio<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>STDMETHODCALLTYPE<sp/>OnStreamEnd()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass_;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Called<sp/>when<sp/>a<sp/>critical<sp/>error<sp/>occurs<sp/>during<sp/>voice<sp/>processing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>STDMETHODCALLTYPE<sp/>OnVoiceError(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pBufferContext,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HRESULT<sp/>Error<sp/>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="144"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass_;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Called<sp/>just<sp/>after<sp/>the<sp/>processing<sp/>pass<sp/>for<sp/>the<sp/>voice<sp/>ends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>STDMETHODCALLTYPE<sp/>OnVoiceProcessingPassEnd()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="150"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass_;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Called<sp/>during<sp/>each<sp/>processing<sp/>pass<sp/>for<sp/>each<sp/>voice,<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>STDMETHODCALLTYPE<sp/>OnVoiceProcessingPassStart(<sp/>UINT32<sp/>bytesRequired<sp/>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="156"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass_;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>VoiceCallback<sp/>voiceCallback;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pSound-&gt;m_pXaudioBuffer-&gt;pContext<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>UINT32<sp/>sourceVoiceCreationFlags<sp/>=<sp/>0u;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;waveFormat<sp/>=<sp/>m_pSound-&gt;m_pWaveFormat;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>5.<sp/>optional<sp/>-<sp/>specify<sp/>an<sp/>output<sp/>(submix)<sp/>voice<sp/>for<sp/>this<sp/>source<sp/>voice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;soundSubmixName<sp/>=<sp/>sound.<ref refid="classSound_a049651015596575bea8bff0e5ecf7e3c_1a049651015596575bea8bff0e5ecf7e3c" kindref="member">getSubmixName</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>soundSubmixName<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::unique_lock&lt;std::mutex&gt;<sp/>lg{soundManager.m_mu,<sp/>std::try_to_lock};<sp/>//<sp/>already<sp/>locked!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>a<sp/>submix<sp/>from<sp/>the<sp/>bag<sp/>and<sp/>fill<sp/>it<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;newSubmix<sp/>=<sp/>soundManager.<ref refid="classSoundManager_a96893224e08b96e5d32e790d0952b9d6_1a96893224e08b96e5d32e790d0952b9d6" kindref="member">m_submixes</ref>.back();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSubmix-&gt;setName(<sp/>soundSubmixName<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soundManager.<ref refid="classSoundManager_adcd65dcf480bcf28875ac4710b9fd31e_1adcd65dcf480bcf28875ac4710b9fd31e" kindref="member">m_pXAudio2</ref>-&gt;CreateSubmixVoice(<sp/>&amp;newSubmix-&gt;m_pSubmixVoice,<sp/>waveFormat-&gt;Format.nChannels,<sp/>waveFormat-&gt;Format.nSamplesPerSec,<sp/>0u,<sp/>0u,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>create<sp/>the<sp/>voice<sp/>sends<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSubmix-&gt;m_outputVoiceSendDesc<sp/>=<sp/>{0,<sp/>newSubmix-&gt;m_pSubmixVoice};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newSubmix-&gt;m_outputVoiceSends<sp/>=<sp/>{1,<sp/>&amp;newSubmix-&gt;m_outputVoiceSendDesc};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6.<sp/>Create<sp/>the<sp/>source<sp/>voice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>soundManager.<ref refid="classSoundManager_adcd65dcf480bcf28875ac4710b9fd31e_1adcd65dcf480bcf28875ac4710b9fd31e" kindref="member">m_pXAudio2</ref>-&gt;CreateSourceVoice(<sp/>&amp;m_pSourceVoice,<sp/>(WAVEFORMATEX*)waveFormat.get(),<sp/>sourceVoiceCreationFlags,<sp/>XAUDIO2_DEFAULT_FREQ_RATIO,<sp/>&amp;voiceCallback,<sp/>&amp;newSubmix-&gt;m_outputVoiceSends,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6.<sp/>Create<sp/>the<sp/>source<sp/>voice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>soundManager.<ref refid="classSoundManager_adcd65dcf480bcf28875ac4710b9fd31e_1adcd65dcf480bcf28875ac4710b9fd31e" kindref="member">m_pXAudio2</ref>-&gt;CreateSourceVoice(<sp/>&amp;m_pSourceVoice,<sp/>(WAVEFORMATEX*)waveFormat.get(),<sp/>sourceVoiceCreationFlags,<sp/>XAUDIO2_DEFAULT_FREQ_RATIO,<sp/>&amp;voiceCallback,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>steady<sp/>sample<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>waveFormat-&gt;Format.nSamplesPerSec<sp/>!=<sp/><ref refid="namespacewav_a2bb40914c2953ad0ff6333af159be8e9_1a2bb40914c2953ad0ff6333af159be8e9" kindref="member">wav::nSamplesPerSec</ref><sp/>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waveFormat-&gt;Format.nSamplesPerSec<sp/>=<sp/><ref refid="namespacewav_a2bb40914c2953ad0ff6333af159be8e9_1a2bb40914c2953ad0ff6333af159be8e9" kindref="member">wav::nSamplesPerSec</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>m_pSourceVoice-&gt;SetSourceSampleRate(<sp/><ref refid="namespacewav_a2bb40914c2953ad0ff6333af159be8e9_1a2bb40914c2953ad0ff6333af159be8e9" kindref="member">wav::nSamplesPerSec</ref><sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6.<sp/>submit<sp/>the<sp/>XAUDIO2_BUFFER<sp/>to<sp/>the<sp/>source<sp/>voice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>m_pSourceVoice-&gt;SubmitSourceBuffer(<sp/>m_pSound-&gt;m_pXaudioBuffer.get()<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classSoundManager_1_1Channel_add92a4f1a98fc8ee81732f3ff04bc51e_1add92a4f1a98fc8ee81732f3ff04bc51e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_1_1Channel_add92a4f1a98fc8ee81732f3ff04bc51e_1add92a4f1a98fc8ee81732f3ff04bc51e" kindref="member">SoundManager::Channel::playSound</ref>(<sp/><ref refid="classSound" kindref="compound">Sound</ref><sp/>*sound,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>volume<sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>m_pSound,<sp/></highlight><highlight class="stringliteral">&quot;Null<sp/>Sound!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>m_pSourceVoice,<sp/></highlight><highlight class="stringliteral">&quot;Null<sp/>Voice!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;<ref refid="classSound_ad09685bdd580fcef12897080e6e0219c_1ad09685bdd580fcef12897080e6e0219c" kindref="member">m_busyChannels</ref>.emplace_back(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/>m_pSourceVoice-&gt;SetVolume(<sp/>volume<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>m_pSourceVoice-&gt;Start(<sp/>0u<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="classSoundManager_1_1Channel_a6849d436e409966424b6c6ed899cc8a6_1a6849d436e409966424b6c6ed899cc8a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_1_1Channel_a6849d436e409966424b6c6ed899cc8a6_1a6849d436e409966424b6c6ed899cc8a6" kindref="member">SoundManager::Channel::stopSound</ref>()<sp/>cond_noex</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>m_pSound,<sp/></highlight><highlight class="stringliteral">&quot;Sound<sp/>was<sp/>not<sp/>initialized!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>m_pSourceVoice,<sp/></highlight><highlight class="stringliteral">&quot;Voice<sp/>was<sp/>not<sp/>set!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pSourceVoice-&gt;Stop();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pSourceVoice-&gt;FlushSourceBuffers();</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classSoundManager_1_1Channel_a6ffecb785dc031c585f2058fa62435e5_1a6ffecb785dc031c585f2058fa62435e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_1_1Channel_a6ffecb785dc031c585f2058fa62435e5_1a6ffecb785dc031c585f2058fa62435e5" kindref="member">SoundManager::Channel::rechannel</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSound" kindref="compound">Sound</ref><sp/>*pOldSound,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound" kindref="compound">Sound</ref><sp/>*pNewSound<sp/>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>pOldSound<sp/>==<sp/>pNewSound,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>mismatch!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pSound<sp/>=<sp/>pNewSound;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classSoundManager_1_1Channel_a12172872c5d842ec03398e6438564ea6_1a12172872c5d842ec03398e6438564ea6" refkind="member"><highlight class="normal"><ref refid="classSound" kindref="compound">Sound</ref>*<sp/><ref refid="classSoundManager_1_1Channel_a12172872c5d842ec03398e6438564ea6_1a12172872c5d842ec03398e6438564ea6" kindref="member">SoundManager::Channel::getSound</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>m_pSound,<sp/></highlight><highlight class="stringliteral">&quot;Sound<sp/>is<sp/>null!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pSound;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classSoundManager_af3dcc32423f79c6fd4b05c99fcb38c62_1af3dcc32423f79c6fd4b05c99fcb38c62" refkind="member"><highlight class="normal"><ref refid="classSoundManager" kindref="compound">SoundManager</ref>&amp;<sp/><ref refid="classSoundManager_af3dcc32423f79c6fd4b05c99fcb38c62_1af3dcc32423f79c6fd4b05c99fcb38c62" kindref="member">SoundManager::getInstance</ref>(<sp/>WAVEFORMATEXTENSIBLE<sp/>*format<sp/>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSoundManager" kindref="compound">SoundManager</ref><sp/>soundManager{format};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>soundManager;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classSoundManager_a5d5efe92a99635caca3823a1cabc8428_1a5d5efe92a99635caca3823a1cabc8428" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_a5d5efe92a99635caca3823a1cabc8428_1a5d5efe92a99635caca3823a1cabc8428" kindref="member">SoundManager::setMasterVolume</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>volume<sp/>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_a0155befc758a62ccfef8293bd1e1c63d_1a0155befc758a62ccfef8293bd1e1c63d" kindref="member">m_pMasterVoice</ref>-&gt;SetVolume(<sp/>volume<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="classSoundManager_a7ea6ac9903120a5875a63863387210af_1a7ea6ac9903120a5875a63863387210af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_a7ea6ac9903120a5875a63863387210af_1a7ea6ac9903120a5875a63863387210af" kindref="member">SoundManager::playChannelSound</ref>(<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/><ref refid="classSound" kindref="compound">Sound</ref><sp/>*sound,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>volume<sp/>)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>ul{<ref refid="classSoundManager_aec659fd70f9fc75d73ecff371a81cc30_1aec659fd70f9fc75d73ecff371a81cc30" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classSoundManager_af209e8e9233afa44d535db66dd2f921e_1af209e8e9233afa44d535db66dd2f921e" kindref="member">m_idleChannels</ref>.empty()<sp/>&amp;&amp;<sp/><ref refid="classSoundManager_af0a4bbdc43edf627464c153cc8d84b25_1af0a4bbdc43edf627464c153cc8d84b25" kindref="member">m_occupiedChannels</ref>.size()<sp/>&lt;<sp/><ref refid="classSoundManager_ad1372049f59b9ad5359e39b4c3b00b83_1ad1372049f59b9ad5359e39b4c3b00b83" kindref="member">s_nMaxAudioChannels</ref><sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;channel<sp/>=<sp/><ref refid="classSoundManager_af209e8e9233afa44d535db66dd2f921e_1af209e8e9233afa44d535db66dd2f921e" kindref="member">m_idleChannels</ref>.back();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel-&gt;setupChannel(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*sound<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSoundManager_af0a4bbdc43edf627464c153cc8d84b25_1af0a4bbdc43edf627464c153cc8d84b25" kindref="member">m_occupiedChannels</ref>.emplace_back(<sp/>std::move(<sp/>channel<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSoundManager_af209e8e9233afa44d535db66dd2f921e_1af209e8e9233afa44d535db66dd2f921e" kindref="member">m_idleChannels</ref>.pop_back();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSoundManager_af0a4bbdc43edf627464c153cc8d84b25_1af0a4bbdc43edf627464c153cc8d84b25" kindref="member">m_occupiedChannels</ref>.back()-&gt;playSound(<sp/>sound,<sp/>volume<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="classSoundManager_a76471ec78202494756e392fd848a03d5_1a76471ec78202494756e392fd848a03d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_a76471ec78202494756e392fd848a03d5_1a76471ec78202494756e392fd848a03d5" kindref="member">SoundManager::deactivateChannel</ref>(<sp/><ref refid="classSoundManager_1_1Channel" kindref="compound">Channel</ref><sp/>&amp;channel<sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lg{<ref refid="classSoundManager_aec659fd70f9fc75d73ecff371a81cc30_1aec659fd70f9fc75d73ecff371a81cc30" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>ptr/ref<sp/>to<sp/>container<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find_if(<sp/><ref refid="classSoundManager_af0a4bbdc43edf627464c153cc8d84b25_1af0a4bbdc43edf627464c153cc8d84b25" kindref="member">m_occupiedChannels</ref>.begin(),<sp/><ref refid="classSoundManager_af0a4bbdc43edf627464c153cc8d84b25_1af0a4bbdc43edf627464c153cc8d84b25" kindref="member">m_occupiedChannels</ref>.end(),</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;channel]<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Channel&gt;&amp;<sp/>cha<sp/>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>&amp;channel<sp/>==<sp/>cha.get();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>&amp;it<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>was<sp/>already<sp/>absent!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_af209e8e9233afa44d535db66dd2f921e_1af209e8e9233afa44d535db66dd2f921e" kindref="member">m_idleChannels</ref>.emplace_back(<sp/>std::move(<sp/>*it<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_af0a4bbdc43edf627464c153cc8d84b25_1af0a4bbdc43edf627464c153cc8d84b25" kindref="member">m_occupiedChannels</ref>.erase(<sp/>it<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>LibrarySoundReading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_XBOX<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>big<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccRIFF<sp/><sp/>&apos;RIFF&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccDATA<sp/><sp/>&apos;data&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccFMT<sp/><sp/><sp/>&apos;fmt<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccWAVE<sp/><sp/>&apos;WAVE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccXWMA<sp/><sp/>&apos;XWMA&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccDPDS<sp/><sp/>&apos;dpds&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>little<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="key__sound_8cpp_ab7fcb44ece61adb3354c39374fa16dcb_1ab7fcb44ece61adb3354c39374fa16dcb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccRIFF<sp/><sp/>&apos;FFIR&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="key__sound_8cpp_ad6d58b71922626c6252d3f5886140ffa_1ad6d58b71922626c6252d3f5886140ffa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccDATA<sp/><sp/>&apos;atad&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="key__sound_8cpp_a3b11bd848753dd06a2b6fdf5b40be196_1a3b11bd848753dd06a2b6fdf5b40be196" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccFMT<sp/><sp/><sp/>&apos;<sp/>tmf&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="key__sound_8cpp_a3a18d0138f07b42901388a89b8c26604_1a3a18d0138f07b42901388a89b8c26604" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccWAVE<sp/><sp/>&apos;EVAW&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="key__sound_8cpp_ad1c73a8f08bfaeb26e636983b3bbb8a1_1ad1c73a8f08bfaeb26e636983b3bbb8a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccXWMA<sp/><sp/>&apos;AMWX&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="key__sound_8cpp_a3dc9eaa34f1f519ce538460f1d11d9f7_1a3dc9eaa34f1f519ce538460f1d11d9f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fourccDPDS<sp/><sp/>&apos;sdpd&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="classSound_ac387272947ef28e7a64947fc8950a540_1ac387272947ef28e7a64947fc8950a540" refkind="member"><highlight class="normal">HRESULT<sp/><ref refid="classSound_ac387272947ef28e7a64947fc8950a540_1ac387272947ef28e7a64947fc8950a540" kindref="member">Sound::findChunk</ref>(<sp/>HANDLE<sp/>file,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>fourcc,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>&amp;chunkSize,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>&amp;chunkDataPosition<sp/>)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hr<sp/>=<sp/>S_OK;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>SetFilePointer(<sp/>file,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>FILE_BEGIN<sp/>)<sp/>==<sp/>INVALID_SET_FILE_POINTER<sp/>)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HRESULT_FROM_WIN32(<sp/>GetLastError()<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>chunkType;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>chunkDataSize;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>RIFFDataSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>fileType;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>bytesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>fileOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>hr<sp/>==<sp/>S_OK<sp/>)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ReadFile(<sp/>file,<sp/>&amp;chunkType,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>DWORD<sp/>),<sp/>&amp;bytesRead,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>HRESULT_FROM_WIN32(<sp/>GetLastError()<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ReadFile(<sp/>file,<sp/>&amp;chunkDataSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>DWORD<sp/>),<sp/>&amp;bytesRead,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>HRESULT_FROM_WIN32(<sp/>GetLastError()<sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>chunkType<sp/>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="key__sound_8cpp_ab7fcb44ece61adb3354c39374fa16dcb_1ab7fcb44ece61adb3354c39374fa16dcb" kindref="member">fourccRIFF</ref>:</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RIFFDataSize<sp/>=<sp/>chunkDataSize;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunkDataSize<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>0<sp/>==<sp/>ReadFile(<sp/>file,<sp/>&amp;fileType,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>DWORD<sp/>),<sp/>&amp;bytesRead,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>HRESULT_FROM_WIN32(<sp/>GetLastError()<sp/>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>SetFilePointer(<sp/>file</highlight><highlight class="comment">/*-V303*/</highlight><highlight class="normal">,<sp/>chunkDataSize,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>FILE_CURRENT<sp/>)<sp/>==<sp/>INVALID_SET_FILE_POINTER<sp/>)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HRESULT_FROM_WIN32(<sp/>GetLastError()<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOffset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>DWORD<sp/>)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>chunkType<sp/>==<sp/>fourcc<sp/>)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunkSize<sp/>=<sp/>chunkDataSize;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunkDataPosition<sp/>=<sp/>fileOffset;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_OK;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOffset<sp/>+=<sp/>chunkDataSize;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bytesRead<sp/>&gt;=<sp/>RIFFDataSize<sp/>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_FALSE;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_OK;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="classSound_a766823ef672cb6bf5cbd0681d834c3c0_1a766823ef672cb6bf5cbd0681d834c3c0" refkind="member"><highlight class="normal">HRESULT<sp/><ref refid="classSound_a766823ef672cb6bf5cbd0681d834c3c0_1a766823ef672cb6bf5cbd0681d834c3c0" kindref="member">Sound::readChunkData</ref>(<sp/>HANDLE<sp/>file,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>buffersize,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>bufferoffset<sp/>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hr<sp/>=<sp/>S_OK;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>SetFilePointer(<sp/>file</highlight><highlight class="comment">/*-V303*/</highlight><highlight class="normal">,<sp/>bufferoffset,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>FILE_BEGIN<sp/>)<sp/>==<sp/>INVALID_SET_FILE_POINTER<sp/>)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HRESULT_FROM_WIN32(<sp/>GetLastError()<sp/>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>bytesRead;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ReadFile(<sp/>file,<sp/>buffer,<sp/>buffersize,<sp/>&amp;bytesRead,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>HRESULT_FROM_WIN32(<sp/>GetLastError()<sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hr;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="classSound_a14ac6aede2a2992054c848975f8062b5_1a14ac6aede2a2992054c848975f8062b5" refkind="member"><highlight class="normal"><ref refid="classSound_a14ac6aede2a2992054c848975f8062b5_1a14ac6aede2a2992054c848975f8062b5" kindref="member">Sound::Sound</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*zsFilename,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;defaultName,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;defaultSubmixName<sp/>)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name{defaultName},</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>m_submixName{defaultSubmixName},</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>wave<sp/>format<sp/>and<sp/>audio<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pWaveFormat{std::make_unique&lt;WAVEFORMATEXTENSIBLE&gt;()},</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pXaudioBuffer{std::make_unique&lt;XAUDIO2_BUFFER&gt;()}</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>file<sp/>=<sp/>CreateFileW(<sp/><ref refid="namespaceutil_a6f14f660ccbdb1435f227700fa1dfd94_1a6f14f660ccbdb1435f227700fa1dfd94" kindref="member">util::s2ws</ref>(<sp/>zsFilename<sp/>).data(),<sp/>GENERIC_READ,<sp/>FILE_SHARE_READ,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>OPEN_EXISTING,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>file<sp/>==<sp/>INVALID_HANDLE_VALUE<sp/>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a06ad2606426e941f7509aeb2e14a3eaf_1a06ad2606426e941f7509aeb2e14a3eaf" kindref="member">ASSERT_IF_FAILED</ref>(<sp/>HRESULT_FROM_WIN32(<sp/>GetLastError()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>HRESULT<sp/>hres<sp/>=<sp/>SetFilePointer(<sp/>file</highlight><highlight class="comment">/*-V303*/</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>FILE_BEGIN<sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(DWORD)<sp/>hres<sp/>==<sp/>INVALID_SET_FILE_POINTER<sp/>)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>(<sp/>HRESULT_FROM_WIN32(<sp/>GetLastError()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>locate<sp/>the<sp/>&apos;RIFF&apos;<sp/>chunk<sp/>in<sp/>the<sp/>audio<sp/>file<sp/>and<sp/>check<sp/>the<sp/>file<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>chunkSize;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>chunkPosition;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classSound_ac387272947ef28e7a64947fc8950a540_1ac387272947ef28e7a64947fc8950a540" kindref="member">findChunk</ref>(<sp/>file,<sp/><ref refid="key__sound_8cpp_ab7fcb44ece61adb3354c39374fa16dcb_1ab7fcb44ece61adb3354c39374fa16dcb" kindref="member">fourccRIFF</ref>,<sp/>chunkSize,<sp/>chunkPosition<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>file<sp/>type<sp/>should<sp/>be<sp/>fourccWAVE<sp/>=<sp/>&apos;XWMA&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>fileType;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classSound_a766823ef672cb6bf5cbd0681d834c3c0_1a766823ef672cb6bf5cbd0681d834c3c0" kindref="member">readChunkData</ref>(<sp/>file,<sp/>&amp;fileType,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>DWORD,<sp/>chunkPosition<sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fileType<sp/>!=<sp/><ref refid="key__sound_8cpp_a3a18d0138f07b42901388a89b8c26604_1a3a18d0138f07b42901388a89b8c26604" kindref="member">fourccWAVE</ref><sp/>)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>Filetype<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fileType<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>discovered:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__debugbreak();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>locate<sp/>the<sp/>&apos;fmt&apos;<sp/>chunk<sp/>and<sp/>copy<sp/>its<sp/>contents<sp/>into<sp/>a<sp/>WAVEFORMATEXTENSIBLE<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classSound_ac387272947ef28e7a64947fc8950a540_1ac387272947ef28e7a64947fc8950a540" kindref="member">findChunk</ref>(<sp/>file,<sp/><ref refid="key__sound_8cpp_a3b11bd848753dd06a2b6fdf5b40be196_1a3b11bd848753dd06a2b6fdf5b40be196" kindref="member">fourccFMT</ref>,<sp/>chunkSize,<sp/>chunkPosition<sp/>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classSound_a766823ef672cb6bf5cbd0681d834c3c0_1a766823ef672cb6bf5cbd0681d834c3c0" kindref="member">readChunkData</ref>(<sp/>file,<sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>.get(),<sp/>chunkSize,<sp/>chunkPosition<sp/>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.nChannels<sp/>==<sp/><ref refid="namespacewav_abe188c42be0b0e76e1ceda2650ee9b3a_1abe188c42be0b0e76e1ceda2650ee9b3a" kindref="member">wav::nChannelsPerSound</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>amount<sp/>of<sp/>channels<sp/>per<sp/>sound!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.wFormatTag<sp/>==<sp/>WAVE_FORMAT_PCM,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>XPCM<sp/>format<sp/>allowed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.wBitsPerSample<sp/>==<sp/><ref refid="namespacewav_aef183314fb60d9b60c7b5e8859b08c61_1aef183314fb60d9b60c7b5e8859b08c61" kindref="member">wav::nBitsPerSample</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Wrong<sp/>bits<sp/>per<sp/>sample!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ASSERT(<sp/>m_pWaveFormat-&gt;Format.nSamplesPerSec<sp/>==<sp/>wav::nSamplesPerSec,<sp/>&quot;Wrong<sp/>number<sp/>of<sp/>samples<sp/>per<sp/>second!&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.cbSize<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>extra<sp/>Format<sp/>information<sp/>allowed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.nChannels<sp/>=<sp/><ref refid="namespacewav_abe188c42be0b0e76e1ceda2650ee9b3a_1abe188c42be0b0e76e1ceda2650ee9b3a" kindref="member">wav::nChannelsPerSound</ref>;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.nSamplesPerSec<sp/>=<sp/><ref refid="namespacewav_a2bb40914c2953ad0ff6333af159be8e9_1a2bb40914c2953ad0ff6333af159be8e9" kindref="member">wav::nSamplesPerSec</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.wBitsPerSample<sp/>=<sp/><ref refid="namespacewav_aef183314fb60d9b60c7b5e8859b08c61_1aef183314fb60d9b60c7b5e8859b08c61" kindref="member">wav::nBitsPerSample</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.nBlockAlign<sp/>=<sp/>(<ref refid="namespacewav_aef183314fb60d9b60c7b5e8859b08c61_1aef183314fb60d9b60c7b5e8859b08c61" kindref="member">wav::nBitsPerSample</ref><sp/>/<sp/>8)<sp/>*<sp/><ref refid="namespacewav_abe188c42be0b0e76e1ceda2650ee9b3a_1abe188c42be0b0e76e1ceda2650ee9b3a" kindref="member">wav::nChannelsPerSound</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.nAvgBytesPerSec<sp/>=<sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.nBlockAlign<sp/>*<sp/><ref refid="namespacewav_a2bb40914c2953ad0ff6333af159be8e9_1a2bb40914c2953ad0ff6333af159be8e9" kindref="member">wav::nSamplesPerSec</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.cbSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.wFormatTag<sp/>=<sp/>WAVE_FORMAT_PCM;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>locate<sp/>the<sp/>&apos;data&apos;<sp/>of<sp/>the<sp/>chunk<sp/>and<sp/>copy<sp/>its<sp/>contents<sp/>into<sp/>a<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classSound_ac387272947ef28e7a64947fc8950a540_1ac387272947ef28e7a64947fc8950a540" kindref="member">findChunk</ref>(<sp/>file,<sp/><ref refid="key__sound_8cpp_ad6d58b71922626c6252d3f5886140ffa_1ad6d58b71922626c6252d3f5886140ffa" kindref="member">fourccDATA</ref>,<sp/>chunkSize,<sp/>chunkPosition<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>chunkSize<sp/>&lt;&lt;<sp/>&apos;\n&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound_a69f0d170fc046263c8310e7faa395e74_1a69f0d170fc046263c8310e7faa395e74" kindref="member">m_pAudioData</ref><sp/>=<sp/>std::make_unique&lt;BYTE[]&gt;(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>chunkSize<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>hres<sp/>=<sp/><ref refid="classSound_a766823ef672cb6bf5cbd0681d834c3c0_1a766823ef672cb6bf5cbd0681d834c3c0" kindref="member">readChunkData</ref>(<sp/>file,<sp/><ref refid="classSound_a69f0d170fc046263c8310e7faa395e74_1a69f0d170fc046263c8310e7faa395e74" kindref="member">m_pAudioData</ref>.get(),<sp/>chunkSize,<sp/>chunkPosition<sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="os__utils_8h_a7027472bc9b182c0fea900713e4541e3_1a7027472bc9b182c0fea900713e4541e3" kindref="member">ASSERT_HRES_IF_FAILED</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4.<sp/>populate<sp/>the<sp/>XAUDIO2_BUFFER<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound_a683cc91ae131910996217112a025b084_1a683cc91ae131910996217112a025b084" kindref="member">m_pXaudioBuffer</ref>-&gt;AudioBytes<sp/>=<sp/>chunkSize;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>audio<sp/>buffer<sp/>in<sp/>Bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound_a683cc91ae131910996217112a025b084_1a683cc91ae131910996217112a025b084" kindref="member">m_pXaudioBuffer</ref>-&gt;pAudioData<sp/>=<sp/><ref refid="classSound_a69f0d170fc046263c8310e7faa395e74_1a69f0d170fc046263c8310e7faa395e74" kindref="member">m_pAudioData</ref>.get();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>containing<sp/>audio<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound_a683cc91ae131910996217112a025b084_1a683cc91ae131910996217112a025b084" kindref="member">m_pXaudioBuffer</ref>-&gt;Flags<sp/>=<sp/>XAUDIO2_END_OF_STREAM;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="classSound_ab627b166f7ca6d7cef78abba28f0947c_1ab627b166f7ca6d7cef78abba28f0947c" refkind="member"><highlight class="normal"><ref refid="classSound_a14ac6aede2a2992054c848975f8062b5_1a14ac6aede2a2992054c848975f8062b5" kindref="member">Sound::Sound</ref>(<sp/><ref refid="classSound" kindref="compound">Sound</ref><sp/>&amp;&amp;rhs<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name{std::move(<sp/>rhs.m_name<sp/>)},</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>m_submixName{std::move(<sp/>rhs.m_submixName<sp/>)}</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lock<sp/>the<sp/>rhs<sp/>mutex<sp/>before<sp/>we<sp/>copy/move<sp/>to<sp/>guard<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>ulr{rhs.m_mu,<sp/>std::defer_lock};</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>ull{m_mu,<sp/>std::defer_lock};</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock(<sp/>ull,<sp/>ulr<sp/>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pAudioData<sp/>=<sp/>std::move(<sp/>rhs.m_pAudioData<sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>m_busyChannels<sp/>=<sp/>std::move(<sp/>rhs.m_busyChannels<sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;channel<sp/>:<sp/>m_busyChannels<sp/>)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel-&gt;rechannel(<sp/>&amp;rhs,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_condVar.notify_all();</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="classSound_afc1c20cd01b2306b31362b12cb526ac2_1afc1c20cd01b2306b31362b12cb526ac2" refkind="member"><highlight class="normal"><ref refid="classSound" kindref="compound">Sound</ref>&amp;<sp/><ref refid="classSound_afc1c20cd01b2306b31362b12cb526ac2_1afc1c20cd01b2306b31362b12cb526ac2" kindref="member">Sound::operator=</ref>(<sp/><ref refid="classSound" kindref="compound">Sound</ref><sp/>&amp;&amp;rhs<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSound" kindref="compound">Sound</ref><sp/>tmp{std::move(<sp/>rhs<sp/>)};</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>tmp<sp/>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="classSound_aa5dbce029e55af68f2c135ca9b51e0a4_1aa5dbce029e55af68f2c135ca9b51e0a4" refkind="member"><highlight class="normal"><ref refid="classSound_aa5dbce029e55af68f2c135ca9b51e0a4_1aa5dbce029e55af68f2c135ca9b51e0a4" kindref="member">Sound::~Sound</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classSound_ad09685bdd580fcef12897080e6e0219c_1ad09685bdd580fcef12897080e6e0219c" kindref="member">m_busyChannels</ref>.empty()<sp/>)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>ul{<ref refid="classSound_a13942758c6ccf762d830daf2e5db2fc6_1a13942758c6ccf762d830daf2e5db2fc6" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;i<sp/>:<sp/><ref refid="classSound_ad09685bdd580fcef12897080e6e0219c_1ad09685bdd580fcef12897080e6e0219c" kindref="member">m_busyChannels</ref><sp/>)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;stopSound();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>those<sp/>channels<sp/>to<sp/>finish<sp/>playing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSound_a48edb3fd85b64943a27420d56c516c4c_1a48edb3fd85b64943a27420d56c516c4c" kindref="member">m_condVar</ref>.wait(<sp/>ul,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSound_ad09685bdd580fcef12897080e6e0219c_1ad09685bdd580fcef12897080e6e0219c" kindref="member">m_busyChannels</ref>.size()<sp/>==<sp/>0;<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="classSound_aae672cbd1cd79b249c3087b35d752e14_1aae672cbd1cd79b249c3087b35d752e14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classSound_aae672cbd1cd79b249c3087b35d752e14_1aae672cbd1cd79b249c3087b35d752e14" kindref="member">Sound::getDuration</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>nSamples<sp/>=<sp/>(<sp/>uint64_t(<ref refid="classSound_a683cc91ae131910996217112a025b084_1a683cc91ae131910996217112a025b084" kindref="member">m_pXaudioBuffer</ref>-&gt;AudioBytes)<sp/>*<sp/>8<sp/>)<sp/>/<sp/>(<sp/>uint64_t(<ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.wBitsPerSample)<sp/>*<sp/>uint64_t(<ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.nChannels)<sp/>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nSamples<sp/>/<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(<ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>-&gt;Format.nSamplesPerSec))<sp/>*<sp/>1000ull;</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="classSound_a0261bcce77a045e0b35f47f1dcb56b14_1a0261bcce77a045e0b35f47f1dcb56b14" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classSound_a0261bcce77a045e0b35f47f1dcb56b14_1a0261bcce77a045e0b35f47f1dcb56b14" kindref="member">Sound::getName</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSound_afa7a8ee25ff90df31a64249c3fb11699_1afa7a8ee25ff90df31a64249c3fb11699" kindref="member">m_name</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="classSound_a049651015596575bea8bff0e5ecf7e3c_1a049651015596575bea8bff0e5ecf7e3c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classSound_a049651015596575bea8bff0e5ecf7e3c_1a049651015596575bea8bff0e5ecf7e3c" kindref="member">Sound::getSubmixName</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSound_ae77349e3740f83530cedcc45d6133d03_1ae77349e3740f83530cedcc45d6133d03" kindref="member">m_submixName</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="classSound_a5f01178c19bf0948cfba57b3692d1808_1a5f01178c19bf0948cfba57b3692d1808" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSound_a5f01178c19bf0948cfba57b3692d1808_1a5f01178c19bf0948cfba57b3692d1808" kindref="member">Sound::play</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>volume<sp/>)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_af3dcc32423f79c6fd4b05c99fcb38c62_1af3dcc32423f79c6fd4b05c99fcb38c62" kindref="member">SoundManager::getInstance</ref>(<sp/><ref refid="classSound_ad0471d12fe02f7b968fdf088f64dd285_1ad0471d12fe02f7b968fdf088f64dd285" kindref="member">m_pWaveFormat</ref>.get()<sp/>).<ref refid="classSoundManager_a7ea6ac9903120a5875a63863387210af_1a7ea6ac9903120a5875a63863387210af" kindref="member">playChannelSound</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>volume<sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="classSound_a07c551ab56d2f83a861a2f7fd81b480a_1a07c551ab56d2f83a861a2f7fd81b480a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSound_a07c551ab56d2f83a861a2f7fd81b480a_1a07c551ab56d2f83a861a2f7fd81b480a" kindref="member">Sound::stop</ref>()</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lg{<ref refid="classSound_a13942758c6ccf762d830daf2e5db2fc6_1a13942758c6ccf762d830daf2e5db2fc6" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="classSound_ad09685bdd580fcef12897080e6e0219c_1ad09685bdd580fcef12897080e6e0219c" kindref="member">m_busyChannels</ref>.empty()<sp/>)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;channel<sp/>:<sp/><ref refid="classSound_ad09685bdd580fcef12897080e6e0219c_1ad09685bdd580fcef12897080e6e0219c" kindref="member">m_busyChannels</ref><sp/>)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel-&gt;stopSound();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(<sp/>m_submixName<sp/>!=<sp/>&quot;&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="classSoundManager_1_1Submix_ae4c7cb208375b6c2f7ac2611df851e44_1ae4c7cb208375b6c2f7ac2611df851e44" refkind="member"><highlight class="normal"><ref refid="classSoundManager_1_1Submix_ae4c7cb208375b6c2f7ac2611df851e44_1ae4c7cb208375b6c2f7ac2611df851e44" kindref="member">SoundManager::Submix::Submix</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name<sp/>)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name{name},</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outputVoiceSendDesc{0},</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outputVoiceSends{0}</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="classSoundManager_1_1Submix_a38e1ecc9f28325b9fb651de7fc620059_1a38e1ecc9f28325b9fb651de7fc620059" refkind="member"><highlight class="normal"><ref refid="classSoundManager_1_1Submix_a38e1ecc9f28325b9fb651de7fc620059_1a38e1ecc9f28325b9fb651de7fc620059" kindref="member">SoundManager::Submix::~Submix</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_pSubmixVoice<sp/>)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSubmixVoice-&gt;DestroyVoice();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSubmixVoice<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="classSoundManager_1_1Submix_a5b6a3783d0d9a6f778dabd7dbb106452_1a5b6a3783d0d9a6f778dabd7dbb106452" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classSoundManager_1_1Submix_a5b6a3783d0d9a6f778dabd7dbb106452_1a5b6a3783d0d9a6f778dabd7dbb106452" kindref="member">SoundManager::Submix::getName</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_name;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="classSoundManager_1_1Submix_a283167e84b415a1b784de6986e5f6c56_1a283167e84b415a1b784de6986e5f6c56" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_1_1Submix_a283167e84b415a1b784de6986e5f6c56_1a283167e84b415a1b784de6986e5f6c56" kindref="member">SoundManager::Submix::setName</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="classSoundManager_a5c103e799ebc0e13ae4e8c461bb956d0_1a5c103e799ebc0e13ae4e8c461bb956d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_a5c103e799ebc0e13ae4e8c461bb956d0_1a5c103e799ebc0e13ae4e8c461bb956d0" kindref="member">SoundManager::setSubmixVolume</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_1_1Submix" kindref="compound">Submix</ref><sp/>&amp;submix,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>volume<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lg{<ref refid="classSoundManager_aec659fd70f9fc75d73ecff371a81cc30_1aec659fd70f9fc75d73ecff371a81cc30" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;s<sp/>:<sp/><ref refid="classSoundManager_a96893224e08b96e5d32e790d0952b9d6_1a96893224e08b96e5d32e790d0952b9d6" kindref="member">m_submixes</ref><sp/>)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>s-&gt;getName()<sp/>==<sp/>submix.getName()<sp/>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;setVolume(<sp/>volume<sp/>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="classSoundManager_1_1Submix_a408d8937c046c185e9a78057f38df784_1a408d8937c046c185e9a78057f38df784" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSoundManager_1_1Submix_a408d8937c046c185e9a78057f38df784_1a408d8937c046c185e9a78057f38df784" kindref="member">SoundManager::Submix::setVolume</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>volume<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pSubmixVoice-&gt;SetVolume(<sp/>volume<sp/>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="classSoundManager_1_1Submix_afc2778a8bfe2367403a5c49f5cfa18ef_1afc2778a8bfe2367403a5c49f5cfa18ef" refkind="member"><highlight class="normal"><ref refid="classSoundManager_1_1Submix_ae4c7cb208375b6c2f7ac2611df851e44_1ae4c7cb208375b6c2f7ac2611df851e44" kindref="member">SoundManager::Submix::Submix</ref>(<sp/><ref refid="classSoundManager_1_1Submix" kindref="compound">Submix</ref><sp/>&amp;&amp;rhs<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name{std::move(<sp/>rhs.m_name<sp/>)},</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outputVoiceSendDesc{rhs.m_outputVoiceSendDesc},</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outputVoiceSends{rhs.m_outputVoiceSends},</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pSubmixVoice{rhs.m_pSubmixVoice}</highlight></codeline>
<codeline lineno="595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.m_pSubmixVoice<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="classSoundManager_1_1Submix_a5e2bbc328f21ea543eae3601cfb1afa3_1a5e2bbc328f21ea543eae3601cfb1afa3" refkind="member"><highlight class="normal"><ref refid="classSoundManager_1_1Submix" kindref="compound">SoundManager::Submix</ref>&amp;<sp/><ref refid="classSoundManager_1_1Submix_a5e2bbc328f21ea543eae3601cfb1afa3_1a5e2bbc328f21ea543eae3601cfb1afa3" kindref="member">SoundManager::Submix::operator=</ref>(<sp/><ref refid="classSoundManager_1_1Submix" kindref="compound">Submix</ref><sp/>&amp;&amp;rhs<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSoundManager_1_1Submix" kindref="compound">Submix</ref><sp/>tmp{std::move(<sp/>rhs<sp/>)};</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>tmp<sp/>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="classSoundPlayer_ac7107aecd54bdcfac29486487768ebc6_1ac7107aecd54bdcfac29486487768ebc6" refkind="member"><highlight class="normal"><ref refid="classSoundPlayer_ac7107aecd54bdcfac29486487768ebc6_1ac7107aecd54bdcfac29486487768ebc6" kindref="member">SoundPlayer::SoundPlayer</ref>()</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIListener" kindref="compound">IListener</ref>&lt;<ref refid="structUISoundEvent" kindref="compound">UISoundEvent</ref>&gt;()</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;reportingNexus<sp/>=<sp/><ref refid="classReportingNexus_a56fd3891e87dd3c034b8cfd7c84cfe16_1a56fd3891e87dd3c034b8cfd7c84cfe16" kindref="member">ReportingNexus::getInstance</ref>();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classIReporter" kindref="compound">IReporter&lt;UISoundEvent&gt;</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>reportingNexus<sp/>).addListener(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="classSoundPlayer_afe1b6add5422094301d81d4f0d36c066_1afe1b6add5422094301d81d4f0d36c066" refkind="member"><highlight class="normal"><ref refid="classSoundPlayer" kindref="compound">SoundPlayer</ref>&amp;<sp/><ref refid="classSoundPlayer_afe1b6add5422094301d81d4f0d36c066_1afe1b6add5422094301d81d4f0d36c066" kindref="member">SoundPlayer::getInstance</ref>()</highlight></codeline>
<codeline lineno="617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classSoundPlayer" kindref="compound">SoundPlayer</ref><sp/>soundPlayer{};</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>soundPlayer;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="classSoundPlayer_a29bf19ba13cb2e0f237f46e300d02d89_1a29bf19ba13cb2e0f237f46e300d02d89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSoundPlayer_a29bf19ba13cb2e0f237f46e300d02d89_1a29bf19ba13cb2e0f237f46e300d02d89" kindref="member">SoundPlayer::notify</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structUISoundEvent" kindref="compound">UISoundEvent</ref><sp/>&amp;event<sp/>)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>event.<ref refid="structUISoundEvent_a964bfc8559ea04e0ad9c6eb38eb02224_1a964bfc8559ea04e0ad9c6eb38eb02224" kindref="member">m_soundType</ref><sp/>)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structUISoundEvent_a324aa5866f6d08effd4864d11796047f_1a324aa5866f6d08effd4864d11796047faed4436f06acc902b7713999999d95d8d" kindref="member">UISoundEvent::Component_Hovered</ref>:</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;threadPool<sp/>=<sp/><ref refid="classThreadPoolJ_a0c0e12a8c7197ac7954aaae0a10a4809_1a0c0e12a8c7197ac7954aaae0a10a4809" kindref="member">ThreadPoolJ::getInstance</ref>();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lambda<sp/>=<sp/>[event]<sp/>(<sp/>nonstd::stop_token<sp/>st<sp/>)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSound" kindref="compound">Sound</ref><sp/>component_hovered_sound{<ref refid="structUISoundEvent_ac72d4f677eeed4b461cc1345533b8832_1ac72d4f677eeed4b461cc1345533b8832" kindref="member">UISoundEvent::getSoundPath</ref>(<sp/>event.<ref refid="structUISoundEvent_a964bfc8559ea04e0ad9c6eb38eb02224_1a964bfc8559ea04e0ad9c6eb38eb02224" kindref="member">m_soundType</ref><sp/>),<sp/></highlight><highlight class="stringliteral">&quot;component_hovered&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ui&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_hovered_sound.<ref refid="classSound_a5f01178c19bf0948cfba57b3692d1808_1a5f01178c19bf0948cfba57b3692d1808" kindref="member">play</ref>();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKeyTimer_a36bdadbd57baf7541c0b7c01ed688599_1a36bdadbd57baf7541c0b7c01ed688599" kindref="member">SleepTimer::sleepFor</ref>(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>component_hovered_sound.getDuration()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threadPool.enqueue(<sp/>lambda<sp/>);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="structUISoundEvent_a324aa5866f6d08effd4864d11796047f_1a324aa5866f6d08effd4864d11796047fafbf07ec633d0aa76e7cd7378c97a1fc4" kindref="member">UISoundEvent::Component_Unhovered</ref>:</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/key_sound.cpp"/>
  </compounddef>
</doxygen>
