<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structGeometry" kind="struct" language="C++" prot="public">
    <compoundname>Geometry</compoundname>
    <includes refid="geometry_8h" local="no">geometry.h</includes>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structGeometry_a3442ce56732507eed4e375c3d0fbf269_1a3442ce56732507eed4e375c3d0fbf269" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structTriangleMesh" kindref="compound">TriangleMesh</ref></type>
        <definition>TriangleMesh Geometry::makeLine</definition>
        <argsstring>(const float length=1.0f/2.0f, std::optional&lt; ver::VertexInputLayout &gt; layout={})</argsstring>
        <name>makeLine</name>
        <qualifiedname>Geometry::makeLine</qualifiedname>
        <param>
          <type>const float</type>
          <declname>length</declname>
          <defval>1.0f/2.0f</defval>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classver_1_1VertexInputLayout" kindref="compound">ver::VertexInputLayout</ref> &gt;</type>
          <declname>layout</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry.h" line="10" column="21" bodyfile="src/geometry.cpp" bodystart="13" bodyend="35"/>
        <referencedby refid="classLine_ab4004be2273185c41037d4dd14e02990_1ab4004be2273185c41037d4dd14e02990" compoundref="line_8cpp" startline="22" endline="105">Line::Line</referencedby>
      </memberdef>
      <memberdef kind="function" id="structGeometry_ad6a2e76395426ee4014b46795ea25eea_1ad6a2e76395426ee4014b46795ea25eea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structTriangleMesh" kindref="compound">TriangleMesh</ref></type>
        <definition>TriangleMesh Geometry::makeCube</definition>
        <argsstring>(std::optional&lt; ver::VertexInputLayout &gt; layout={}, const float side=1.0f/2.0f)</argsstring>
        <name>makeCube</name>
        <qualifiedname>Geometry::makeCube</qualifiedname>
        <param>
          <type>std::optional&lt; <ref refid="classver_1_1VertexInputLayout" kindref="compound">ver::VertexInputLayout</ref> &gt;</type>
          <declname>layout</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>side</declname>
          <defval>1.0f/2.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry.h" line="11" column="21" bodyfile="src/geometry.cpp" bodystart="37" bodyend="70"/>
        <referencedby refid="classren_1_1SkyPass_a1b9881827b6ffe6063f3c40e3689da6d_1a1b9881827b6ffe6063f3c40e3689da6d" compoundref="sky__pass_8cpp" startline="31" endline="71">ren::SkyPass::SkyPass</referencedby>
      </memberdef>
      <memberdef kind="function" id="structGeometry_a6a03748c43a90b74e22f48de60c1e706_1a6a03748c43a90b74e22f48de60c1e706" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structTriangleMesh" kindref="compound">TriangleMesh</ref></type>
        <definition>TriangleMesh Geometry::makeCubeIndependentFaces</definition>
        <argsstring>(ver::VertexInputLayout layout, const float side=1.0f/2.0f)</argsstring>
        <name>makeCubeIndependentFaces</name>
        <qualifiedname>Geometry::makeCubeIndependentFaces</qualifiedname>
        <param>
          <type><ref refid="classver_1_1VertexInputLayout" kindref="compound">ver::VertexInputLayout</ref></type>
          <declname>layout</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>side</declname>
          <defval>1.0f/2.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry.h" line="12" column="21" bodyfile="src/geometry.cpp" bodystart="72" bodyend="115"/>
        <referencedby refid="structGeometry_a86cd2ba34214c359643cfb2009b60acd_1a86cd2ba34214c359643cfb2009b60acd" compoundref="geometry_8cpp" startline="117" endline="154">makeCubeIndependentFacesTextured</referencedby>
      </memberdef>
      <memberdef kind="function" id="structGeometry_a86cd2ba34214c359643cfb2009b60acd_1a86cd2ba34214c359643cfb2009b60acd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structTriangleMesh" kindref="compound">TriangleMesh</ref></type>
        <definition>TriangleMesh Geometry::makeCubeIndependentFacesTextured</definition>
        <argsstring>()</argsstring>
        <name>makeCubeIndependentFacesTextured</name>
        <qualifiedname>Geometry::makeCubeIndependentFacesTextured</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry.h" line="13" column="21" bodyfile="src/geometry.cpp" bodystart="117" bodyend="154"/>
        <referencedby refid="classCube_af0fe61f07cbc70de782950bac056988b_1af0fe61f07cbc70de782950bac056988b" compoundref="cube_8cpp" startline="23" endline="194">Cube::Cube</referencedby>
      </memberdef>
      <memberdef kind="function" id="structGeometry_afafcbc076c42fa8fc3fa44592e755385_1afafcbc076c42fa8fc3fa44592e755385" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structTriangleMesh" kindref="compound">TriangleMesh</ref></type>
        <definition>TriangleMesh Geometry::makeSphereTesselated</definition>
        <argsstring>(std::optional&lt; ver::VertexInputLayout &gt; layout=std::nullopt, const unsigned nLateralDivs=12, const unsigned nLongitudinalDivs=24, const float radius=1.0f)</argsstring>
        <name>makeSphereTesselated</name>
        <qualifiedname>Geometry::makeSphereTesselated</qualifiedname>
        <param>
          <type>std::optional&lt; <ref refid="classver_1_1VertexInputLayout" kindref="compound">ver::VertexInputLayout</ref> &gt;</type>
          <declname>layout</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>nLateralDivs</declname>
          <defval>12</defval>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>nLongitudinalDivs</declname>
          <defval>24</defval>
        </param>
        <param>
          <type>const float</type>
          <declname>radius</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry.h" line="14" column="21" bodyfile="src/geometry.cpp" bodystart="156" bodyend="252"/>
        <referencedby refid="classren_1_1SkyPass_a1b9881827b6ffe6063f3c40e3689da6d_1a1b9881827b6ffe6063f3c40e3689da6d" compoundref="sky__pass_8cpp" startline="31" endline="71">ren::SkyPass::SkyPass</referencedby>
        <referencedby refid="classSphere_a80bdf896453fbb509c1e6170e0022c29_1a80bdf896453fbb509c1e6170e0022c29" compoundref="sphere_8cpp" startline="18" endline="72">Sphere::Sphere</referencedby>
      </memberdef>
      <memberdef kind="function" id="structGeometry_a90c5449438c31aae13d7cdfbaa678c74_1a90c5449438c31aae13d7cdfbaa678c74" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structTriangleMesh" kindref="compound">TriangleMesh</ref></type>
        <definition>TriangleMesh Geometry::makePlanarGrid</definition>
        <argsstring>(const int length=2, const int width=2, int nDivisionsX=1, int nDivisionsY=1)</argsstring>
        <name>makePlanarGrid</name>
        <qualifiedname>Geometry::makePlanarGrid</qualifiedname>
        <param>
          <type>const int</type>
          <declname>length</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>width</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nDivisionsX</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nDivisionsY</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>nDivisionsX are length divisions </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry.h" line="16" column="21" bodyfile="src/geometry.cpp" bodystart="254" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="structGeometry_a18d0b1f6bcbc3f36c2dec3315a04c220_1a18d0b1f6bcbc3f36c2dec3315a04c220" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structTriangleMesh" kindref="compound">TriangleMesh</ref></type>
        <definition>TriangleMesh Geometry::makePlanarGridTextured</definition>
        <argsstring>(const int length=2, const int width=2, int nDivisionsX=1, int nDivisionsY=1)</argsstring>
        <name>makePlanarGridTextured</name>
        <qualifiedname>Geometry::makePlanarGridTextured</qualifiedname>
        <param>
          <type>const int</type>
          <declname>length</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>width</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nDivisionsX</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nDivisionsY</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry.h" line="17" column="21" bodyfile="src/geometry.cpp" bodystart="324" bodyend="402"/>
        <referencedby refid="classPlane_a70e7a5971d34e1130740e843a6a18896_1a70e7a5971d34e1130740e843a6a18896" compoundref="plane_8cpp" startline="23" endline="193">Plane::Plane</referencedby>
        <referencedby refid="classTerrain_af5a4ec6ff724b557052dd12be7f0de0c_1af5a4ec6ff724b557052dd12be7f0de0c" compoundref="terrain_8cpp" startline="24" endline="158">Terrain::Terrain</referencedby>
      </memberdef>
      <memberdef kind="function" id="structGeometry_a79e26ca18bc0353a8c700025cde4fb73_1a79e26ca18bc0353a8c700025cde4fb73" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structTriangleMesh" kindref="compound">TriangleMesh</ref></type>
        <definition>TriangleMesh Geometry::makePlanarGridTexturedFromHeighmap</definition>
        <argsstring>(const std::string &amp;filename, const int normalizeAmount=4, const int terrainAreaUnitMultiplier=10, const int length=2, const int width=2, int nDivisionsX=1, int nDivisionsY=1)</argsstring>
        <name>makePlanarGridTexturedFromHeighmap</name>
        <qualifiedname>Geometry::makePlanarGridTexturedFromHeighmap</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>normalizeAmount</declname>
          <defval>4</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>terrainAreaUnitMultiplier</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>length</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>const int</type>
          <declname>width</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nDivisionsX</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nDivisionsY</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>engine unit is cm, terrain has to be relatively large without consuming a vast amount of memory with indices and vertices, so we multiply its area by <computeroutput>terrainAreaUnitMultiplier</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry.h" line="19" column="21" bodyfile="src/geometry.cpp" bodystart="404" bodyend="510"/>
        <referencedby refid="classTerrain_af5a4ec6ff724b557052dd12be7f0de0c_1af5a4ec6ff724b557052dd12be7f0de0c" compoundref="terrain_8cpp" startline="24" endline="158">Terrain::Terrain</referencedby>
      </memberdef>
      <memberdef kind="function" id="structGeometry_a026f26f5b340b8ded93d710b9ae82f47_1a026f26f5b340b8ded93d710b9ae82f47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structTriangleMesh" kindref="compound">TriangleMesh</ref></type>
        <definition>TriangleMesh Geometry::makeCameraFrustum</definition>
        <argsstring>(const float width, const float height, const float nearZ, const float farZ)</argsstring>
        <name>makeCameraFrustum</name>
        <qualifiedname>Geometry::makeCameraFrustum</qualifiedname>
        <param>
          <type>const float</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>nearZ</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>farZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry.h" line="20" column="21" bodyfile="src/geometry.cpp" bodystart="559" bodyend="611"/>
        <referencedby refid="classCameraFrustum_a73a48e8fbde4b02b50e32746b50e03b8_1a73a48e8fbde4b02b50e32746b50e03b8" compoundref="camera__frustum_8cpp" startline="17" endline="82">CameraFrustum::CameraFrustum</referencedby>
        <referencedby refid="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" compoundref="camera_8cpp" startline="449" endline="456">Camera::updateCameraFrustum</referencedby>
      </memberdef>
      <memberdef kind="function" id="structGeometry_a26b5674a1de8475cb8735a0a622cfe45_1a26b5674a1de8475cb8735a0a622cfe45" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structTriangleMesh" kindref="compound">TriangleMesh</ref></type>
        <definition>TriangleMesh Geometry::makeCameraWidget</definition>
        <argsstring>()</argsstring>
        <name>makeCameraWidget</name>
        <qualifiedname>Geometry::makeCameraWidget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/geometry.h" line="21" column="21" bodyfile="src/geometry.cpp" bodystart="512" bodyend="557"/>
        <referencedby refid="classCameraWidget_a0c41231fcab87a5a4aeb57d87aecb55e_1a0c41231fcab87a5a4aeb57d87aecb55e" compoundref="camera__widget_8cpp" startline="17" endline="63">CameraWidget::CameraWidget</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="inc/geometry.h" line="8" column="1" bodyfile="inc/geometry.h" bodystart="9" bodyend="22"/>
    <listofallmembers>
      <member refid="structGeometry_a026f26f5b340b8ded93d710b9ae82f47_1a026f26f5b340b8ded93d710b9ae82f47" prot="public" virt="non-virtual"><scope>Geometry</scope><name>makeCameraFrustum</name></member>
      <member refid="structGeometry_a26b5674a1de8475cb8735a0a622cfe45_1a26b5674a1de8475cb8735a0a622cfe45" prot="public" virt="non-virtual"><scope>Geometry</scope><name>makeCameraWidget</name></member>
      <member refid="structGeometry_ad6a2e76395426ee4014b46795ea25eea_1ad6a2e76395426ee4014b46795ea25eea" prot="public" virt="non-virtual"><scope>Geometry</scope><name>makeCube</name></member>
      <member refid="structGeometry_a6a03748c43a90b74e22f48de60c1e706_1a6a03748c43a90b74e22f48de60c1e706" prot="public" virt="non-virtual"><scope>Geometry</scope><name>makeCubeIndependentFaces</name></member>
      <member refid="structGeometry_a86cd2ba34214c359643cfb2009b60acd_1a86cd2ba34214c359643cfb2009b60acd" prot="public" virt="non-virtual"><scope>Geometry</scope><name>makeCubeIndependentFacesTextured</name></member>
      <member refid="structGeometry_a3442ce56732507eed4e375c3d0fbf269_1a3442ce56732507eed4e375c3d0fbf269" prot="public" virt="non-virtual"><scope>Geometry</scope><name>makeLine</name></member>
      <member refid="structGeometry_a90c5449438c31aae13d7cdfbaa678c74_1a90c5449438c31aae13d7cdfbaa678c74" prot="public" virt="non-virtual"><scope>Geometry</scope><name>makePlanarGrid</name></member>
      <member refid="structGeometry_a18d0b1f6bcbc3f36c2dec3315a04c220_1a18d0b1f6bcbc3f36c2dec3315a04c220" prot="public" virt="non-virtual"><scope>Geometry</scope><name>makePlanarGridTextured</name></member>
      <member refid="structGeometry_a79e26ca18bc0353a8c700025cde4fb73_1a79e26ca18bc0353a8c700025cde4fb73" prot="public" virt="non-virtual"><scope>Geometry</scope><name>makePlanarGridTexturedFromHeighmap</name></member>
      <member refid="structGeometry_afafcbc076c42fa8fc3fa44592e755385_1afafcbc076c42fa8fc3fa44592e755385" prot="public" virt="non-virtual"><scope>Geometry</scope><name>makeSphereTesselated</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
