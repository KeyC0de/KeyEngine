<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="dynamic__constant__buffer_8h" kind="file" language="C++">
    <compoundname>dynamic_constant_buffer.h</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">DirectXMath.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">memory</includes>
    <includes local="no">optional</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes refid="assertions__console_8h" local="yes">assertions_console.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includedby refid="constant__buffer__ex_8h" local="yes">inc/constant_buffer_ex.h</includedby>
    <includedby refid="transform__vscb_8h" local="yes">inc/transform_vscb.h</includedby>
    <includedby refid="dynamic__constant__buffer_8cpp" local="yes">src/dynamic_constant_buffer.cpp</includedby>
    <includedby refid="imgui__visitors_8cpp" local="yes">src/imgui_visitors.cpp</includedby>
    <includedby refid="line_8cpp" local="yes">src/line.cpp</includedby>
    <includedby refid="renderer_8cpp" local="yes">src/renderer.cpp</includedby>
    <includedby refid="testing_8cpp" local="yes">src/testing.cpp</includedby>
    <incdepgraph>
      <node id="9">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>inc/dynamic_constant_buffer.h</label>
        <link refid="dynamic__constant__buffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>DirectXMath.h</label>
      </node>
      <node id="18">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>bitset</label>
      </node>
      <node id="2">
        <label>cassert</label>
      </node>
      <node id="16">
        <label>cinttypes</label>
      </node>
      <node id="15">
        <label>cstddef</label>
      </node>
      <node id="22">
        <label>execution</label>
      </node>
      <node id="17">
        <label>future</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="20">
        <label>iterator</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="19">
        <label>numeric</label>
      </node>
      <node id="6">
        <label>optional</label>
      </node>
      <node id="21">
        <label>regex</label>
      </node>
      <node id="13">
        <label>set</label>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="24">
        <label>type_traits</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17">
        <label>inc/camera_frustum.h</label>
        <link refid="camera__frustum_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>inc/camera_widget.h</label>
        <link refid="camera__widget_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>inc/constant_buffer_ex.h</label>
        <link refid="constant__buffer__ex_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>inc/cube.h</label>
        <link refid="cube_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>inc/dynamic_constant_buffer.h</label>
        <link refid="dynamic__constant__buffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>inc/game.h</label>
        <link refid="game_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>inc/horizontal_blur_pass.h</label>
        <link refid="horizontal__blur__pass_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>inc/line.h</label>
        <link refid="line_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>inc/mesh.h</label>
        <link refid="mesh_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>inc/plane.h</label>
        <link refid="plane_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>inc/sphere.h</label>
        <link refid="sphere_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>inc/terrain.h</label>
        <link refid="terrain_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>inc/transform_vscb.h</label>
        <link refid="transform__vscb_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>inc/vertical_blur_pass.h</label>
        <link refid="vertical__blur__pass_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>src/MODEL.CPP</label>
        <link refid="MODEL_8CPP"/>
      </node>
      <node id="18">
        <label>src/camera.cpp</label>
        <link refid="camera_8cpp"/>
      </node>
      <node id="19">
        <label>src/camera_frustum.cpp</label>
        <link refid="camera__frustum_8cpp"/>
      </node>
      <node id="21">
        <label>src/camera_widget.cpp</label>
        <link refid="camera__widget_8cpp"/>
      </node>
      <node id="8">
        <label>src/constant_buffer_ex.cpp</label>
        <link refid="constant__buffer__ex_8cpp"/>
      </node>
      <node id="9">
        <label>src/cube.cpp</label>
        <link refid="cube_8cpp"/>
      </node>
      <node id="40">
        <label>src/dynamic_constant_buffer.cpp</label>
        <link refid="dynamic__constant__buffer_8cpp"/>
      </node>
      <node id="23">
        <label>src/game.cpp</label>
        <link refid="game_8cpp"/>
      </node>
      <node id="4">
        <label>src/horizontal_blur_pass.cpp</label>
        <link refid="horizontal__blur__pass_8cpp"/>
      </node>
      <node id="32">
        <label>src/imgui_visitors.cpp</label>
        <link refid="imgui__visitors_8cpp"/>
      </node>
      <node id="33">
        <label>src/job.cpp</label>
        <link refid="job_8cpp"/>
      </node>
      <node id="27">
        <label>src/light_source.cpp</label>
        <link refid="light__source_8cpp"/>
      </node>
      <node id="10">
        <label>src/line.cpp</label>
        <link refid="line_8cpp"/>
      </node>
      <node id="30">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="34">
        <label>src/material.cpp</label>
        <link refid="material_8cpp"/>
      </node>
      <node id="11">
        <label>src/material_loader.cpp</label>
        <link refid="material__loader_8cpp"/>
      </node>
      <node id="35">
        <label>src/mesh.cpp</label>
        <link refid="mesh_8cpp"/>
      </node>
      <node id="36">
        <label>src/node.cpp</label>
        <link refid="node_8cpp"/>
      </node>
      <node id="12">
        <label>src/plane.cpp</label>
        <link refid="plane_8cpp"/>
      </node>
      <node id="5">
        <label>src/renderer.cpp</label>
        <link refid="renderer_8cpp"/>
      </node>
      <node id="13">
        <label>src/sphere.cpp</label>
        <link refid="sphere_8cpp"/>
      </node>
      <node id="14">
        <label>src/terrain.cpp</label>
        <link refid="terrain_8cpp"/>
      </node>
      <node id="37">
        <label>src/testing.cpp</label>
        <link refid="testing_8cpp"/>
      </node>
      <node id="38">
        <label>src/transform_vscb.cpp</label>
        <link refid="transform__vscb_8cpp"/>
      </node>
      <node id="39">
        <label>src/ui_component.cpp</label>
        <link refid="ui__component_8cpp"/>
      </node>
      <node id="7">
        <label>src/vertical_blur_pass.cpp</label>
        <link refid="vertical__blur__pass_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcon_1_1ElementProperties" prot="public">con::ElementProperties</innerclass>
    <innerclass refid="structcon_1_1ElementProperties_3_01Float_01_4" prot="public">con::ElementProperties&lt; Float &gt;</innerclass>
    <innerclass refid="structcon_1_1ElementProperties_3_01Float2_01_4" prot="public">con::ElementProperties&lt; Float2 &gt;</innerclass>
    <innerclass refid="structcon_1_1ElementProperties_3_01Float3_01_4" prot="public">con::ElementProperties&lt; Float3 &gt;</innerclass>
    <innerclass refid="structcon_1_1ElementProperties_3_01Float4_01_4" prot="public">con::ElementProperties&lt; Float4 &gt;</innerclass>
    <innerclass refid="structcon_1_1ElementProperties_3_01Matrix_01_4" prot="public">con::ElementProperties&lt; Matrix &gt;</innerclass>
    <innerclass refid="structcon_1_1ElementProperties_3_01Bool_01_4" prot="public">con::ElementProperties&lt; Bool &gt;</innerclass>
    <innerclass refid="structcon_1_1ElementProperties_3_01Integer_01_4" prot="public">con::ElementProperties&lt; Integer &gt;</innerclass>
    <innerclass refid="structcon_1_1ReverseMap" prot="public">con::ReverseMap</innerclass>
    <innerclass refid="classcon_1_1CBElement" prot="public">con::CBElement</innerclass>
    <innerclass refid="structcon_1_1CBElement_1_1IExtraData" prot="private">con::CBElement::IExtraData</innerclass>
    <innerclass refid="classcon_1_1CBLayout" prot="public">con::CBLayout</innerclass>
    <innerclass refid="classcon_1_1RawLayout" prot="public">con::RawLayout</innerclass>
    <innerclass refid="classcon_1_1CookedLayout" prot="public">con::CookedLayout</innerclass>
    <innerclass refid="classcon_1_1CBElementConstView" prot="public">con::CBElementConstView</innerclass>
    <innerclass refid="classcon_1_1CBElementConstView_1_1Ptr" prot="public">con::CBElementConstView::Ptr</innerclass>
    <innerclass refid="classcon_1_1CBElementView" prot="public">con::CBElementView</innerclass>
    <innerclass refid="classcon_1_1CBElementView_1_1Ptr" prot="public">con::CBElementView::Ptr</innerclass>
    <innerclass refid="classcon_1_1LayoutMap" prot="public">con::LayoutMap</innerclass>
    <innerclass refid="classcon_1_1CBuffer" prot="public">con::CBuffer</innerclass>
    <innernamespace refid="namespacecon">con</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="dynamic__constant__buffer_8h_a36024b6e30a67d227f4a2c898167f20b_1a36024b6e30a67d227f4a2c898167f20b" prot="public" static="no">
        <name>CB_LEAF_TYPES</name>
        <initializer>	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Float ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Float2 ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Float3 ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Float4 ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Matrix ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Bool ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Integer )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="16" column="9" bodyfile="inc/dynamic_constant_buffer.h" bodystart="16" bodyend="23"/>
        <referencedby refid="classcon_1_1CBElement_a63af17d93b614366c28d6369e4300649_1a63af17d93b614366c28d6369e4300649" compoundref="dynamic__constant__buffer_8cpp" startline="28" endline="43">con::CBElement::calcSignature</referencedby>
        <referencedby refid="classcon_1_1CBElement_ad1c5e26a1f0424cc00b81c4a0860f61b_1ad1c5e26a1f0424cc00b81c4a0860f61b" compoundref="dynamic__constant__buffer_8cpp" startline="166" endline="184">con::CBElement::commit</referencedby>
        <referencedby refid="classcon_1_1CBElement_a41e7f4ce7d974d6ebe38532ba6358ef4_1a41e7f4ce7d974d6ebe38532ba6358ef4" compoundref="dynamic__constant__buffer_8h" startline="206" endline="220">con::CBElement::fetch</referencedby>
        <referencedby refid="classcon_1_1CBElement_a5f530e1452487417567ea1bbdb28c07e_1a5f530e1452487417567ea1bbdb28c07e" compoundref="dynamic__constant__buffer_8cpp" startline="93" endline="116">con::CBElement::getOffsetEnd</referencedby>
      </memberdef>
      <memberdef kind="define" id="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" prot="public" static="no">
        <name>X</name>
        <param><defname>el</defname></param>
        <initializer>el,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="34" column="9" bodyfile="inc/dynamic_constant_buffer.h" bodystart="34" bodyend="-1"/>
        <referencedby refid="classPerlinNoise_afdfbe32029dca3ef7f16e80e5cc29c48_1afdfbe32029dca3ef7f16e80e5cc29c48" compoundref="perlin__noise_8cpp" startline="31" endline="70">PerlinNoise::noise</referencedby>
      </memberdef>
      <memberdef kind="define" id="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" prot="public" static="no">
        <name>X</name>
        <param><defname>el</defname></param>
        <initializer>static_assert( ElementProperties&lt;el&gt;::valid, &quot;Missing map implementation for &quot; #el );</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="113" column="9" bodyfile="inc/dynamic_constant_buffer.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" prot="public" static="no">
        <name>X</name>
        <param><defname>el</defname></param>
        <initializer>	template&lt;&gt; \
	struct ReverseMap&lt;typename ElementProperties&lt;el&gt;::CPUType&gt; \
	{ \
		static constexpr ElementType type = el; \
		static constexpr bool valid = true; \
	};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="124" column="9" bodyfile="inc/dynamic_constant_buffer.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" prot="public" static="no">
        <name>X</name>
        <param><defname>el</defname></param>
        <initializer>	case el: \
	<ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>( typeid( ElementProperties&lt;el&gt;::CPUType ) == typeid( T ), std::string{&quot;Error: GPU Type &quot;s + std::string{typeid( T ).name()} + &quot; used with mapped Type &quot;s + std::string{<ref refid="utils__global_8h_ae523e66c2a1ec5e7283f878cfaf99d58_1ae523e66c2a1ec5e7283f878cfaf99d58" kindref="member">ENUM_STR</ref>( el )}}.c_str() ); \
	return *m_offset;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="211" column="9" bodyfile="inc/dynamic_constant_buffer.h" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DirectXMath.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assertions__console_8h" kindref="compound">assertions_console.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="utils_8h" kindref="compound">utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>master<sp/>list<sp/>of<sp/>leaf<sp/>types<sp/>that<sp/>generates<sp/>enum<sp/>elements<sp/>and<sp/>various<sp/>switches<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>undefine<sp/>it<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file<sp/>so<sp/>it<sp/>doesn&apos;t<sp/>pollute<sp/>anything<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="dynamic__constant__buffer_8h_a36024b6e30a67d227f4a2c898167f20b_1a36024b6e30a67d227f4a2c898167f20b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CB_LEAF_TYPES<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Float<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Float2<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Float3<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Float4<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Matrix<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Bool<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Integer<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="namespacecon" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecon" kindref="compound">con</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceDirectX" kindref="compound">dx</ref><sp/>=<sp/><ref refid="namespaceDirectX" kindref="compound">DirectX</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5" kindref="member">ElementType</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34" refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X(<sp/>el<sp/>)<sp/>el,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dynamic__constant__buffer_8h_a36024b6e30a67d227f4a2c898167f20b_1a36024b6e30a67d227f4a2c898167f20b" kindref="member">CB_LEAF_TYPES</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5aa75d3cc2c3da26872d3e1377c2c3f45f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5aa75d3cc2c3da26872d3e1377c2c3f45f" kindref="member">Struct</ref>,</highlight></codeline>
<codeline lineno="38" refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">Array</ref>,</highlight></codeline>
<codeline lineno="39" refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5aa0f2a80cc2e22505f9ff4d7920dd6ec6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5aa0f2a80cc2e22505f9ff4d7920dd6ec6" kindref="member">Empty</ref>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>map<sp/>of<sp/>attributes<sp/>of<sp/>each<sp/>leaf<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ElementType<sp/>elem&gt;</highlight></codeline>
<codeline lineno="44" refid="structcon_1_1ElementProperties" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties" kindref="compound">ElementProperties</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46" refid="structcon_1_1ElementProperties_a5a7b976410c2b1c4076f3e4090f9100c_1a5a7b976410c2b1c4076f3e4090f9100c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcon_1_1ElementProperties_a5a7b976410c2b1c4076f3e4090f9100c_1a5a7b976410c2b1c4076f3e4090f9100c" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="50" refid="structcon_1_1ElementProperties_3_01Float_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Float&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52" refid="structcon_1_1ElementProperties_3_01Float_01_4_a149a2e62c51c7fa971661e5aef3fce5a_1a149a2e62c51c7fa971661e5aef3fce5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties_3_01Float_01_4_a149a2e62c51c7fa971661e5aef3fce5a_1a149a2e62c51c7fa971661e5aef3fce5a" kindref="member">CPUType</ref><sp/>=<sp/>float;<sp/></highlight><highlight class="comment">//<sp/>type<sp/>used<sp/>in<sp/>the<sp/>CPU<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structcon_1_1ElementProperties_3_01Float_01_4_a4309924c1bd9dbf340d82a1b6459e130_1a4309924c1bd9dbf340d82a1b6459e130" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hlslSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="structcon_1_1ElementProperties_3_01Float_01_4_a149a2e62c51c7fa971661e5aef3fce5a_1a149a2e62c51c7fa971661e5aef3fce5a" kindref="member">CPUType</ref><sp/>);<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>type<sp/>on<sp/>GPU/hlsl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structcon_1_1ElementProperties_3_01Float_01_4_a060849025d038e7bd1424e853e24d6ae_1a060849025d038e7bd1424e853e24d6ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;F1&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>for<sp/>generating<sp/>the<sp/>tag<sp/>of<sp/>the<sp/>CB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structcon_1_1ElementProperties_3_01Float_01_4_a951f89cfe0ae0ba802de793b9b02f003_1a951f89cfe0ae0ba802de793b9b02f003" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcon_1_1ElementProperties_a5a7b976410c2b1c4076f3e4090f9100c_1a5a7b976410c2b1c4076f3e4090f9100c" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>metaprogramming<sp/>flag<sp/>to<sp/>check<sp/>validity<sp/>of<sp/>ElementProperties<sp/>&lt;param&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="59" refid="structcon_1_1ElementProperties_3_01Float2_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Float2&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61" refid="structcon_1_1ElementProperties_3_01Float2_01_4_a570393e7f0167cf37a6cf4509a81d6df_1a570393e7f0167cf37a6cf4509a81d6df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties_3_01Float2_01_4_a570393e7f0167cf37a6cf4509a81d6df_1a570393e7f0167cf37a6cf4509a81d6df" kindref="member">CPUType</ref><sp/>=<sp/>dx::XMFLOAT2;</highlight></codeline>
<codeline lineno="62" refid="structcon_1_1ElementProperties_3_01Float2_01_4_a08feb6d1ed65936eac3facfb3001d9b4_1a08feb6d1ed65936eac3facfb3001d9b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hlslSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="structcon_1_1ElementProperties_3_01Float2_01_4_a570393e7f0167cf37a6cf4509a81d6df_1a570393e7f0167cf37a6cf4509a81d6df" kindref="member">CPUType</ref><sp/>);</highlight></codeline>
<codeline lineno="63" refid="structcon_1_1ElementProperties_3_01Float2_01_4_ab9b916d8598861451725b43f7c6874ab_1ab9b916d8598861451725b43f7c6874ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;F2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64" refid="structcon_1_1ElementProperties_3_01Float2_01_4_ac66e8159fa20976e8363d07717a11a04_1ac66e8159fa20976e8363d07717a11a04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcon_1_1ElementProperties_a5a7b976410c2b1c4076f3e4090f9100c_1a5a7b976410c2b1c4076f3e4090f9100c" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="68" refid="structcon_1_1ElementProperties_3_01Float3_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Float3&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70" refid="structcon_1_1ElementProperties_3_01Float3_01_4_a2fbd900f153db13235ba68f22804d8b4_1a2fbd900f153db13235ba68f22804d8b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties_3_01Float3_01_4_a2fbd900f153db13235ba68f22804d8b4_1a2fbd900f153db13235ba68f22804d8b4" kindref="member">CPUType</ref><sp/>=<sp/>dx::XMFLOAT3;</highlight></codeline>
<codeline lineno="71" refid="structcon_1_1ElementProperties_3_01Float3_01_4_a33c3fd7f1ca588ca2eb1cc93dc847c7a_1a33c3fd7f1ca588ca2eb1cc93dc847c7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hlslSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="structcon_1_1ElementProperties_3_01Float3_01_4_a2fbd900f153db13235ba68f22804d8b4_1a2fbd900f153db13235ba68f22804d8b4" kindref="member">CPUType</ref><sp/>);</highlight></codeline>
<codeline lineno="72" refid="structcon_1_1ElementProperties_3_01Float3_01_4_abee99c7f9e4491604223df76a937ef81_1abee99c7f9e4491604223df76a937ef81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;F3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73" refid="structcon_1_1ElementProperties_3_01Float3_01_4_a4bb99bcc6ac014460822f0b5ee17ab56_1a4bb99bcc6ac014460822f0b5ee17ab56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcon_1_1ElementProperties_a5a7b976410c2b1c4076f3e4090f9100c_1a5a7b976410c2b1c4076f3e4090f9100c" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="77" refid="structcon_1_1ElementProperties_3_01Float4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Float4&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79" refid="structcon_1_1ElementProperties_3_01Float4_01_4_abb1bd1a8316999fad6c73ef434b6fdc8_1abb1bd1a8316999fad6c73ef434b6fdc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties_3_01Float4_01_4_abb1bd1a8316999fad6c73ef434b6fdc8_1abb1bd1a8316999fad6c73ef434b6fdc8" kindref="member">CPUType</ref><sp/>=<sp/>dx::XMFLOAT4;</highlight></codeline>
<codeline lineno="80" refid="structcon_1_1ElementProperties_3_01Float4_01_4_a0aa36fbd9d2ad5b54b5ab768be76cc40_1a0aa36fbd9d2ad5b54b5ab768be76cc40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hlslSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="structcon_1_1ElementProperties_3_01Float4_01_4_abb1bd1a8316999fad6c73ef434b6fdc8_1abb1bd1a8316999fad6c73ef434b6fdc8" kindref="member">CPUType</ref><sp/>);</highlight></codeline>
<codeline lineno="81" refid="structcon_1_1ElementProperties_3_01Float4_01_4_ae47e508926f1221c66c9686f09a1a445_1ae47e508926f1221c66c9686f09a1a445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;F4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82" refid="structcon_1_1ElementProperties_3_01Float4_01_4_acba122ee3d9bda684edfc8d3c248222d_1acba122ee3d9bda684edfc8d3c248222d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcon_1_1ElementProperties_a5a7b976410c2b1c4076f3e4090f9100c_1a5a7b976410c2b1c4076f3e4090f9100c" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="86" refid="structcon_1_1ElementProperties_3_01Matrix_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Matrix&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88" refid="structcon_1_1ElementProperties_3_01Matrix_01_4_a26d54b2eeb877ad316184496594086f0_1a26d54b2eeb877ad316184496594086f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties_3_01Matrix_01_4_a26d54b2eeb877ad316184496594086f0_1a26d54b2eeb877ad316184496594086f0" kindref="member">CPUType</ref><sp/>=<sp/>dx::XMFLOAT4X4;</highlight></codeline>
<codeline lineno="89" refid="structcon_1_1ElementProperties_3_01Matrix_01_4_a2e40cf73baff3f8d4e58c42eda34bc79_1a2e40cf73baff3f8d4e58c42eda34bc79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hlslSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="structcon_1_1ElementProperties_3_01Matrix_01_4_a26d54b2eeb877ad316184496594086f0_1a26d54b2eeb877ad316184496594086f0" kindref="member">CPUType</ref><sp/>);</highlight></codeline>
<codeline lineno="90" refid="structcon_1_1ElementProperties_3_01Matrix_01_4_a72cb75618c4a8d46ef6da31b4c27dea6_1a72cb75618c4a8d46ef6da31b4c27dea6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;M4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91" refid="structcon_1_1ElementProperties_3_01Matrix_01_4_a0042977050dc9580758547098a251cd8_1a0042977050dc9580758547098a251cd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcon_1_1ElementProperties_a5a7b976410c2b1c4076f3e4090f9100c_1a5a7b976410c2b1c4076f3e4090f9100c" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="95" refid="structcon_1_1ElementProperties_3_01Bool_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Bool&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97" refid="structcon_1_1ElementProperties_3_01Bool_01_4_a3e50a224f56f24983cf4abfce79e83fd_1a3e50a224f56f24983cf4abfce79e83fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties_3_01Bool_01_4_a3e50a224f56f24983cf4abfce79e83fd_1a3e50a224f56f24983cf4abfce79e83fd" kindref="member">CPUType</ref><sp/>=<sp/>bool;</highlight></codeline>
<codeline lineno="98" refid="structcon_1_1ElementProperties_3_01Bool_01_4_adb6beb1236b8d83892cd081847cd2b19_1adb6beb1236b8d83892cd081847cd2b19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hlslSize<sp/>=<sp/>4u;</highlight></codeline>
<codeline lineno="99" refid="structcon_1_1ElementProperties_3_01Bool_01_4_a7de2116877d5ed3b0779036cf200de37_1a7de2116877d5ed3b0779036cf200de37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100" refid="structcon_1_1ElementProperties_3_01Bool_01_4_a79aefdae47873113737e3660a043051c_1a79aefdae47873113737e3660a043051c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcon_1_1ElementProperties_a5a7b976410c2b1c4076f3e4090f9100c_1a5a7b976410c2b1c4076f3e4090f9100c" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="104" refid="structcon_1_1ElementProperties_3_01Integer_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Integer&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106" refid="structcon_1_1ElementProperties_3_01Integer_01_4_acfd217a0f26850da63bc00dfe006703d_1acfd217a0f26850da63bc00dfe006703d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ElementProperties_3_01Integer_01_4_acfd217a0f26850da63bc00dfe006703d_1acfd217a0f26850da63bc00dfe006703d" kindref="member">CPUType</ref><sp/>=<sp/>int;</highlight></codeline>
<codeline lineno="107" refid="structcon_1_1ElementProperties_3_01Integer_01_4_abf1a9b5f3f7036d66e32a2bffd3b0c94_1abf1a9b5f3f7036d66e32a2bffd3b0c94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hlslSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="structcon_1_1ElementProperties_3_01Integer_01_4_acfd217a0f26850da63bc00dfe006703d_1acfd217a0f26850da63bc00dfe006703d" kindref="member">CPUType</ref><sp/>);</highlight></codeline>
<codeline lineno="108" refid="structcon_1_1ElementProperties_3_01Integer_01_4_aeea562b046d482677ac8a3f9de1ad2d6_1aeea562b046d482677ac8a3f9de1ad2d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109" refid="structcon_1_1ElementProperties_3_01Integer_01_4_a97b59f8e957458e596df00a24a37f48a_1a97b59f8e957458e596df00a24a37f48a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcon_1_1ElementProperties_a5a7b976410c2b1c4076f3e4090f9100c_1a5a7b976410c2b1c4076f3e4090f9100c" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ensures<sp/>that<sp/>every<sp/>leaf<sp/>class<sp/>in<sp/>master<sp/>list<sp/>has<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>static<sp/>attribute<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X(<sp/>el<sp/>)<sp/>static_assert(<sp/>ElementProperties&lt;el&gt;::valid,<sp/>&quot;Missing<sp/>map<sp/>implementation<sp/>for<sp/>&quot;<sp/>#el<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="dynamic__constant__buffer_8h_a36024b6e30a67d227f4a2c898167f20b_1a36024b6e30a67d227f4a2c898167f20b" kindref="member">CB_LEAF_TYPES</ref></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enables<sp/>reverse<sp/>lookup<sp/>from<sp/>CPUType<sp/>to<sp/>leaf<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="119" refid="structcon_1_1ReverseMap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ReverseMap" kindref="compound">ReverseMap</ref><sp/>final</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121" refid="structcon_1_1ReverseMap_a5f095d6d8be3fbcb45f7175634393243_1a5f095d6d8be3fbcb45f7175634393243" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcon_1_1ReverseMap_a5f095d6d8be3fbcb45f7175634393243_1a5f095d6d8be3fbcb45f7175634393243" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X(<sp/>el<sp/>)<sp/>template&lt;&gt;<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>ReverseMap&lt;typename<sp/>ElementProperties&lt;el&gt;::CPUType&gt;<sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>ElementType<sp/>type<sp/>=<sp/>el;<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>constexpr<sp/>bool<sp/>valid<sp/>=<sp/>true;<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="dynamic__constant__buffer_8h_a36024b6e30a67d227f4a2c898167f20b_1a36024b6e30a67d227f4a2c898167f20b" kindref="member">CB_LEAF_TYPES</ref></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classcon_1_1CBElement" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref><sp/>final</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155" refid="structcon_1_1CBElement_1_1IExtraData" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1CBElement_1_1IExtraData" kindref="compound">IExtraData</ref></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157" refid="structcon_1_1CBElement_1_1IExtraData_a741cbc7c7feb161aae64c7c9ddbc0d5b_1a741cbc7c7feb161aae64c7c9ddbc0d5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structcon_1_1CBElement_1_1IExtraData_a741cbc7c7feb161aae64c7c9ddbc0d5b_1a741cbc7c7feb161aae64c7c9ddbc0d5b" kindref="member">~IExtraData</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classcon_1_1CBElement_ab225b44e351c3535f90ac0faa77c517f_1ab225b44e351c3535f90ac0faa77c517f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1RawLayout" kindref="compound">RawLayout</ref>;</highlight></codeline>
<codeline lineno="161" refid="classcon_1_1CBElement_ab9ca262c80934fdfea4294105e77633f_1ab9ca262c80934fdfea4294105e77633f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcon_1_1ExtraData" kindref="compound">ExtraData</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165" refid="classcon_1_1CBElement_a4331e8b8e88042cc3f31d6c211905cf6_1a4331e8b8e88042cc3f31d6c211905cf6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;size_t&gt;<sp/><ref refid="classcon_1_1CBElement_a4331e8b8e88042cc3f31d6c211905cf6_1a4331e8b8e88042cc3f31d6c211905cf6" kindref="member">m_offset</ref>;</highlight></codeline>
<codeline lineno="166" refid="classcon_1_1CBElement_a89f52c943b9001e904a3b46d2ff159e0_1a89f52c943b9001e904a3b46d2ff159e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5" kindref="member">ElementType</ref><sp/><ref refid="classcon_1_1CBElement_a89f52c943b9001e904a3b46d2ff159e0_1a89f52c943b9001e904a3b46d2ff159e0" kindref="member">m_type</ref><sp/>=<sp/><ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5aa0f2a80cc2e22505f9ff4d7920dd6ec6" kindref="member">Empty</ref>;</highlight></codeline>
<codeline lineno="167" refid="classcon_1_1CBElement_a8255f8b646dcd4cdb770bc7d00171e72_1a8255f8b646dcd4cdb770bc7d00171e72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;IExtraData&gt;<sp/><ref refid="classcon_1_1CBElement_a8255f8b646dcd4cdb770bc7d00171e72_1a8255f8b646dcd4cdb770bc7d00171e72" kindref="member">m_pExtraData</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classcon_1_1CBElement_a63af17d93b614366c28d6369e4300649_1a63af17d93b614366c28d6369e4300649" kindref="member">calcSignature</ref>()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_a3c31c032036577e4ff120b9df5363877_1a3c31c032036577e4ff120b9df5363877" kindref="member">isValid</ref>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/>const<sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>*&gt;<sp/><ref refid="classcon_1_1CBElement_a8a90f9c56e1847ff5aa05c8a61005192_1a8a90f9c56e1847ff5aa05c8a61005192" kindref="member">calculateArrayIndexingOffset</ref>(<sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>)<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/>operator[](<sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;key<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/>operator[](<sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;key<sp/>)<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/>T()<sp/>cond_noex;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/>T()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_abfcc38e1bcdc516d45c7b56c19b7a032_1abfcc38e1bcdc516d45c7b56c19b7a032" kindref="member">getOffsetBegin</ref>()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_a5f530e1452487417567ea1bbdb28c07e_1a5f530e1452487417567ea1bbdb28c07e" kindref="member">getOffsetEnd</ref>()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_a39ea03a517d27ee0ed154b9f167ca104_1a39ea03a517d27ee0ed154b9f167ca104" kindref="member">getSizeInBytes</ref>()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/><ref refid="classcon_1_1CBElement_a87ecde2b649ee3a518a5f99d94d488fb_1a87ecde2b649ee3a518a5f99d94d488fb" kindref="member">add</ref>(<sp/>const<sp/><ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5" kindref="member">ElementType</ref><sp/>addedType,<sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>name<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5" kindref="member">ElementType</ref><sp/>elem&gt;</highlight></codeline>
<codeline lineno="192" refid="classcon_1_1CBElement_a91f66519fa6fbb1983c731da6414be33_1a91f66519fa6fbb1983c731da6414be33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/><ref refid="classcon_1_1CBElement_a87ecde2b649ee3a518a5f99d94d488fb_1a87ecde2b649ee3a518a5f99d94d488fb" kindref="member">add</ref>(<sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>key<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_a87ecde2b649ee3a518a5f99d94d488fb_1a87ecde2b649ee3a518a5f99d94d488fb" kindref="member">add</ref>(<sp/>elem,<sp/>std::move(<sp/>key<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/><ref refid="classcon_1_1CBElement_a9706f2df6cef0aa0efccd615ef002334_1a9706f2df6cef0aa0efccd615ef002334" kindref="member">set</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5" kindref="member">ElementType</ref><sp/>addedType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ElementType<sp/>elem&gt;</highlight></codeline>
<codeline lineno="199" refid="classcon_1_1CBElement_a9899d0f0f1031e3804682f12e72a1c47_1a9899d0f0f1031e3804682f12e72a1c47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/><ref refid="classcon_1_1CBElement_a9899d0f0f1031e3804682f12e72a1c47_1a9899d0f0f1031e3804682f12e72a1c47" kindref="member">set</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_a9706f2df6cef0aa0efccd615ef002334_1a9706f2df6cef0aa0efccd615ef002334" kindref="member">set</ref>(<sp/>elem,<sp/>size<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="206" refid="classcon_1_1CBElement_a41e7f4ce7d974d6ebe38532ba6358ef4_1a41e7f4ce7d974d6ebe38532ba6358ef4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_a41e7f4ce7d974d6ebe38532ba6358ef4_1a41e7f4ce7d974d6ebe38532ba6358ef4" kindref="member">fetch</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::string_literals;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/><ref refid="classcon_1_1CBElement_a89f52c943b9001e904a3b46d2ff159e0_1a89f52c943b9001e904a3b46d2ff159e0" kindref="member">m_type</ref><sp/>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X(<sp/>el<sp/>)<sp/>case<sp/>el:<sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASSERT(<sp/>typeid(<sp/>ElementProperties&lt;el&gt;::CPUType<sp/>)<sp/>==<sp/>typeid(<sp/>T<sp/>),<sp/>std::string{&quot;Error:<sp/>GPU<sp/>Type<sp/>&quot;s<sp/>+<sp/>std::string{typeid(<sp/>T<sp/>).name()}<sp/>+<sp/>&quot;<sp/>used<sp/>with<sp/>mapped<sp/>Type<sp/>&quot;s<sp/>+<sp/>std::string{ENUM_STR(<sp/>el<sp/>)}}.c_str()<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>*m_offset;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><ref refid="dynamic__constant__buffer_8h_a36024b6e30a67d227f4a2c898167f20b_1a36024b6e30a67d227f4a2c898167f20b" kindref="member">CB_LEAF_TYPES</ref></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>fetch<sp/>non-leaf<sp/>element&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0u;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="223" refid="classcon_1_1CBElement_a15d8885bf5657b191a9ea1bba92522c8_1a15d8885bf5657b191a9ea1bba92522c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElement_a15d8885bf5657b191a9ea1bba92522c8_1a15d8885bf5657b191a9ea1bba92522c8" kindref="member">CBElement</ref>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>(<sp/>const<sp/><ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5" kindref="member">ElementType</ref><sp/>typeIn<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_ad1c5e26a1f0424cc00b81c4a0860f61b_1ad1c5e26a1f0424cc00b81c4a0860f61b" kindref="member">commit</ref>(<sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offsetIn<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_a8aaf2878bfbd36368d13f7d4bf6e4805_1a8aaf2878bfbd36368d13f7d4bf6e4805" kindref="member">getSignatureForStruct</ref>()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_aec507d5cedb307bae9264071d6637060_1aec507d5cedb307bae9264071d6637060" kindref="member">calcSignatureForArray</ref>()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_afe4c1a6fc881c66a02892246305f579d_1afe4c1a6fc881c66a02892246305f579d" kindref="member">commitStruct</ref>(<sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offsetIn<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_aa0637d334183629490387108aa049da6_1aa0637d334183629490387108aa049da6" kindref="member">commitArray</ref>(<sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offsetIn<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="classcon_1_1CBElement_a0a44b5a3ab00bdd02a7c9e56e251f5e2_1a0a44b5a3ab00bdd02a7c9e56e251f5e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/><ref refid="classcon_1_1CBElement_a0a44b5a3ab00bdd02a7c9e56e251f5e2_1a0a44b5a3ab00bdd02a7c9e56e251f5e2" kindref="member">getEmptyElement</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref><sp/>empty{};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>empty;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_a660664a976c007e801542806637b36d5_1a660664a976c007e801542806637b36d5" kindref="member">advanceToBoundary</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_aa660d68d6a37b667305ad93931e21dc8_1aa660d68d6a37b667305ad93931e21dc8" kindref="member">doesCrossBoundary</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_abeb8a1332b29412bb8020bf4d1e3aba6_1abeb8a1332b29412bb8020bf4d1e3aba6" kindref="member">advanceIfCrossesBoundary</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement_ab9061a1808f74ab485346d776425a9ac_1ab9061a1808f74ab485346d776425a9ac" kindref="member">validateMemberName</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">};</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classcon_1_1CBLayout" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1CBLayout" kindref="compound">CBLayout</ref></highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267" refid="classcon_1_1CBLayout_a87b6f773d0354ee3da4e455c08002867_1a87b6f773d0354ee3da4e455c08002867" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1LayoutMap" kindref="compound">LayoutMap</ref>;</highlight></codeline>
<codeline lineno="268" refid="classcon_1_1CBLayout_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="270" refid="classcon_1_1CBLayout_a0b1d411cd40cd4aed65e330a385a03f2_1a0b1d411cd40cd4aed65e330a385a03f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;CBElement&gt;<sp/><ref refid="classcon_1_1CBLayout_a0b1d411cd40cd4aed65e330a385a03f2_1a0b1d411cd40cd4aed65e330a385a03f2" kindref="member">m_pLayoutRoot</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBLayout_a9b04357032146c78e74cce1e9843a788_1a9b04357032146c78e74cce1e9843a788" kindref="member">CBLayout</ref>(<sp/>std::shared_ptr&lt;CBElement&gt;<sp/>pRoot<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBLayout_a38fe5d51ff565b2f6089861086125341_1a38fe5d51ff565b2f6089861086125341" kindref="member">getSizeInBytes</ref>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBLayout_ad0f25a176e697cb4a7c8a2bc938ea909_1ad0f25a176e697cb4a7c8a2bc938ea909" kindref="member">calcSignature</ref>()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">};</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classcon_1_1RawLayout" refkind="compound"><highlight class="normal">class<sp/><ref refid="classcon_1_1RawLayout" kindref="compound">RawLayout</ref><sp/>final</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>public<sp/><ref refid="classcon_1_1CBLayout" kindref="compound">CBLayout</ref></highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289" refid="classcon_1_1RawLayout_a87b6f773d0354ee3da4e455c08002867_1a87b6f773d0354ee3da4e455c08002867" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1LayoutMap" kindref="compound">LayoutMap</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">RawLayout</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>key<sp/>into<sp/>the<sp/>root<sp/>Struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/>operator[](<sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;key<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>an<sp/>element<sp/>to<sp/>the<sp/>root<sp/>Struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5" kindref="member">ElementType</ref><sp/>elem&gt;</highlight></codeline>
<codeline lineno="297" refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/>add(<sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;key<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBLayout_a0b1d411cd40cd4aed65e330a385a03f2_1a0b1d411cd40cd4aed65e330a385a03f2" kindref="member">m_pLayoutRoot</ref>-&gt;<ref refid="classcon_1_1CBElement_a87ecde2b649ee3a518a5f99d94d488fb_1a87ecde2b649ee3a518a5f99d94d488fb" kindref="member">add</ref>&lt;elem&gt;(<sp/>key<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear()<sp/>noexcept;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&gt;<sp/>cookLayout()<sp/>noexcept;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">};</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="classcon_1_1CookedLayout" refkind="compound"><highlight class="normal">class<sp/><ref refid="classcon_1_1CookedLayout" kindref="compound">CookedLayout</ref><sp/>final</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>public<sp/><ref refid="classcon_1_1CBLayout" kindref="compound">CBLayout</ref></highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319" refid="classcon_1_1CookedLayout_a87b6f773d0354ee3da4e455c08002867_1a87b6f773d0354ee3da4e455c08002867" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1LayoutMap" kindref="compound">LayoutMap</ref>;</highlight></codeline>
<codeline lineno="320" refid="classcon_1_1CookedLayout_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/>operator[](<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;key<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cond_noex;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;CBElement&gt;<sp/>shareRootElement()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CookedLayout" kindref="compound">CookedLayout</ref>(<sp/>std::shared_ptr&lt;<ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&gt;<sp/>pRoot<sp/>)<sp/>noexcept;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&gt;<sp/>relinquishRoot()<sp/>noexcept;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="classcon_1_1CBElementConstView" refkind="compound"><highlight class="normal">class<sp/><ref refid="classcon_1_1CBElementConstView" kindref="compound">CBElementConstView</ref><sp/>final</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346" refid="classcon_1_1CBElementConstView_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref>;</highlight></codeline>
<codeline lineno="347" refid="classcon_1_1CBElementConstView_a83e370b5ab0016fc84e62fa0b5553261_1a83e370b5ab0016fc84e62fa0b5553261" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1CBElementView" kindref="compound">CBElementView</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="classcon_1_1CBElementConstView_a1e0952b5880027af67784d3e179e361f_1a1e0952b5880027af67784d3e179e361f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElementConstView_a1e0952b5880027af67784d3e179e361f_1a1e0952b5880027af67784d3e179e361f" kindref="member">m_arrayOffset</ref>;</highlight></codeline>
<codeline lineno="350" refid="classcon_1_1CBElementConstView_a6da4bed7fd7719d277e8bad9b8951268_1a6da4bed7fd7719d277e8bad9b8951268" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref><sp/>*<ref refid="classcon_1_1CBElementConstView_a6da4bed7fd7719d277e8bad9b8951268_1a6da4bed7fd7719d277e8bad9b8951268" kindref="member">pLayout</ref>;</highlight></codeline>
<codeline lineno="351" refid="classcon_1_1CBElementConstView_adb1503bdb941d7b733d1d3a6c2617540_1adb1503bdb941d7b733d1d3a6c2617540" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classcon_1_1CBElementConstView_adb1503bdb941d7b733d1d3a6c2617540_1adb1503bdb941d7b733d1d3a6c2617540" kindref="member">m_p</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refs<sp/>should<sp/>only<sp/>be<sp/>constructable<sp/>by<sp/>other<sp/>refs<sp/>or<sp/>by<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElementConstView" kindref="compound">CBElementConstView</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref><sp/>*pLayout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pBytes,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="358" refid="classcon_1_1CBElementConstView_1_1Ptr" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1CBElementConstView_1_1Ptr" kindref="compound">Ptr</ref></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360" refid="classcon_1_1CBElementConstView_1_1Ptr_af3f6ab792c90294c60545d27512b6b8c_1af3f6ab792c90294c60545d27512b6b8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElementConstView_1_1Ptr_af3f6ab792c90294c60545d27512b6b8c_1af3f6ab792c90294c60545d27512b6b8c" kindref="member">CBElementConstView</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="classcon_1_1CBElementConstView_1_1Ptr_acf17c4337157046b98b7a2c70452f226_1acf17c4337157046b98b7a2c70452f226" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElementConstView" kindref="compound">CBElementConstView</ref><sp/>*<ref refid="classcon_1_1CBElementConstView_1_1Ptr_acf17c4337157046b98b7a2c70452f226_1acf17c4337157046b98b7a2c70452f226" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="366" refid="classcon_1_1CBElementConstView_1_1Ptr_a756b91d8ac50b71fbb8d67a28eb38e15_1a756b91d8ac50b71fbb8d67a28eb38e15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cond_noex</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<sp/><ref refid="structcon_1_1ReverseMap" kindref="compound">ReverseMap&lt;std::remove_const_t&lt;T&gt;</ref>&gt;::valid,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>CPUType<sp/>used<sp/>in<sp/>pointer<sp/>conversion&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>*p<sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElementConstView_1_1Ptr" kindref="compound">Ptr</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElementConstView" kindref="compound">CBElementConstView</ref><sp/>*ref<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElementConstView" kindref="compound">CBElementConstView</ref><sp/>operator[](<sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;key<sp/>)<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>into<sp/>the<sp/>current<sp/>element<sp/>as<sp/>an<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElementConstView" kindref="compound">CBElementConstView</ref><sp/>operator[](<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>)<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>emit<sp/>a<sp/>pointer<sp/>proxy<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>Ptr<sp/>operator&amp;()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conversion<sp/>for<sp/>reading<sp/>as<sp/>a<sp/>supported<sp/>CPUType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline lineno="387" refid="classcon_1_1CBElementConstView_a6f91bfd0a80d8bab26f29ed77d24a5e4_1a6f91bfd0a80d8bab26f29ed77d24a5e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>operator<sp/>const<sp/>T&amp;()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<sp/><ref refid="structcon_1_1ReverseMap" kindref="compound">ReverseMap&lt;std::remove_const_t&lt;T&gt;</ref>&gt;::valid,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>CPUType<sp/>used<sp/>in<sp/>conversion&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_p<sp/>+<sp/>m_arrayOffset<sp/>+<sp/>pLayout-&gt;<ref refid="classcon_1_1CBElement_a41e7f4ce7d974d6ebe38532ba6358ef4_1a41e7f4ce7d974d6ebe38532ba6358ef4" kindref="member">fetch</ref>&lt;T&gt;()<sp/>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal">};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="classcon_1_1CBElementView" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1CBElementView" kindref="compound">CBElementView</ref><sp/>final</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405" refid="classcon_1_1CBElementView_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="classcon_1_1CBElementView_a6a0b01094fc87bf3766a4402ad0c47d5_1a6a0b01094fc87bf3766a4402ad0c47d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElementView_a6a0b01094fc87bf3766a4402ad0c47d5_1a6a0b01094fc87bf3766a4402ad0c47d5" kindref="member">m_arrayOffset</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408" refid="classcon_1_1CBElementView_a155c48db0b2b347ee066305db3131c19_1a155c48db0b2b347ee066305db3131c19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref><sp/>*<ref refid="classcon_1_1CBElementView_a155c48db0b2b347ee066305db3131c19_1a155c48db0b2b347ee066305db3131c19" kindref="member">m_pLayout</ref>;</highlight></codeline>
<codeline lineno="409" refid="classcon_1_1CBElementView_a3b3033f8e1aa9bec99f3e53c3b89acda_1a3b3033f8e1aa9bec99f3e53c3b89acda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classcon_1_1CBElementView_a3b3033f8e1aa9bec99f3e53c3b89acda_1a3b3033f8e1aa9bec99f3e53c3b89acda" kindref="member">m_p</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElementView" kindref="compound">CBElementView</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref><sp/>*pLayout,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pBytes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="414" refid="classcon_1_1CBElementView_1_1Ptr" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1CBElementView_1_1Ptr" kindref="compound">Ptr</ref></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="416" refid="classcon_1_1CBElementView_1_1Ptr_a35b55b48c907345510690ba8e5a7d212_1a35b55b48c907345510690ba8e5a7d212" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElementView_1_1Ptr_a35b55b48c907345510690ba8e5a7d212_1a35b55b48c907345510690ba8e5a7d212" kindref="member">CBElementView</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="classcon_1_1CBElementView_1_1Ptr_a6c86866df9bd40d18ddcd8c8f6454043_1a6c86866df9bd40d18ddcd8c8f6454043" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElementView" kindref="compound">CBElementView</ref><sp/>*<ref refid="classcon_1_1CBElementView_1_1Ptr_a6c86866df9bd40d18ddcd8c8f6454043_1a6c86866df9bd40d18ddcd8c8f6454043" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conversion<sp/>to<sp/>read/write<sp/>pointer<sp/>to<sp/>supported<sp/>CPUType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="422" refid="classcon_1_1CBElementView_1_1Ptr_a38ef1ffd415fd8983bf28d8b63686707_1a38ef1ffd415fd8983bf28d8b63686707" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>T*()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cond_noex</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<sp/><ref refid="structcon_1_1ReverseMap" kindref="compound">ReverseMap&lt;std::remove_const_t&lt;T&gt;</ref>&gt;::valid,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>CPUType<sp/>used<sp/>in<sp/>pointer<sp/>conversion&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>*p<sp/>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElementView_1_1Ptr" kindref="compound">Ptr</ref>(<sp/><ref refid="classcon_1_1CBElementView" kindref="compound">CBElementView</ref><sp/>*ref<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBElementConstView" kindref="compound">CBElementConstView</ref>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isValid()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElementView" kindref="compound">CBElementView</ref><sp/>operator[](<sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;key<sp/>)<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElementView" kindref="compound">CBElementView</ref><sp/>operator[](<sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>)<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>S&gt;</highlight></codeline>
<codeline lineno="437" refid="classcon_1_1CBElementView_a284b1e7efce3ea119b68be0085cfe01b_1a284b1e7efce3ea119b68be0085cfe01b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setIfValid(<sp/>const<sp/>S<sp/>&amp;val<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>isValid()<sp/>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>Ptr<sp/>operator&amp;()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline lineno="450" refid="classcon_1_1CBElementView_a63649e2ff6f113b4a1a872032386f22a_1a63649e2ff6f113b4a1a872032386f22a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>operator<sp/>T&amp;()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="structcon_1_1ReverseMap" kindref="compound">ReverseMap&lt;std::remove_const_t&lt;T&gt;</ref>&gt;::valid,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>CPUType<sp/>used<sp/>in<sp/>conversion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_p<sp/>+<sp/>m_arrayOffset<sp/>+<sp/>m_pLayout-&gt;<ref refid="classcon_1_1CBElement_a41e7f4ce7d974d6ebe38532ba6358ef4_1a41e7f4ce7d974d6ebe38532ba6358ef4" kindref="member">fetch</ref>&lt;T&gt;()<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="457" refid="classcon_1_1CBElementView_a6d544792727126d69bff68ffcb7b717a_1a6d544792727126d69bff68ffcb7b717a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="classcon_1_1CBElementView_a6d544792727126d69bff68ffcb7b717a_1a6d544792727126d69bff68ffcb7b717a" kindref="member">operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;rhs<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cond_noex</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="structcon_1_1ReverseMap" kindref="compound">ReverseMap&lt;std::remove_const_t&lt;T&gt;</ref>&gt;::valid,<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>CPUType<sp/>used<sp/>in<sp/>assignment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this)<sp/>=<sp/>rhs;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal">};</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="classcon_1_1LayoutMap" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcon_1_1LayoutMap" kindref="compound">LayoutMap</ref></highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473" refid="classcon_1_1LayoutMap_a3ba6c0b1c55363dd853ca93e826682c2_1a3ba6c0b1c55363dd853ca93e826682c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1LayoutMap" kindref="compound">LayoutMap</ref><sp/>*<ref refid="classcon_1_1LayoutMap_a3ba6c0b1c55363dd853ca93e826682c2_1a3ba6c0b1c55363dd853ca93e826682c2" kindref="member">s_pInstance</ref>;</highlight></codeline>
<codeline lineno="474" refid="classcon_1_1LayoutMap_a367ed73b79d7920e5368745583d4de57_1a367ed73b79d7920e5368745583d4de57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::shared_ptr&lt;con::CBElement&gt;&gt;<sp/><ref refid="classcon_1_1LayoutMap_a367ed73b79d7920e5368745583d4de57_1a367ed73b79d7920e5368745583d4de57" kindref="member">m_map</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CookedLayout" kindref="compound">con::CookedLayout</ref><sp/>fetch(<sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>&amp;&amp;cbLayout<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1LayoutMap" kindref="compound">LayoutMap</ref>&amp;<sp/>getInstance()<sp/>noexcept;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">};</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="classcon_1_1CBuffer" refkind="compound"><highlight class="normal">class<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref><sp/>final</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495" refid="classcon_1_1CBuffer_a5ecfa284966d4210f13d994a12281cda_1a5ecfa284966d4210f13d994a12281cda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;CBElement&gt;<sp/><ref refid="classcon_1_1CBuffer_a5ecfa284966d4210f13d994a12281cda_1a5ecfa284966d4210f13d994a12281cda" kindref="member">m_pLayoutRoot</ref>;</highlight></codeline>
<codeline lineno="496" refid="classcon_1_1CBuffer_a93c17d7a23341b5058734e6e8202d6a5_1a93c17d7a23341b5058734e6e8202d6a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;char&gt;<sp/><ref refid="classcon_1_1CBuffer_a93c17d7a23341b5058734e6e8202d6a5_1a93c17d7a23341b5058734e6e8202d6a5" kindref="member">m_buffer</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBLayout_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" kindref="member">CBuffer</ref>(<sp/><ref refid="classcon_1_1RawLayout" kindref="compound">RawLayout</ref><sp/>&amp;&amp;lay<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBLayout_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" kindref="member">CBuffer</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CookedLayout" kindref="compound">CookedLayout</ref><sp/>&amp;lay<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBLayout_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" kindref="member">CBuffer</ref>(<sp/><ref refid="classcon_1_1CookedLayout" kindref="compound">CookedLayout</ref><sp/>&amp;&amp;lay<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBLayout_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" kindref="member">CBuffer</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref><sp/>&amp;rhs<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref>&amp;<sp/><ref refid="object__pool_8h_a858ae6fa8bae9073ca6cd84741bdee8a_1a858ae6fa8bae9073ca6cd84741bdee8a" kindref="member">operator==</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref><sp/>&amp;rhs<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBLayout_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" kindref="member">CBuffer</ref>(<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref><sp/>&amp;&amp;rhs<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref>&amp;<sp/>operator=(<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref><sp/>&amp;&amp;rhs<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBuffer" kindref="compound">~CBuffer</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElementView" kindref="compound">CBElementView</ref><sp/>operator[](<sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;key<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBElementConstView" kindref="compound">CBElementConstView</ref><sp/>operator[](<sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;key<sp/>)<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcon_1_1CBLayout_a38fe5d51ff565b2f6089861086125341_1a38fe5d51ff565b2f6089861086125341" kindref="member">getSizeInBytes</ref>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/><ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&amp;<sp/>getRootElement()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyFrom(<sp/>const<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref>&amp;<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveFrom(<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref>&amp;<sp/>)<sp/>noexcept;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref>&gt;<sp/>shareLayoutRoot()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="524"><highlight class="normal">};</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>namespace<sp/>con</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="inc/dynamic_constant_buffer.h"/>
  </compounddef>
</doxygen>
