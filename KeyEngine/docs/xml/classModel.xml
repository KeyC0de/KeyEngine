<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classModel" kind="class" language="C++" prot="public">
    <compoundname>Model</compoundname>
    <includes refid="model_8h" local="no">model.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classModel_a3b47d3369a4091b6e9a31a8a909b6d12_1a3b47d3369a4091b6e9a31a8a909b6d12" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Model::m_nNodes</definition>
        <argsstring></argsstring>
        <name>m_nNodes</name>
        <qualifiedname>Model::m_nNodes</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="27" column="5" bodyfile="inc/model.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModel_af8ef6c44138a7d35a0cfda35af5f1958_1af8ef6c44138a7d35a0cfda35af5f1958" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Model::m_nMeshNodes</definition>
        <argsstring></argsstring>
        <name>m_nMeshNodes</name>
        <qualifiedname>Model::m_nMeshNodes</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="28" column="5" bodyfile="inc/model.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classModel_a459f3420c7e47200f15c946cb7702170_1a459f3420c7e47200f15c946cb7702170" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Model::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <qualifiedname>Model::m_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="29" column="13" bodyfile="inc/model.h" bodystart="29" bodyend="-1"/>
        <referencedby refid="classModel_a2bb58287e2762dd3fbd905929b7a4c9c_1a2bb58287e2762dd3fbd905929b7a4c9c" compoundref="MODEL_8CPP" startline="69" endline="96">Model</referencedby>
        <referencedby refid="classModel_a0580611e0db6e9def73246c306c19a06_1a0580611e0db6e9def73246c306c19a06" compoundref="MODEL_8CPP" startline="267" endline="270">getName</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classModel_aea1cd1a8e46e5b976f66047fdbd58add_1aea1cd1a8e46e5b976f66047fdbd58add" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classNode" kindref="compound">Node</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Node&gt; Model::m_pRoot</definition>
        <argsstring></argsstring>
        <name>m_pRoot</name>
        <qualifiedname>Model::m_pRoot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="30" column="17" bodyfile="inc/model.h" bodystart="30" bodyend="-1"/>
        <referencedby refid="classModel_a2bb58287e2762dd3fbd905929b7a4c9c_1a2bb58287e2762dd3fbd905929b7a4c9c" compoundref="MODEL_8CPP" startline="69" endline="96">Model</referencedby>
        <referencedby refid="classModel_af4731ff2dc420c06801f4f5281af04b8_1af4731ff2dc420c06801f4f5281af04b8" compoundref="MODEL_8CPP" startline="152" endline="155">accept</referencedby>
        <referencedby refid="classModel_a22cb995d5e3ddbf2c9cd303e90820aba_1a22cb995d5e3ddbf2c9cd303e90820aba" compoundref="MODEL_8CPP" startline="257" endline="260">getPosition</referencedby>
        <referencedby refid="classModel_a309132aa630a396fdb2c7626d5272bb1_1a309132aa630a396fdb2c7626d5272bb1" compoundref="MODEL_8CPP" startline="247" endline="250">getRotation</referencedby>
        <referencedby refid="classModel_a581366c3323ea82fea0d599c1a053ad4_1a581366c3323ea82fea0d599c1a053ad4" compoundref="MODEL_8CPP" startline="252" endline="255">getRotationQuat</referencedby>
        <referencedby refid="classModel_ab52e612aed8183547ee0d58aab900631_1ab52e612aed8183547ee0d58aab900631" compoundref="MODEL_8CPP" startline="237" endline="240">getScale</referencedby>
        <referencedby refid="classModel_a713fb2d948d1e0b246edfaf100a96d13_1a713fb2d948d1e0b246edfaf100a96d13" compoundref="MODEL_8CPP" startline="242" endline="245">getScale3</referencedby>
        <referencedby refid="classModel_a5ebe7821b16ec75c882ad5c797980c9c_1a5ebe7821b16ec75c882ad5c797980c9c" compoundref="MODEL_8CPP" startline="227" endline="230">getTransform</referencedby>
        <referencedby refid="classModel_a97c6fc1a512ac57979f0fc63c1d34085_1a97c6fc1a512ac57979f0fc63c1d34085" compoundref="MODEL_8CPP" startline="232" endline="235">getTransform4x4</referencedby>
        <referencedby refid="classModel_abdad4d48fa4a4ed0680bee4a3ef8c7a7_1abdad4d48fa4a4ed0680bee4a3ef8c7a7" compoundref="MODEL_8CPP" startline="202" endline="205">scaleRel</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classModel_aac9199ace6d820b21545f4a33c80abef_1aac9199ace6d820b21545f4a33c80abef" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="classMesh" kindref="compound">Mesh</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;Mesh&gt; &gt; Model::m_meshes</definition>
        <argsstring></argsstring>
        <name>m_meshes</name>
        <qualifiedname>Model::m_meshes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="31" column="13" bodyfile="inc/model.h" bodystart="31" bodyend="-1"/>
        <referencedby refid="classModel_a2bb58287e2762dd3fbd905929b7a4c9c_1a2bb58287e2762dd3fbd905929b7a4c9c" compoundref="MODEL_8CPP" startline="69" endline="96">Model</referencedby>
        <referencedby refid="classModel_affb7503ef06f714be1de64e7df97664b_1affb7503ef06f714be1de64e7df97664b" compoundref="MODEL_8CPP" startline="98" endline="101">~Model</referencedby>
        <referencedby refid="classModel_a026f7d322b40a3488184d711962d92c2_1a026f7d322b40a3488184d711962d92c2" compoundref="MODEL_8CPP" startline="157" endline="164">connectMaterialsToRenderer</referencedby>
        <referencedby refid="classModel_a66b94da2a771a7c6cc33af0a26ef045e_1a66b94da2a771a7c6cc33af0a26ef045e" compoundref="MODEL_8CPP" startline="277" endline="280">getMesh</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classModel_ab4b4337502032a0d09a2be19f3939afe_1ab4b4337502032a0d09a2be19f3939afe" prot="private" static="no" mutable="no">
        <type><ref refid="classImguiPerModelNodeVisitor" kindref="compound">ImguiPerModelNodeVisitor</ref></type>
        <definition>ImguiPerModelNodeVisitor Model::m_imguiVisitor</definition>
        <argsstring></argsstring>
        <name>m_imguiVisitor</name>
        <qualifiedname>Model::m_imguiVisitor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="33" column="26" bodyfile="inc/model.h" bodystart="33" bodyend="-1"/>
        <referencedby refid="classModel_a2bb58287e2762dd3fbd905929b7a4c9c_1a2bb58287e2762dd3fbd905929b7a4c9c" compoundref="MODEL_8CPP" startline="69" endline="96">Model</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classModel_a0600c0c1f47a574ab81a6e0e73f3520e_1a0600c0c1f47a574ab81a6e0e73f3520e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Model::Model</definition>
        <argsstring>(Graphics &amp;gfx, const std::string &amp;path, const float initialScale=1.0f, const DirectX::XMFLOAT3 &amp;initialRotDeg={0.0f, 0.0f, 0.0f}, const DirectX::XMFLOAT3 &amp;initialPos={0.0f, 0.0f, 0.0f})</argsstring>
        <name>Model</name>
        <qualifiedname>Model::Model</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>initialScale</declname>
          <defval>1.0f</defval>
        </param>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>initialRotDeg</declname>
          <defval>{0.0f, 0.0f, 0.0f}</defval>
        </param>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>initialPos</declname>
          <defval>{0.0f, 0.0f, 0.0f}</defval>
        </param>
        <briefdescription>
<para><ref refid="classModel" kindref="compound">Model</ref> ctor for imported meshes. </para>
        </briefdescription>
        <detaileddescription>
<para>initialRot is in degrees - it will be converted and stored as radians </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="38" column="1" bodyfile="src/MODEL.CPP" bodystart="17" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a2bb58287e2762dd3fbd905929b7a4c9c_1a2bb58287e2762dd3fbd905929b7a4c9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Model::Model</definition>
        <argsstring>(std::unique_ptr&lt; Mesh &gt; pMesh, Graphics &amp;gfx, const DirectX::XMFLOAT3 &amp;initialRotDeg, const DirectX::XMFLOAT3 &amp;initialPos)</argsstring>
        <name>Model</name>
        <qualifiedname>Model::Model</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classMesh" kindref="compound">Mesh</ref> &gt;</type>
          <declname>pMesh</declname>
        </param>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>initialRotDeg</declname>
        </param>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>initialPos</declname>
        </param>
        <briefdescription>
<para>ctor for single-Mesh/Node primitives </para>
        </briefdescription>
        <detaileddescription>
<para>initialRot is in degrees - it will be converted and stored as radians </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="41" column="1" bodyfile="src/MODEL.CPP" bodystart="69" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classModel_affb7503ef06f714be1de64e7df97664b_1affb7503ef06f714be1de64e7df97664b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Model::~Model</definition>
        <argsstring>() noexcept</argsstring>
        <name>~Model</name>
        <qualifiedname>Model::~Model</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="42" column="1" bodyfile="src/MODEL.CPP" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classModel_af09f61d22a6c1f1f9a815b80519ea98a_1af09f61d22a6c1f1f9a815b80519ea98a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Model::Model</definition>
        <argsstring>(const Model &amp;rhs)=delete</argsstring>
        <name>Model</name>
        <qualifiedname>Model::Model</qualifiedname>
        <param>
          <type>const <ref refid="classModel" kindref="compound">Model</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a137f319d98a3c60467eaaf1b6bf548b3_1a137f319d98a3c60467eaaf1b6bf548b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classModel" kindref="compound">Model</ref> &amp;</type>
        <definition>Model &amp; Model::operator=</definition>
        <argsstring>(const Model &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>Model::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classModel" kindref="compound">Model</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="44" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a65852929a8bbdcc448b9efa714185a9a_1a65852929a8bbdcc448b9efa714185a9a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Model::Model</definition>
        <argsstring>(Model &amp;&amp;rhs) noexcept</argsstring>
        <name>Model</name>
        <qualifiedname>Model::Model</qualifiedname>
        <param>
          <type><ref refid="classModel" kindref="compound">Model</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="45" column="1" bodyfile="src/MODEL.CPP" bodystart="103" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classModel_ac65bf876216dc900b83fbed12e450743_1ac65bf876216dc900b83fbed12e450743" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classModel" kindref="compound">Model</ref> &amp;</type>
        <definition>Model &amp; Model::operator=</definition>
        <argsstring>(Model &amp;&amp;rhs) noexcept=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>Model::operator=</qualifiedname>
        <param>
          <type><ref refid="classModel" kindref="compound">Model</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="46" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a87092d0e63f1ff00e92f155d1e3e9c42_1a87092d0e63f1ff00e92f155d1e3e9c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::update</definition>
        <argsstring>(const float dt, const float lerpBetweenFrames, const bool bEnableSmoothMovemenzzt=false) cond_noex</argsstring>
        <name>update</name>
        <qualifiedname>Model::update</qualifiedname>
        <param>
          <type>const float</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>lerpBetweenFrames</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>bEnableSmoothMovemenzzt</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="48" column="6" bodyfile="src/MODEL.CPP" bodystart="117" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classModel_aa33a40fb50f074d5928c15c82074a0b6_1aa33a40fb50f074d5928c15c82074a0b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::render</definition>
        <argsstring>(const size_t channels=rch::all) const cond_noex</argsstring>
        <name>render</name>
        <qualifiedname>Model::render</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>channels</declname>
          <defval><ref refid="namespacerch_a7bda900872e1367b3434b6b548e17d2c_1a7bda900872e1367b3434b6b548e17d2c" kindref="member">rch::all</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="49" column="6" bodyfile="src/MODEL.CPP" bodystart="124" bodyend="130"/>
        <referencedby refid="classSandbox3d_a824771f328f2073b51ad89687d826d05_1a824771f328f2073b51ad89687d826d05" compoundref="game_8cpp" startline="475" endline="512">Sandbox3d::render</referencedby>
      </memberdef>
      <memberdef kind="function" id="classModel_ad9673dfef4bf662ef742ea17b7704099_1ad9673dfef4bf662ef742ea17b7704099" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Model::setMaterialEnabled</definition>
        <argsstring>(const size_t channels, const bool bEnabled) noexcept</argsstring>
        <name>setMaterialEnabled</name>
        <qualifiedname>Model::setMaterialEnabled</qualifiedname>
        <param>
          <type>const size_t</type>
          <declname>channels</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>bEnabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="50" column="6" bodyfile="src/MODEL.CPP" bodystart="132" bodyend="139"/>
        <referencedby refid="classSandbox3d_a976cec295e8116ae7cfb237e5c8c2cf6_1a976cec295e8116ae7cfb237e5c8c2cf6" compoundref="game_8cpp" startline="558" endline="572">Sandbox3d::connectToRenderer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classModel_a5c541a8bb0012d4cbb64f2cb809f1638_1a5c541a8bb0012d4cbb64f2cb809f1638" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Model::displayImguiWidgets</definition>
        <argsstring>(Graphics &amp;gfx) noexcept</argsstring>
        <name>displayImguiWidgets</name>
        <qualifiedname>Model::displayImguiWidgets</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="51" column="6" bodyfile="src/MODEL.CPP" bodystart="141" bodyend="150"/>
        <referencedby refid="classSandbox3d_a4b7094621086a4d13d7b5f47e5432ed5_1a4b7094621086a4d13d7b5f47e5432ed5" compoundref="game_8cpp" startline="514" endline="556">Sandbox3d::test</referencedby>
      </memberdef>
      <memberdef kind="function" id="classModel_af4731ff2dc420c06801f4f5281af04b8_1af4731ff2dc420c06801f4f5281af04b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::accept</definition>
        <argsstring>(IImguiNodeVisitor &amp;v)</argsstring>
        <name>accept</name>
        <qualifiedname>Model::accept</qualifiedname>
        <param>
          <type><ref refid="classIImguiNodeVisitor" kindref="compound">IImguiNodeVisitor</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="52" column="6" bodyfile="src/MODEL.CPP" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a026f7d322b40a3488184d711962d92c2_1a026f7d322b40a3488184d711962d92c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::connectMaterialsToRenderer</definition>
        <argsstring>(ren::Renderer &amp;r)</argsstring>
        <name>connectMaterialsToRenderer</name>
        <qualifiedname>Model::connectMaterialsToRenderer</qualifiedname>
        <param>
          <type><ref refid="classren_1_1Renderer" kindref="compound">ren::Renderer</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="53" column="6" bodyfile="src/MODEL.CPP" bodystart="157" bodyend="164"/>
        <referencedby refid="classCamera_a28fe2cb59984f7d7200a5b7a03b7fb01_1a28fe2cb59984f7d7200a5b7a03b7fb01" compoundref="camera_8cpp" startline="134" endline="138">Camera::connectMaterialsToRenderer</referencedby>
        <referencedby refid="classILightSource_a5e1c8d090c141ea94a06046be5b15df8_1a5e1c8d090c141ea94a06046be5b15df8" compoundref="light__source_8cpp" startline="87" endline="90">ILightSource::connectMaterialsToRenderer</referencedby>
        <referencedby refid="classSandbox3d_a976cec295e8116ae7cfb237e5c8c2cf6_1a976cec295e8116ae7cfb237e5c8c2cf6" compoundref="game_8cpp" startline="558" endline="572">Sandbox3d::connectToRenderer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classModel_a907f793106a2fc7b955b945873c37ce2_1a907f793106a2fc7b955b945873c37ce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::setScale</definition>
        <argsstring>(const float scale) cond_noex</argsstring>
        <name>setScale</name>
        <qualifiedname>Model::setScale</qualifiedname>
        <param>
          <type>const float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="62" column="6" bodyfile="src/MODEL.CPP" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a5df221b34d95f2db129a4b3cc564c403_1a5df221b34d95f2db129a4b3cc564c403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::setScale</definition>
        <argsstring>(const DirectX::XMFLOAT3 &amp;scale) cond_noex</argsstring>
        <name>setScale</name>
        <qualifiedname>Model::setScale</qualifiedname>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="63" column="6" bodyfile="src/MODEL.CPP" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classModel_abdad4d48fa4a4ed0680bee4a3ef8c7a7_1abdad4d48fa4a4ed0680bee4a3ef8c7a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::scaleRel</definition>
        <argsstring>(const DirectX::XMFLOAT3 &amp;scale) cond_noex</argsstring>
        <name>scaleRel</name>
        <qualifiedname>Model::scaleRel</qualifiedname>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="64" column="6" bodyfile="src/MODEL.CPP" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classModel_ae218f9aa7ff8225ecc9f250a057030af_1ae218f9aa7ff8225ecc9f250a057030af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::setRotation</definition>
        <argsstring>(const DirectX::XMFLOAT3 &amp;rotAnglesRadians) cond_noex</argsstring>
        <name>setRotation</name>
        <qualifiedname>Model::setRotation</qualifiedname>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>rotAnglesRadians</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="65" column="6" bodyfile="src/MODEL.CPP" bodystart="207" bodyend="210"/>
        <referencedby refid="classILightSource_a3fccfe57c1781b3f43a0cb4a41f67035_1a3fccfe57c1781b3f43a0cb4a41f67035" compoundref="light__source_8cpp" startline="92" endline="103">ILightSource::setRotation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classModel_a4f4450d1d501356cbacf57992f8f32c2_1a4f4450d1d501356cbacf57992f8f32c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::rotateRel</definition>
        <argsstring>(const DirectX::XMFLOAT3 &amp;rotAnglesRadians) cond_noex</argsstring>
        <name>rotateRel</name>
        <qualifiedname>Model::rotateRel</qualifiedname>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>rotAnglesRadians</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="66" column="6" bodyfile="src/MODEL.CPP" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a2f34019f76af71a4b0f120e6c83fa734_1a2f34019f76af71a4b0f120e6c83fa734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::setTranslation</definition>
        <argsstring>(const DirectX::XMFLOAT3 &amp;pos) cond_noex</argsstring>
        <name>setTranslation</name>
        <qualifiedname>Model::setTranslation</qualifiedname>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="67" column="6" bodyfile="src/MODEL.CPP" bodystart="217" bodyend="220"/>
        <referencedby refid="classILightSource_af4c3edc00a2603c76e0ec39955f23113_1af4c3edc00a2603c76e0ec39955f23113" compoundref="light__source_8cpp" startline="105" endline="116">ILightSource::setTranslation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classModel_a88c39a8c514b6abdf0bda067c7a0f326_1a88c39a8c514b6abdf0bda067c7a0f326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::translateRel</definition>
        <argsstring>(const DirectX::XMFLOAT3 &amp;pos) cond_noex</argsstring>
        <name>translateRel</name>
        <qualifiedname>Model::translateRel</qualifiedname>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="68" column="6" bodyfile="src/MODEL.CPP" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a5ebe7821b16ec75c882ad5c797980c9c_1a5ebe7821b16ec75c882ad5c797980c9c" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Model::getTransform</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTransform</name>
        <qualifiedname>Model::getTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="69" column="19" bodyfile="src/MODEL.CPP" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a97c6fc1a512ac57979f0fc63c1d34085_1a97c6fc1a512ac57979f0fc63c1d34085" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMFLOAT4X4</type>
        <definition>DirectX::XMFLOAT4X4 Model::getTransform4x4</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getTransform4x4</name>
        <qualifiedname>Model::getTransform4x4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="70" column="21" bodyfile="src/MODEL.CPP" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classModel_ab52e612aed8183547ee0d58aab900631_1ab52e612aed8183547ee0d58aab900631" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Model::getScale</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getScale</name>
        <qualifiedname>Model::getScale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="71" column="7" bodyfile="src/MODEL.CPP" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a713fb2d948d1e0b246edfaf100a96d13_1a713fb2d948d1e0b246edfaf100a96d13" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMFLOAT3</type>
        <definition>DirectX::XMFLOAT3 Model::getScale3</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getScale3</name>
        <qualifiedname>Model::getScale3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="72" column="19" bodyfile="src/MODEL.CPP" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a309132aa630a396fdb2c7626d5272bb1_1a309132aa630a396fdb2c7626d5272bb1" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMFLOAT3</type>
        <definition>DirectX::XMFLOAT3 Model::getRotation</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRotation</name>
        <qualifiedname>Model::getRotation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="73" column="19" bodyfile="src/MODEL.CPP" bodystart="247" bodyend="250"/>
        <referencedby refid="classILightSource_a29ff5d5e121d058b68954725e3489076_1a29ff5d5e121d058b68954725e3489076" compoundref="light__source_8cpp" startline="144" endline="147">ILightSource::getRotation</referencedby>
      </memberdef>
      <memberdef kind="function" id="classModel_a581366c3323ea82fea0d599c1a053ad4_1a581366c3323ea82fea0d599c1a053ad4" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMVECTOR</type>
        <definition>DirectX::XMVECTOR Model::getRotationQuat</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRotationQuat</name>
        <qualifiedname>Model::getRotationQuat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="74" column="19" bodyfile="src/MODEL.CPP" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a22cb995d5e3ddbf2c9cd303e90820aba_1a22cb995d5e3ddbf2c9cd303e90820aba" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>DirectX::XMFLOAT3</type>
        <definition>DirectX::XMFLOAT3 Model::getPosition</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getPosition</name>
        <qualifiedname>Model::getPosition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="75" column="19" bodyfile="src/MODEL.CPP" bodystart="257" bodyend="260"/>
        <referencedby refid="classDirectionalLight_a3d29f34ed75ac7ff2ed73e5ff5b29760_1a3d29f34ed75ac7ff2ed73e5ff5b29760" compoundref="light__source_8cpp" startline="244" endline="247">DirectionalLight::getPosition</referencedby>
      </memberdef>
      <memberdef kind="function" id="classModel_a0cc7d6fa891126a1daa9237d89cd1693_1a0cc7d6fa891126a1daa9237d89cd1693" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Model::getDistanceFromActiveCamera</definition>
        <argsstring>(const int index=0) const noexcept</argsstring>
        <name>getDistanceFromActiveCamera</name>
        <qualifiedname>Model::getDistanceFromActiveCamera</qualifiedname>
        <param>
          <type>const int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>return the distance between the currently active camera and the <ref refid="classMesh" kindref="compound">Mesh</ref> at specified index </para>
        </briefdescription>
        <detaileddescription>
<para>if index == 0 -&gt; it&apos;s the root <ref refid="classNode" kindref="compound">Node</ref>&apos;s <ref refid="classMesh" kindref="compound">Mesh</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="79" column="7" bodyfile="src/MODEL.CPP" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a0580611e0db6e9def73246c306c19a06_1a0580611e0db6e9def73246c306c19a06" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Model::getName</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getName</name>
        <qualifiedname>Model::getName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="80" column="19" bodyfile="src/MODEL.CPP" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classModel_aeaa2b630fba75a0b911db2f655301160_1aeaa2b630fba75a0b911db2f655301160" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classMesh" kindref="compound">Mesh</ref> *const</type>
        <definition>const Mesh *const Model::getMesh</definition>
        <argsstring>(const int index=0) const noexcept</argsstring>
        <name>getMesh</name>
        <qualifiedname>Model::getMesh</qualifiedname>
        <param>
          <type>const int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="81" column="18" bodyfile="src/MODEL.CPP" bodystart="272" bodyend="275"/>
        <referencedby refid="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" compoundref="camera_8cpp" startline="449" endline="456">Camera::updateCameraFrustum</referencedby>
      </memberdef>
      <memberdef kind="function" id="classModel_a66b94da2a771a7c6cc33af0a26ef045e_1a66b94da2a771a7c6cc33af0a26ef045e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMesh" kindref="compound">Mesh</ref> *const</type>
        <definition>Mesh *const Model::getMesh</definition>
        <argsstring>(const int index=0)</argsstring>
        <name>getMesh</name>
        <qualifiedname>Model::getMesh</qualifiedname>
        <param>
          <type>const int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="82" column="12" bodyfile="src/MODEL.CPP" bodystart="277" bodyend="280"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classModel_af45461230e9c72025a6ce6a7ba699bdc_1af45461230e9c72025a6ce6a7ba699bdc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::setTransform</definition>
        <argsstring>(const DirectX::XMMATRIX &amp;tr) cond_noex</argsstring>
        <name>setTransform</name>
        <qualifiedname>Model::setTransform</qualifiedname>
        <param>
          <type>const DirectX::XMMATRIX &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
<para>All transformation-related-functions simply call the root <ref refid="classNode" kindref="compound">Node</ref>&apos;s corresponding function and propagate the operation down the <ref refid="classNode" kindref="compound">Node</ref> hierarchy; the world transform itself is updated only once-per-tick during update. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="57" column="6" bodyfile="src/MODEL.CPP" bodystart="166" bodyend="169"/>
        <referencedby refid="classModel_a2bb58287e2762dd3fbd905929b7a4c9c_1a2bb58287e2762dd3fbd905929b7a4c9c" compoundref="MODEL_8CPP" startline="69" endline="96">Model</referencedby>
      </memberdef>
      <memberdef kind="function" id="classModel_a2d9ea5f25b9ae643e92c21aa286dea9c_1a2d9ea5f25b9ae643e92c21aa286dea9c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::setTransform</definition>
        <argsstring>(const float scale, const DirectX::XMFLOAT3 &amp;rotAnglesRadians, const DirectX::XMFLOAT3 &amp;pos) cond_noex</argsstring>
        <name>setTransform</name>
        <qualifiedname>Model::setTransform</qualifiedname>
        <param>
          <type>const float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>rotAnglesRadians</declname>
        </param>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="58" column="6" bodyfile="src/MODEL.CPP" bodystart="171" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a82dfe0f182853642b5ccb9f3d33f24c3_1a82dfe0f182853642b5ccb9f3d33f24c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::setTransform</definition>
        <argsstring>(const float scale, const DirectX::XMFLOAT4 &amp;rotQuat, const DirectX::XMFLOAT3 &amp;pos) cond_noex</argsstring>
        <name>setTransform</name>
        <qualifiedname>Model::setTransform</qualifiedname>
        <param>
          <type>const float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const DirectX::XMFLOAT4 &amp;</type>
          <declname>rotQuat</declname>
        </param>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="59" column="6" bodyfile="src/MODEL.CPP" bodystart="178" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classModel_a216593e7d84051b6b883fbc2ddc4d75a_1a216593e7d84051b6b883fbc2ddc4d75a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::setTransform</definition>
        <argsstring>(const float scale, const DirectX::XMVECTOR &amp;rotQuat, const DirectX::XMFLOAT3 &amp;pos) cond_noex</argsstring>
        <name>setTransform</name>
        <qualifiedname>Model::setTransform</qualifiedname>
        <param>
          <type>const float</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const DirectX::XMVECTOR &amp;</type>
          <declname>rotQuat</declname>
        </param>
        <param>
          <type>const DirectX::XMFLOAT3 &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="60" column="6" bodyfile="src/MODEL.CPP" bodystart="185" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classModel_af3dcc0a8bac832b284c12f479d88903e_1af3dcc0a8bac832b284c12f479d88903e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classNode" kindref="compound">Node</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Node &gt; Model::parseModelNodeGraph</definition>
        <argsstring>(Node *pParent, const aiNode &amp;node, int imguiNodeId, const float initialScale) cond_noex</argsstring>
        <name>parseModelNodeGraph</name>
        <qualifiedname>Model::parseModelNodeGraph</qualifiedname>
        <param>
          <type><ref refid="classNode" kindref="compound">Node</ref> *</type>
          <declname>pParent</declname>
        </param>
        <param>
          <type>const aiNode &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>imguiNodeId</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>initialScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/model.h" line="84" column="17" bodyfile="src/MODEL.CPP" bodystart="282" bodyend="318"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>IImguiNodeVisitor</label>
        <link refid="classIImguiNodeVisitor"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_pSelectedNode</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>ImguiPerModelNodeVisitor</label>
        <link refid="classImguiPerModelNodeVisitor"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Model</label>
        <link refid="classModel"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_imguiVisitor</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Node</label>
        <link refid="classNode"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_pParent</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/model.h" line="25" column="1" bodyfile="inc/model.h" bodystart="26" bodyend="85"/>
    <listofallmembers>
      <member refid="classModel_af4731ff2dc420c06801f4f5281af04b8_1af4731ff2dc420c06801f4f5281af04b8" prot="public" virt="non-virtual"><scope>Model</scope><name>accept</name></member>
      <member refid="classModel_a026f7d322b40a3488184d711962d92c2_1a026f7d322b40a3488184d711962d92c2" prot="public" virt="non-virtual"><scope>Model</scope><name>connectMaterialsToRenderer</name></member>
      <member refid="classModel_a5c541a8bb0012d4cbb64f2cb809f1638_1a5c541a8bb0012d4cbb64f2cb809f1638" prot="public" virt="non-virtual"><scope>Model</scope><name>displayImguiWidgets</name></member>
      <member refid="classModel_a0cc7d6fa891126a1daa9237d89cd1693_1a0cc7d6fa891126a1daa9237d89cd1693" prot="public" virt="non-virtual"><scope>Model</scope><name>getDistanceFromActiveCamera</name></member>
      <member refid="classModel_aeaa2b630fba75a0b911db2f655301160_1aeaa2b630fba75a0b911db2f655301160" prot="public" virt="non-virtual"><scope>Model</scope><name>getMesh</name></member>
      <member refid="classModel_a66b94da2a771a7c6cc33af0a26ef045e_1a66b94da2a771a7c6cc33af0a26ef045e" prot="public" virt="non-virtual"><scope>Model</scope><name>getMesh</name></member>
      <member refid="classModel_a0580611e0db6e9def73246c306c19a06_1a0580611e0db6e9def73246c306c19a06" prot="public" virt="non-virtual"><scope>Model</scope><name>getName</name></member>
      <member refid="classModel_a22cb995d5e3ddbf2c9cd303e90820aba_1a22cb995d5e3ddbf2c9cd303e90820aba" prot="public" virt="non-virtual"><scope>Model</scope><name>getPosition</name></member>
      <member refid="classModel_a309132aa630a396fdb2c7626d5272bb1_1a309132aa630a396fdb2c7626d5272bb1" prot="public" virt="non-virtual"><scope>Model</scope><name>getRotation</name></member>
      <member refid="classModel_a581366c3323ea82fea0d599c1a053ad4_1a581366c3323ea82fea0d599c1a053ad4" prot="public" virt="non-virtual"><scope>Model</scope><name>getRotationQuat</name></member>
      <member refid="classModel_ab52e612aed8183547ee0d58aab900631_1ab52e612aed8183547ee0d58aab900631" prot="public" virt="non-virtual"><scope>Model</scope><name>getScale</name></member>
      <member refid="classModel_a713fb2d948d1e0b246edfaf100a96d13_1a713fb2d948d1e0b246edfaf100a96d13" prot="public" virt="non-virtual"><scope>Model</scope><name>getScale3</name></member>
      <member refid="classModel_a5ebe7821b16ec75c882ad5c797980c9c_1a5ebe7821b16ec75c882ad5c797980c9c" prot="public" virt="non-virtual"><scope>Model</scope><name>getTransform</name></member>
      <member refid="classModel_a97c6fc1a512ac57979f0fc63c1d34085_1a97c6fc1a512ac57979f0fc63c1d34085" prot="public" virt="non-virtual"><scope>Model</scope><name>getTransform4x4</name></member>
      <member refid="classModel_ab4b4337502032a0d09a2be19f3939afe_1ab4b4337502032a0d09a2be19f3939afe" prot="private" virt="non-virtual"><scope>Model</scope><name>m_imguiVisitor</name></member>
      <member refid="classModel_aac9199ace6d820b21545f4a33c80abef_1aac9199ace6d820b21545f4a33c80abef" prot="private" virt="non-virtual"><scope>Model</scope><name>m_meshes</name></member>
      <member refid="classModel_a459f3420c7e47200f15c946cb7702170_1a459f3420c7e47200f15c946cb7702170" prot="private" virt="non-virtual"><scope>Model</scope><name>m_name</name></member>
      <member refid="classModel_af8ef6c44138a7d35a0cfda35af5f1958_1af8ef6c44138a7d35a0cfda35af5f1958" prot="private" virt="non-virtual"><scope>Model</scope><name>m_nMeshNodes</name></member>
      <member refid="classModel_a3b47d3369a4091b6e9a31a8a909b6d12_1a3b47d3369a4091b6e9a31a8a909b6d12" prot="private" virt="non-virtual"><scope>Model</scope><name>m_nNodes</name></member>
      <member refid="classModel_aea1cd1a8e46e5b976f66047fdbd58add_1aea1cd1a8e46e5b976f66047fdbd58add" prot="private" virt="non-virtual"><scope>Model</scope><name>m_pRoot</name></member>
      <member refid="classModel_a0600c0c1f47a574ab81a6e0e73f3520e_1a0600c0c1f47a574ab81a6e0e73f3520e" prot="public" virt="non-virtual"><scope>Model</scope><name>Model</name></member>
      <member refid="classModel_a2bb58287e2762dd3fbd905929b7a4c9c_1a2bb58287e2762dd3fbd905929b7a4c9c" prot="public" virt="non-virtual"><scope>Model</scope><name>Model</name></member>
      <member refid="classModel_af09f61d22a6c1f1f9a815b80519ea98a_1af09f61d22a6c1f1f9a815b80519ea98a" prot="public" virt="non-virtual"><scope>Model</scope><name>Model</name></member>
      <member refid="classModel_a65852929a8bbdcc448b9efa714185a9a_1a65852929a8bbdcc448b9efa714185a9a" prot="public" virt="non-virtual"><scope>Model</scope><name>Model</name></member>
      <member refid="classModel_a137f319d98a3c60467eaaf1b6bf548b3_1a137f319d98a3c60467eaaf1b6bf548b3" prot="public" virt="non-virtual"><scope>Model</scope><name>operator=</name></member>
      <member refid="classModel_ac65bf876216dc900b83fbed12e450743_1ac65bf876216dc900b83fbed12e450743" prot="public" virt="non-virtual"><scope>Model</scope><name>operator=</name></member>
      <member refid="classModel_af3dcc0a8bac832b284c12f479d88903e_1af3dcc0a8bac832b284c12f479d88903e" prot="private" virt="non-virtual"><scope>Model</scope><name>parseModelNodeGraph</name></member>
      <member refid="classModel_aa33a40fb50f074d5928c15c82074a0b6_1aa33a40fb50f074d5928c15c82074a0b6" prot="public" virt="non-virtual"><scope>Model</scope><name>render</name></member>
      <member refid="classModel_a4f4450d1d501356cbacf57992f8f32c2_1a4f4450d1d501356cbacf57992f8f32c2" prot="public" virt="non-virtual"><scope>Model</scope><name>rotateRel</name></member>
      <member refid="classModel_abdad4d48fa4a4ed0680bee4a3ef8c7a7_1abdad4d48fa4a4ed0680bee4a3ef8c7a7" prot="public" virt="non-virtual"><scope>Model</scope><name>scaleRel</name></member>
      <member refid="classModel_ad9673dfef4bf662ef742ea17b7704099_1ad9673dfef4bf662ef742ea17b7704099" prot="public" virt="non-virtual"><scope>Model</scope><name>setMaterialEnabled</name></member>
      <member refid="classModel_ae218f9aa7ff8225ecc9f250a057030af_1ae218f9aa7ff8225ecc9f250a057030af" prot="public" virt="non-virtual"><scope>Model</scope><name>setRotation</name></member>
      <member refid="classModel_a907f793106a2fc7b955b945873c37ce2_1a907f793106a2fc7b955b945873c37ce2" prot="public" virt="non-virtual"><scope>Model</scope><name>setScale</name></member>
      <member refid="classModel_a5df221b34d95f2db129a4b3cc564c403_1a5df221b34d95f2db129a4b3cc564c403" prot="public" virt="non-virtual"><scope>Model</scope><name>setScale</name></member>
      <member refid="classModel_af45461230e9c72025a6ce6a7ba699bdc_1af45461230e9c72025a6ce6a7ba699bdc" prot="private" virt="non-virtual"><scope>Model</scope><name>setTransform</name></member>
      <member refid="classModel_a2d9ea5f25b9ae643e92c21aa286dea9c_1a2d9ea5f25b9ae643e92c21aa286dea9c" prot="private" virt="non-virtual"><scope>Model</scope><name>setTransform</name></member>
      <member refid="classModel_a82dfe0f182853642b5ccb9f3d33f24c3_1a82dfe0f182853642b5ccb9f3d33f24c3" prot="private" virt="non-virtual"><scope>Model</scope><name>setTransform</name></member>
      <member refid="classModel_a216593e7d84051b6b883fbc2ddc4d75a_1a216593e7d84051b6b883fbc2ddc4d75a" prot="private" virt="non-virtual"><scope>Model</scope><name>setTransform</name></member>
      <member refid="classModel_a2f34019f76af71a4b0f120e6c83fa734_1a2f34019f76af71a4b0f120e6c83fa734" prot="public" virt="non-virtual"><scope>Model</scope><name>setTranslation</name></member>
      <member refid="classModel_a88c39a8c514b6abdf0bda067c7a0f326_1a88c39a8c514b6abdf0bda067c7a0f326" prot="public" virt="non-virtual"><scope>Model</scope><name>translateRel</name></member>
      <member refid="classModel_a87092d0e63f1ff00e92f155d1e3e9c42_1a87092d0e63f1ff00e92f155d1e3e9c42" prot="public" virt="non-virtual"><scope>Model</scope><name>update</name></member>
      <member refid="classModel_affb7503ef06f714be1de64e7df97664b_1affb7503ef06f714be1de64e7df97664b" prot="public" virt="non-virtual"><scope>Model</scope><name>~Model</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
