<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classNonAssignable" kind="class" language="C++" prot="public">
    <compoundname>NonAssignable</compoundname>
    <includes refid="non__copyable_8h" local="no">non_copyable.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNonAssignable_a7e74521669e0eb4b4de284cef74e5ece_1a7e74521669e0eb4b4de284cef74e5ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NonAssignable::NonAssignable</definition>
        <argsstring>()=default</argsstring>
        <name>NonAssignable</name>
        <qualifiedname>NonAssignable::NonAssignable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/non_copyable.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classNonAssignable_a4a8d37fc9697cf1841d0f857d3951829_1a4a8d37fc9697cf1841d0f857d3951829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NonAssignable::NonAssignable</definition>
        <argsstring>(const NonAssignable &amp;rhs)=default</argsstring>
        <name>NonAssignable</name>
        <qualifiedname>NonAssignable::NonAssignable</qualifiedname>
        <param>
          <type>const <ref refid="classNonAssignable" kindref="compound">NonAssignable</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/non_copyable.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classNonAssignable_a203fd5bec7c9367a0a2873d1950eaace_1a203fd5bec7c9367a0a2873d1950eaace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNonAssignable" kindref="compound">NonAssignable</ref> &amp;</type>
        <definition>NonAssignable &amp; NonAssignable::operator=</definition>
        <argsstring>(const NonAssignable &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>NonAssignable::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classNonAssignable" kindref="compound">NonAssignable</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/non_copyable.h" line="38" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classNonAssignable_ab64cbabfeea05c9c628a79f8792cbce6_1ab64cbabfeea05c9c628a79f8792cbce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNonAssignable" kindref="compound">NonAssignable</ref> &amp;</type>
        <definition>NonAssignable &amp; NonAssignable::operator=</definition>
        <argsstring>(NonAssignable &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>NonAssignable::operator=</qualifiedname>
        <param>
          <type><ref refid="classNonAssignable" kindref="compound">NonAssignable</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/non_copyable.h" line="39" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classNonAssignable_a6a7e74b85940a32bbb1a772e3b5347f2_1a6a7e74b85940a32bbb1a772e3b5347f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NonAssignable::NonAssignable</definition>
        <argsstring>(NonAssignable &amp;&amp;rhs)=default</argsstring>
        <name>NonAssignable</name>
        <qualifiedname>NonAssignable::NonAssignable</qualifiedname>
        <param>
          <type><ref refid="classNonAssignable" kindref="compound">NonAssignable</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/non_copyable.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classNonAssignable_af015afab26199d8b8fb97fb3ba8f5a64_1af015afab26199d8b8fb97fb3ba8f5a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNonAssignable" kindref="compound">NonAssignable</ref> &amp;</type>
        <definition>NonAssignable &amp; NonAssignable::operator=</definition>
        <argsstring>(NonAssignable &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>NonAssignable::operator=</qualifiedname>
        <param>
          <type><ref refid="classNonAssignable" kindref="compound">NonAssignable</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/non_copyable.h" line="41" column="15"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classNonAssignable_a505b71e803c930314cacc61244c0edf4_1a505b71e803c930314cacc61244c0edf4" prot="protected" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>NonAssignable::~NonAssignable</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~NonAssignable</name>
        <qualifiedname>NonAssignable::~NonAssignable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/non_copyable.h" line="43" column="1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="inc/non_copyable.h" line="32" column="1" bodyfile="inc/non_copyable.h" bodystart="33" bodyend="44"/>
    <listofallmembers>
      <member refid="classNonAssignable_a7e74521669e0eb4b4de284cef74e5ece_1a7e74521669e0eb4b4de284cef74e5ece" prot="public" virt="non-virtual"><scope>NonAssignable</scope><name>NonAssignable</name></member>
      <member refid="classNonAssignable_a4a8d37fc9697cf1841d0f857d3951829_1a4a8d37fc9697cf1841d0f857d3951829" prot="public" virt="non-virtual"><scope>NonAssignable</scope><name>NonAssignable</name></member>
      <member refid="classNonAssignable_a6a7e74b85940a32bbb1a772e3b5347f2_1a6a7e74b85940a32bbb1a772e3b5347f2" prot="public" virt="non-virtual"><scope>NonAssignable</scope><name>NonAssignable</name></member>
      <member refid="classNonAssignable_a203fd5bec7c9367a0a2873d1950eaace_1a203fd5bec7c9367a0a2873d1950eaace" prot="public" virt="non-virtual"><scope>NonAssignable</scope><name>operator=</name></member>
      <member refid="classNonAssignable_ab64cbabfeea05c9c628a79f8792cbce6_1ab64cbabfeea05c9c628a79f8792cbce6" prot="public" virt="non-virtual"><scope>NonAssignable</scope><name>operator=</name></member>
      <member refid="classNonAssignable_af015afab26199d8b8fb97fb3ba8f5a64_1af015afab26199d8b8fb97fb3ba8f5a64" prot="public" virt="non-virtual"><scope>NonAssignable</scope><name>operator=</name></member>
      <member refid="classNonAssignable_a505b71e803c930314cacc61244c0edf4_1a505b71e803c930314cacc61244c0edf4" prot="protected" virt="non-virtual"><scope>NonAssignable</scope><name>~NonAssignable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
