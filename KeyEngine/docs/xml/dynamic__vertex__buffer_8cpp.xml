<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="dynamic__vertex__buffer_8cpp" kind="file" language="C++">
    <compoundname>dynamic_vertex_buffer.cpp</compoundname>
    <includes refid="dynamic__vertex__buffer_8h" local="yes">dynamic_vertex_buffer.h</includes>
    <incdepgraph>
      <node id="13">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="2">
        <label>dynamic_vertex_buffer.h</label>
        <link refid="dynamic__vertex__buffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/dynamic_vertex_buffer.cpp</label>
        <link refid="dynamic__vertex__buffer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>DirectXMath.h</label>
      </node>
      <node id="5">
        <label>Windows.h</label>
      </node>
      <node id="12">
        <label>assimp/scene.h</label>
      </node>
      <node id="7">
        <label>d3d11.h</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>sdkddkver.h</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="10">
        <label>utility</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="structver_1_1lookups_1_1CPUSizeLookup" prot="public">ver::lookups::CPUSizeLookup</innerclass>
    <innerclass refid="structver_1_1lookups_1_1D3dDescLookup" prot="public">ver::lookups::D3dDescLookup</innerclass>
    <innerclass refid="structver_1_1lookups_1_1TagLookup" prot="public">ver::lookups::TagLookup</innerclass>
    <innerclass refid="structver_1_1lookups_1_1AiMeshElementLookup" prot="public">ver::lookups::AiMeshElementLookup</innerclass>
    <innernamespace refid="namespacever">ver</innernamespace>
    <innernamespace refid="namespacever_1_1lookups">ver::lookups</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dynamic__vertex__buffer_8h" kindref="compound">dynamic_vertex_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacever" kindref="compound">ver</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classver_1_1VertexInputLayout_a08e18188f08b7631be3e7901b8b5ee3b_1a08e18188f08b7631be3e7901b8b5ee3b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement" kindref="compound">VertexInputLayout::ILElement</ref>&amp;<sp/><ref refid="classver_1_1VertexInputLayout_a08e18188f08b7631be3e7901b8b5ee3b_1a08e18188f08b7631be3e7901b8b5ee3b" kindref="member">VertexInputLayout::getElementByIndex</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cond_noex</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vertexLayoutElements[i];</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classver_1_1VertexInputLayout_a7adfb63eeb82ed86d1144d70fddc0dee_1a7adfb63eeb82ed86d1144d70fddc0dee" refkind="member"><highlight class="normal"><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref>&amp;<sp/><ref refid="classver_1_1VertexInputLayout_a7adfb63eeb82ed86d1144d70fddc0dee_1a7adfb63eeb82ed86d1144d70fddc0dee" kindref="member">VertexInputLayout::add</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref><sp/>type<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!hasType(<sp/>type<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vertexLayoutElements.emplace_back(<sp/>type,<sp/>getSizeInBytes()<sp/>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classver_1_1VertexInputLayout_a2185ef30b26586b87f40fa3905c37c38_1a2185ef30b26586b87f40fa3905c37c38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a2185ef30b26586b87f40fa3905c37c38_1a2185ef30b26586b87f40fa3905c37c38" kindref="member">VertexInputLayout::hasType</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref>&amp;<sp/>type<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;e<sp/>:<sp/>m_vertexLayoutElements<sp/>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e.getType()<sp/>==<sp/>type<sp/>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classver_1_1VertexInputLayout_aa4d03e06b3df44cd4b80095f57f01aa2_1aa4d03e06b3df44cd4b80095f57f01aa2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_aa4d03e06b3df44cd4b80095f57f01aa2_1aa4d03e06b3df44cd4b80095f57f01aa2" kindref="member">VertexInputLayout::getSizeInBytes</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a3e560d20053a7a9a8b9696170b8e7e71_1a3e560d20053a7a9a8b9696170b8e7e71" kindref="member">m_vertexLayoutElements</ref>.empty()<sp/>?</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0u<sp/>:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classver_1_1VertexInputLayout_a3e560d20053a7a9a8b9696170b8e7e71_1a3e560d20053a7a9a8b9696170b8e7e71" kindref="member">m_vertexLayoutElements</ref>.back().getOffsetAfterThis();</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classver_1_1VertexInputLayout_a0864ab48170f7826b431314283b20ab9_1a0864ab48170f7826b431314283b20ab9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a0864ab48170f7826b431314283b20ab9_1a0864ab48170f7826b431314283b20ab9" kindref="member">VertexInputLayout::getElementCount</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a3e560d20053a7a9a8b9696170b8e7e71_1a3e560d20053a7a9a8b9696170b8e7e71" kindref="member">m_vertexLayoutElements</ref>.size();</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classver_1_1VertexInputLayout_a7e6126ae398fd20640edf6a42c2b744b_1a7e6126ae398fd20640edf6a42c2b744b" refkind="member"><highlight class="normal">std::vector&lt;D3D11_INPUT_ELEMENT_DESC&gt;<sp/><ref refid="classver_1_1VertexInputLayout_a7e6126ae398fd20640edf6a42c2b744b_1a7e6126ae398fd20640edf6a42c2b744b" kindref="member">VertexInputLayout::getD3DInputElementDescs</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;D3D11_INPUT_ELEMENT_DESC&gt;<sp/>desc;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>desc.reserve(<sp/><ref refid="classver_1_1VertexInputLayout_a0864ab48170f7826b431314283b20ab9_1a0864ab48170f7826b431314283b20ab9" kindref="member">getElementCount</ref>()<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;e<sp/>:<sp/><ref refid="classver_1_1VertexInputLayout_a3e560d20053a7a9a8b9696170b8e7e71_1a3e560d20053a7a9a8b9696170b8e7e71" kindref="member">m_vertexLayoutElements</ref><sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc.push_back(<sp/>e.getD3dDesc()<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desc;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classver_1_1VertexInputLayout_aad3d42fc8e63ce215f8b9965bc0bb699_1aad3d42fc8e63ce215f8b9965bc0bb699" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classver_1_1VertexInputLayout_aad3d42fc8e63ce215f8b9965bc0bb699_1aad3d42fc8e63ce215f8b9965bc0bb699" kindref="member">VertexInputLayout::calcSignature</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>tag;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;e<sp/>:<sp/><ref refid="classver_1_1VertexInputLayout_a3e560d20053a7a9a8b9696170b8e7e71_1a3e560d20053a7a9a8b9696170b8e7e71" kindref="member">m_vertexLayoutElements</ref><sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag<sp/>+=<sp/>e.getTag();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tag;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="namespacever_1_1lookups" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lookups</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;VertexInputLayout::ILEementType<sp/>type&gt;</highlight></codeline>
<codeline lineno="70" refid="structver_1_1lookups_1_1CPUSizeLookup" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1lookups_1_1CPUSizeLookup" kindref="compound">CPUSizeLookup</ref><sp/>final</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72" refid="structver_1_1lookups_1_1CPUSizeLookup_aa38f4491d9de875e6b316d69d5d44dda_1aa38f4491d9de875e6b316d69d5d44dda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structver_1_1lookups_1_1CPUSizeLookup_aa38f4491d9de875e6b316d69d5d44dda_1aa38f4491d9de875e6b316d69d5d44dda" kindref="member">exec</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">VertexInputLayout::ElementProperties&lt;type&gt;::CPUType</ref><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;VertexInputLayout::ILEementType<sp/>type&gt;</highlight></codeline>
<codeline lineno="79" refid="structver_1_1lookups_1_1D3dDescLookup" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1lookups_1_1D3dDescLookup" kindref="compound">D3dDescLookup</ref><sp/>final</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81" refid="structver_1_1lookups_1_1D3dDescLookup_a65166670d2d756e9fd6c26a58b373807_1a65166670d2d756e9fd6c26a58b373807" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>D3D11_INPUT_ELEMENT_DESC<sp/><ref refid="structver_1_1lookups_1_1D3dDescLookup_a65166670d2d756e9fd6c26a58b373807_1a65166670d2d756e9fd6c26a58b373807" kindref="member">exec</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">VertexInputLayout::ElementProperties&lt;type&gt;::hlslSemantic</ref>,<sp/>0u,<sp/><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">VertexInputLayout::ElementProperties&lt;type&gt;::dxgiFormat</ref>,<sp/>0u,<sp/>(unsigned)offset,<sp/>D3D11_INPUT_PER_VERTEX_DATA,<sp/>0u};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;VertexInputLayout::ILEementType<sp/>type&gt;</highlight></codeline>
<codeline lineno="88" refid="structver_1_1lookups_1_1TagLookup" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1lookups_1_1TagLookup" kindref="compound">TagLookup</ref><sp/>final</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90" refid="structver_1_1lookups_1_1TagLookup_ad4732be1bf98023af290e3d02b07c711_1ad4732be1bf98023af290e3d02b07c711" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structver_1_1lookups_1_1TagLookup_ad4732be1bf98023af290e3d02b07c711_1ad4732be1bf98023af290e3d02b07c711" kindref="member">exec</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">VertexInputLayout::ElementProperties&lt;type&gt;::tag</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;VertexInputLayout::ILEementType<sp/>type&gt;</highlight></codeline>
<codeline lineno="97" refid="structver_1_1lookups_1_1AiMeshElementLookup" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1lookups_1_1AiMeshElementLookup" kindref="compound">AiMeshElementLookup</ref><sp/>final</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99" refid="structver_1_1lookups_1_1AiMeshElementLookup_a794f8a6e4f91a4f304d4489fa6c230c5_1a794f8a6e4f91a4f304d4489fa6c230c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structver_1_1lookups_1_1AiMeshElementLookup_a794f8a6e4f91a4f304d4489fa6c230c5_1a794f8a6e4f91a4f304d4489fa6c230c5" kindref="member">exec</ref>(<sp/><ref refid="classver_1_1VBuffer" kindref="compound">VBuffer</ref><sp/>*pBuf,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>aiMesh<sp/>&amp;aimesh<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>aimesh.mNumVertices,<sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*pBuf)[i].getElement&lt;type&gt;()<sp/>=<sp/><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">VertexInputLayout::ElementProperties&lt;type&gt;::extract</ref>(<sp/>aimesh,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VertexInputLayout::ILElement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classver_1_1VertexInputLayout_1_1ILElement_a300e5339c189e1bd42b353d94c14c515_1a300e5339c189e1bd42b353d94c14c515" refkind="member"><highlight class="normal"><ref refid="classver_1_1VertexInputLayout_1_1ILElement_a300e5339c189e1bd42b353d94c14c515_1a300e5339c189e1bd42b353d94c14c515" kindref="member">VertexInputLayout::ILElement::ILElement</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref><sp/>type,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>m_type(type),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>m_offset(offset)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classver_1_1VertexInputLayout_1_1ILElement_a0f6e5ba8edb16bab19476ca9af242e03_1a0f6e5ba8edb16bab19476ca9af242e03" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_a0f6e5ba8edb16bab19476ca9af242e03_1a0f6e5ba8edb16bab19476ca9af242e03" kindref="member">VertexInputLayout::ILElement::getElementTypeSize</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref><sp/>type<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a452fe701708b2ce80a4b957de00b5640_1a452fe701708b2ce80a4b957de00b5640" kindref="member">bridge&lt;lookups::CPUSizeLookup&gt;</ref>(<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classver_1_1VertexInputLayout_1_1ILElement_ae00f05f297640e6c0abff8c4d3c9f427_1ae00f05f297640e6c0abff8c4d3c9f427" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_ae00f05f297640e6c0abff8c4d3c9f427_1ae00f05f297640e6c0abff8c4d3c9f427" kindref="member">VertexInputLayout::ILElement::getOffset</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="127"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_offset;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classver_1_1VertexInputLayout_1_1ILElement_aafcbf5036b53d4facb76513fbeb369b1_1aafcbf5036b53d4facb76513fbeb369b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_aafcbf5036b53d4facb76513fbeb369b1_1aafcbf5036b53d4facb76513fbeb369b1" kindref="member">VertexInputLayout::ILElement::getOffsetAfterThis</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_offset<sp/>+<sp/>getElementTypeSize(<sp/>m_type<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classver_1_1VertexInputLayout_1_1ILElement_a0003dedeefe176499659b929def6a030_1a0003dedeefe176499659b929def6a030" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">VertexInputLayout::ILEementType</ref><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_a0003dedeefe176499659b929def6a030_1a0003dedeefe176499659b929def6a030" kindref="member">VertexInputLayout::ILElement::getType</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_type;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classver_1_1VertexInputLayout_1_1ILElement_a70dd3eb7bd8279a8171b33b2213f5491_1a70dd3eb7bd8279a8171b33b2213f5491" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D3D11_INPUT_ELEMENT_DESC<sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_a70dd3eb7bd8279a8171b33b2213f5491_1a70dd3eb7bd8279a8171b33b2213f5491" kindref="member">VertexInputLayout::ILElement::getD3dDesc</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a452fe701708b2ce80a4b957de00b5640_1a452fe701708b2ce80a4b957de00b5640" kindref="member">bridge&lt;lookups::D3dDescLookup&gt;</ref>(<sp/>m_type,<sp/>getOffset()<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classver_1_1VertexInputLayout_1_1ILElement_ab12096f4ca21416fbdcc3bbb4e521504_1ab12096f4ca21416fbdcc3bbb4e521504" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_ab12096f4ca21416fbdcc3bbb4e521504_1ab12096f4ca21416fbdcc3bbb4e521504" kindref="member">ver::VertexInputLayout::ILElement::getTag</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a452fe701708b2ce80a4b957de00b5640_1a452fe701708b2ce80a4b957de00b5640" kindref="member">bridge&lt;lookups::TagLookup&gt;</ref>(<sp/>m_type<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classver_1_1VBElementView_a432cff5085260e9b169f412e300433b0_1a432cff5085260e9b169f412e300433b0" refkind="member"><highlight class="normal"><ref refid="classver_1_1VBElementView_a432cff5085260e9b169f412e300433b0_1a432cff5085260e9b169f412e300433b0" kindref="member">VBElementView::VBElementView</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pData,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref><sp/>&amp;layout<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p(pData),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>m_layout(layout)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>pData<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>data<sp/>bytes<sp/>pointer<sp/>is<sp/>null!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classver_1_1VBElementConstView_a04893e6ad5793e8892d562fda93fec13_1a04893e6ad5793e8892d562fda93fec13" refkind="member"><highlight class="normal"><ref refid="classver_1_1VBElementConstView_a04893e6ad5793e8892d562fda93fec13_1a04893e6ad5793e8892d562fda93fec13" kindref="member">VBElementConstView::VBElementConstView</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref><sp/>&amp;v<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vertexView(v)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classver_1_1VBuffer_a3eb51230844b8ac64c2440194a949021_1a3eb51230844b8ac64c2440194a949021" refkind="member"><highlight class="normal"><ref refid="classver_1_1VBuffer_a3eb51230844b8ac64c2440194a949021_1a3eb51230844b8ac64c2440194a949021" kindref="member">VBuffer::VBuffer</ref>(<sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref><sp/>layout,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vertexCount<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vertexLayout(std::move(<sp/>layout<sp/>))</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>resize(<sp/>vertexCount<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classver_1_1VBuffer_a15ad1af94cfa99dbab21409df8d85cf6_1a15ad1af94cfa99dbab21409df8d85cf6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBuffer_a15ad1af94cfa99dbab21409df8d85cf6_1a15ad1af94cfa99dbab21409df8d85cf6" kindref="member">VBuffer::resize</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newVertexCount<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vertexCount<sp/>=<sp/>getVertexCount();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>vertexCount<sp/>&lt;<sp/>newVertexCount<sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data.resize(<sp/><ref refid="classver_1_1VertexInputLayout_aa4d03e06b3df44cd4b80095f57f01aa2_1aa4d03e06b3df44cd4b80095f57f01aa2" kindref="member">getSizeInBytes</ref>()<sp/>+<sp/>m_vertexLayout.getSizeInBytes()<sp/>*<sp/>(<sp/>newVertexCount<sp/>-<sp/>vertexCount<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classver_1_1VBuffer_a1119d979a5938af6890ee5b051eb2c1d_1a1119d979a5938af6890ee5b051eb2c1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classver_1_1VBuffer_a1119d979a5938af6890ee5b051eb2c1d_1a1119d979a5938af6890ee5b051eb2c1d" kindref="member">VBuffer::data</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data.data();</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classver_1_1VBuffer_ad7f7cf56612462254808173841a75576_1ad7f7cf56612462254808173841a75576" refkind="member"><highlight class="normal"><ref refid="classver_1_1VBuffer_a3eb51230844b8ac64c2440194a949021_1a3eb51230844b8ac64c2440194a949021" kindref="member">VBuffer::VBuffer</ref>(<sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref><sp/>vertLayout,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>aiMesh<sp/>&amp;aimesh<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vertexLayout(std::move(<sp/>vertLayout<sp/>))</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBuffer_a15ad1af94cfa99dbab21409df8d85cf6_1a15ad1af94cfa99dbab21409df8d85cf6" kindref="member">resize</ref>(<sp/>aimesh.mNumVertices<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>end<sp/>=<sp/><ref refid="classver_1_1VBuffer_a151ec260bf0f942b1f67517558fa179b_1a151ec260bf0f942b1f67517558fa179b" kindref="member">m_vertexLayout</ref>.<ref refid="classver_1_1VertexInputLayout_a0864ab48170f7826b431314283b20ab9_1a0864ab48170f7826b431314283b20ab9" kindref="member">getElementCount</ref>();<sp/>i<sp/>&lt;<sp/>end;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classver_1_1VertexInputLayout_a452fe701708b2ce80a4b957de00b5640_1a452fe701708b2ce80a4b957de00b5640" kindref="member">VertexInputLayout::bridge&lt;lookups::AiMeshElementLookup&gt;</ref>(<sp/><ref refid="classver_1_1VBuffer_a151ec260bf0f942b1f67517558fa179b_1a151ec260bf0f942b1f67517558fa179b" kindref="member">m_vertexLayout</ref>.<ref refid="classver_1_1VertexInputLayout_a08e18188f08b7631be3e7901b8b5ee3b_1a08e18188f08b7631be3e7901b8b5ee3b" kindref="member">getElementByIndex</ref>(<sp/>i<sp/>).<ref refid="classver_1_1VertexInputLayout_1_1ILElement_a0003dedeefe176499659b929def6a030_1a0003dedeefe176499659b929def6a030" kindref="member">getType</ref>(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>aimesh<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classver_1_1VBuffer_aabecc9c64ac7e59768a656cfb4b2493d_1aabecc9c64ac7e59768a656cfb4b2493d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref>&amp;<sp/><ref refid="classver_1_1VBuffer_aabecc9c64ac7e59768a656cfb4b2493d_1aabecc9c64ac7e59768a656cfb4b2493d" kindref="member">VBuffer::getLayout</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBuffer_a151ec260bf0f942b1f67517558fa179b_1a151ec260bf0f942b1f67517558fa179b" kindref="member">m_vertexLayout</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classver_1_1VBuffer_a55a75ab98d36aa175186b19231626219_1a55a75ab98d36aa175186b19231626219" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBuffer_a55a75ab98d36aa175186b19231626219_1a55a75ab98d36aa175186b19231626219" kindref="member">VBuffer::getVertexCount</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBuffer_a71af3ae383f3ef74fe6cabdfbeb46b03_1a71af3ae383f3ef74fe6cabdfbeb46b03" kindref="member">getSizeInBytes</ref>()<sp/>/<sp/><ref refid="classver_1_1VBuffer_a151ec260bf0f942b1f67517558fa179b_1a151ec260bf0f942b1f67517558fa179b" kindref="member">m_vertexLayout</ref>.<ref refid="classver_1_1VertexInputLayout_aa4d03e06b3df44cd4b80095f57f01aa2_1aa4d03e06b3df44cd4b80095f57f01aa2" kindref="member">getSizeInBytes</ref>();</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="classver_1_1VBuffer_a71af3ae383f3ef74fe6cabdfbeb46b03_1a71af3ae383f3ef74fe6cabdfbeb46b03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBuffer_a71af3ae383f3ef74fe6cabdfbeb46b03_1a71af3ae383f3ef74fe6cabdfbeb46b03" kindref="member">VBuffer::getSizeInBytes</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBuffer_a04387a33b0b38a4eda64c4d84d314558_1a04387a33b0b38a4eda64c4d84d314558" kindref="member">m_data</ref>.size();</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classver_1_1VBuffer_aaae48c4f23f77bb394551d2422f6f7de_1aaae48c4f23f77bb394551d2422f6f7de" refkind="member"><highlight class="normal"><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref><sp/><ref refid="classver_1_1VBuffer_aaae48c4f23f77bb394551d2422f6f7de_1aaae48c4f23f77bb394551d2422f6f7de" kindref="member">VBuffer::back</ref>()<sp/>cond_noex</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>!<ref refid="classver_1_1VBuffer_a04387a33b0b38a4eda64c4d84d314558_1a04387a33b0b38a4eda64c4d84d314558" kindref="member">m_data</ref>.empty(),<sp/></highlight><highlight class="stringliteral">&quot;VertexBuffer<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref>{<ref refid="classver_1_1VBuffer_a04387a33b0b38a4eda64c4d84d314558_1a04387a33b0b38a4eda64c4d84d314558" kindref="member">m_data</ref>.data()<sp/>+<sp/><ref refid="classver_1_1VBuffer_a71af3ae383f3ef74fe6cabdfbeb46b03_1a71af3ae383f3ef74fe6cabdfbeb46b03" kindref="member">getSizeInBytes</ref>()<sp/>-<sp/><ref refid="classver_1_1VBuffer_a151ec260bf0f942b1f67517558fa179b_1a151ec260bf0f942b1f67517558fa179b" kindref="member">m_vertexLayout</ref>.<ref refid="classver_1_1VertexInputLayout_aa4d03e06b3df44cd4b80095f57f01aa2_1aa4d03e06b3df44cd4b80095f57f01aa2" kindref="member">getSizeInBytes</ref>(),<sp/><ref refid="classver_1_1VBuffer_a151ec260bf0f942b1f67517558fa179b_1a151ec260bf0f942b1f67517558fa179b" kindref="member">m_vertexLayout</ref>};</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classver_1_1VBuffer_afe83ae5bb5b31ae7a4ba384be293888a_1afe83ae5bb5b31ae7a4ba384be293888a" refkind="member"><highlight class="normal"><ref refid="classver_1_1VBElementConstView" kindref="compound">VBElementConstView</ref><sp/><ref refid="classver_1_1VBuffer_aaae48c4f23f77bb394551d2422f6f7de_1aaae48c4f23f77bb394551d2422f6f7de" kindref="member">VBuffer::back</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classver_1_1VBuffer" kindref="compound">VBuffer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>this<sp/>)-&gt;<ref refid="classver_1_1VBuffer_aaae48c4f23f77bb394551d2422f6f7de_1aaae48c4f23f77bb394551d2422f6f7de" kindref="member">back</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classver_1_1VBuffer_a0425b493075abb369bc3e8457748be77_1a0425b493075abb369bc3e8457748be77" refkind="member"><highlight class="normal"><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref><sp/><ref refid="classver_1_1VBuffer_a0425b493075abb369bc3e8457748be77_1a0425b493075abb369bc3e8457748be77" kindref="member">VBuffer::front</ref>()<sp/>cond_noex</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>!<ref refid="classver_1_1VBuffer_a04387a33b0b38a4eda64c4d84d314558_1a04387a33b0b38a4eda64c4d84d314558" kindref="member">m_data</ref>.empty(),<sp/></highlight><highlight class="stringliteral">&quot;VertexBuffer<sp/>is<sp/>empty!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref>{<ref refid="classver_1_1VBuffer_a04387a33b0b38a4eda64c4d84d314558_1a04387a33b0b38a4eda64c4d84d314558" kindref="member">m_data</ref>.data(),<sp/><ref refid="classver_1_1VBuffer_a151ec260bf0f942b1f67517558fa179b_1a151ec260bf0f942b1f67517558fa179b" kindref="member">m_vertexLayout</ref>};</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="classver_1_1VBuffer_ac5bd5e9ccff539b352067c944aa0d9c1_1ac5bd5e9ccff539b352067c944aa0d9c1" refkind="member"><highlight class="normal"><ref refid="classver_1_1VBElementConstView" kindref="compound">VBElementConstView</ref><sp/><ref refid="classver_1_1VBuffer_a0425b493075abb369bc3e8457748be77_1a0425b493075abb369bc3e8457748be77" kindref="member">VBuffer::front</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classver_1_1VBuffer" kindref="compound">VBuffer</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>this<sp/>)-&gt;<ref refid="classver_1_1VBuffer_a0425b493075abb369bc3e8457748be77_1a0425b493075abb369bc3e8457748be77" kindref="member">front</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classver_1_1VBuffer_a152c93832b7b9c703c0052798386eeda_1a152c93832b7b9c703c0052798386eeda" refkind="member"><highlight class="normal"><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref><sp/><ref refid="classver_1_1VBuffer_a152c93832b7b9c703c0052798386eeda_1a152c93832b7b9c703c0052798386eeda" kindref="member">VBuffer::operator[]</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>i<sp/>&lt;<sp/>getVertexCount(),<sp/></highlight><highlight class="stringliteral">&quot;Requested<sp/>index<sp/>falls<sp/>out<sp/>of<sp/>bounds!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref>{m_data.data()<sp/>+<sp/>m_vertexLayout.getSizeInBytes()<sp/>*<sp/>i,<sp/>m_vertexLayout};</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classver_1_1VBuffer_ac9f3d85720418420119f516d5bbae90f_1ac9f3d85720418420119f516d5bbae90f" refkind="member"><highlight class="normal"><ref refid="classver_1_1VBElementConstView" kindref="compound">VBElementConstView</ref><sp/><ref refid="classver_1_1VBuffer_a152c93832b7b9c703c0052798386eeda_1a152c93832b7b9c703c0052798386eeda" kindref="member">VBuffer::operator[]</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cond_noex</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classver_1_1VBuffer" kindref="compound">VBuffer</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>*this<sp/>)[i];</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>ver</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/dynamic_vertex_buffer.cpp"/>
  </compounddef>
</doxygen>
