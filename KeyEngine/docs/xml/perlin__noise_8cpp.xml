<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="perlin__noise_8cpp" kind="file" language="C++">
    <compoundname>perlin_noise.cpp</compoundname>
    <includes refid="perlin__noise_8h" local="yes">perlin_noise.h</includes>
    <includes local="no">numeric</includes>
    <includes local="no">ctime</includes>
    <includes local="no">random</includes>
    <includes local="no">algorithm</includes>
    <includes refid="math__utils_8h" local="yes">math_utils.h</includes>
    <incdepgraph>
      <node id="15">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>perlin_noise.h</label>
        <link refid="perlin__noise_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/perlin_noise.cpp</label>
        <link refid="perlin__noise_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>algorithm</label>
      </node>
      <node id="20">
        <label>bitset</label>
      </node>
      <node id="22">
        <label>cinttypes</label>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="21">
        <label>cstddef</label>
      </node>
      <node id="10">
        <label>cstdint</label>
      </node>
      <node id="5">
        <label>ctime</label>
      </node>
      <node id="26">
        <label>execution</label>
      </node>
      <node id="23">
        <label>future</label>
      </node>
      <node id="13">
        <label>iomanip</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="24">
        <label>iterator</label>
      </node>
      <node id="14">
        <label>limits</label>
      </node>
      <node id="4">
        <label>numeric</label>
      </node>
      <node id="6">
        <label>random</label>
      </node>
      <node id="25">
        <label>regex</label>
      </node>
      <node id="19">
        <label>set</label>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="11">
        <label>type_traits</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="perlin__noise_8h" kindref="compound">perlin_noise.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="math__utils_8h" kindref="compound">math_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="classPerlinNoise_af5eca66a372d3ff89584383685b729ce_1af5eca66a372d3ff89584383685b729ce" refkind="member"><highlight class="normal"><ref refid="classPerlinNoise_af5eca66a372d3ff89584383685b729ce_1af5eca66a372d3ff89584383685b729ce" kindref="member">PerlinNoise::PerlinNoise</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed<sp/></highlight><highlight class="comment">/*=<sp/>0*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/><ref refid="namespaceutil_ab7bc28dff3d367e7cf9c472f42112628_1ab7bc28dff3d367e7cf9c472f42112628" kindref="member">util::timeTtoSeconds</ref>(<sp/>time(<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>seed<sp/>=<sp/>(seed<sp/>==<sp/>0)<sp/>?<sp/>t<sp/>:<sp/>seed;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>.resize(<sp/>256<sp/>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>p<sp/>with<sp/>values<sp/>from<sp/>0<sp/>to<sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::iota(<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>.begin(),<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>.end(),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>a<sp/>random<sp/>engine<sp/>with<sp/>seed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::default_random_engine<sp/>engine(<sp/>seed<sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shuffle<sp/>using<sp/>the<sp/>above<sp/>random<sp/>engine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shuffle(<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>.begin(),<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>.end(),<sp/>engine<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duplicate<sp/>the<sp/>permutation<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>.insert(<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>.end(),<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>.begin(),<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>.end()<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classPerlinNoise_afdfbe32029dca3ef7f16e80e5cc29c48_1afdfbe32029dca3ef7f16e80e5cc29c48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPerlinNoise_afdfbe32029dca3ef7f16e80e5cc29c48_1afdfbe32029dca3ef7f16e80e5cc29c48" kindref="member">PerlinNoise::noise</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z<sp/>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>unit<sp/>cube<sp/>that<sp/>contains<sp/>the<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref><sp/>=<sp/>(int)<sp/>floor(<sp/>x<sp/>)<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Y<sp/>=<sp/>(int)<sp/>floor(<sp/>y<sp/>)<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Z<sp/>=<sp/>(int)<sp/>floor(<sp/>z<sp/>)<sp/>&amp;<sp/>255;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>relative<sp/>x,<sp/>y,<sp/>z<sp/>of<sp/>point<sp/>in<sp/>cube</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>-=<sp/>floor(x);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>-=<sp/>floor(y);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>z<sp/>-=<sp/>floor(z);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>fade<sp/>curves<sp/>for<sp/>each<sp/>of<sp/>x,<sp/>y,<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u<sp/>=<sp/><ref refid="classPerlinNoise_aa181e97bc2c0e0c1456c13194f9f4995_1aa181e97bc2c0e0c1456c13194f9f4995" kindref="member">fade</ref>(x);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="classPerlinNoise_aa181e97bc2c0e0c1456c13194f9f4995_1aa181e97bc2c0e0c1456c13194f9f4995" kindref="member">fade</ref>(y);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>w<sp/>=<sp/><ref refid="classPerlinNoise_aa181e97bc2c0e0c1456c13194f9f4995_1aa181e97bc2c0e0c1456c13194f9f4995" kindref="member">fade</ref>(z);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hash<sp/>coordinates<sp/>of<sp/>the<sp/>8<sp/>cube<sp/>corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>A<sp/>=<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>]<sp/>+<sp/>Y;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AA<sp/>=<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[A]<sp/>+<sp/>Z;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AB<sp/>=<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[A<sp/>+<sp/>1]<sp/>+<sp/>Z;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>B<sp/>=<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref><sp/>+<sp/>1]<sp/>+<sp/>Y;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BA<sp/>=<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[B]<sp/>+<sp/>Z;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BB<sp/>=<sp/><ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[B<sp/>+<sp/>1]<sp/>+<sp/>Z;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>blended<sp/>results<sp/>from<sp/>8<sp/>corners<sp/>of<sp/>cube</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>util::lerp(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util::lerp(</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util::lerp(<ref refid="classPerlinNoise_a2113b401b3cdc24d567626461cbb5b7e_1a2113b401b3cdc24d567626461cbb5b7e" kindref="member">grad</ref>(<ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[AA],<sp/>x,<sp/>y,<sp/>z),<sp/><ref refid="classPerlinNoise_a2113b401b3cdc24d567626461cbb5b7e_1a2113b401b3cdc24d567626461cbb5b7e" kindref="member">grad</ref>(<ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[BA],<sp/>x<sp/>-<sp/>1,<sp/>y,<sp/>z),<sp/>u),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util::lerp(<ref refid="classPerlinNoise_a2113b401b3cdc24d567626461cbb5b7e_1a2113b401b3cdc24d567626461cbb5b7e" kindref="member">grad</ref>(<ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[AB],<sp/>x,<sp/>y<sp/>-<sp/>1,<sp/>z),<sp/><ref refid="classPerlinNoise_a2113b401b3cdc24d567626461cbb5b7e_1a2113b401b3cdc24d567626461cbb5b7e" kindref="member">grad</ref>(<ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[BB],<sp/>x<sp/>-<sp/>1,<sp/>y<sp/>-<sp/>1,<sp/>z),<sp/>u),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util::lerp(</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util::lerp(<ref refid="classPerlinNoise_a2113b401b3cdc24d567626461cbb5b7e_1a2113b401b3cdc24d567626461cbb5b7e" kindref="member">grad</ref>(<ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[AA<sp/>+<sp/>1],<sp/>x,<sp/>y,<sp/>z<sp/>-<sp/>1),<sp/><ref refid="classPerlinNoise_a2113b401b3cdc24d567626461cbb5b7e_1a2113b401b3cdc24d567626461cbb5b7e" kindref="member">grad</ref>(<ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[BA<sp/>+<sp/>1],<sp/>x<sp/>-<sp/>1,<sp/>y,<sp/>z<sp/>-<sp/>1),<sp/>u),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util::lerp(<ref refid="classPerlinNoise_a2113b401b3cdc24d567626461cbb5b7e_1a2113b401b3cdc24d567626461cbb5b7e" kindref="member">grad</ref>(<ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[AB<sp/>+<sp/>1],<sp/>x,<sp/>y<sp/>-<sp/>1,<sp/>z<sp/>-<sp/>1),<sp/><ref refid="classPerlinNoise_a2113b401b3cdc24d567626461cbb5b7e_1a2113b401b3cdc24d567626461cbb5b7e" kindref="member">grad</ref>(<ref refid="classPerlinNoise_a9071eaf9f8a14597c9fa17e12e6b2f6f_1a9071eaf9f8a14597c9fa17e12e6b2f6f" kindref="member">m_permutationVec</ref>[BB<sp/>+<sp/>1],<sp/>x<sp/>-<sp/>1,<sp/>y<sp/>-<sp/>1,<sp/>z<sp/>-<sp/>1),<sp/>u),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>res<sp/>+<sp/>1.0<sp/>)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classPerlinNoise_aa181e97bc2c0e0c1456c13194f9f4995_1aa181e97bc2c0e0c1456c13194f9f4995" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPerlinNoise_aa181e97bc2c0e0c1456c13194f9f4995_1aa181e97bc2c0e0c1456c13194f9f4995" kindref="member">PerlinNoise::fade</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>*<sp/>t<sp/>*<sp/>t<sp/>*<sp/>(<sp/>t<sp/>*<sp/>(<sp/>t<sp/>*<sp/>6<sp/>-<sp/>15<sp/>)<sp/>+<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classPerlinNoise_a2113b401b3cdc24d567626461cbb5b7e_1a2113b401b3cdc24d567626461cbb5b7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classPerlinNoise_a2113b401b3cdc24d567626461cbb5b7e_1a2113b401b3cdc24d567626461cbb5b7e" kindref="member">PerlinNoise::grad</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z<sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>hash<sp/>&amp;<sp/>15;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>lower<sp/>4<sp/>bits<sp/>of<sp/>hash<sp/>into<sp/>12<sp/>gradient<sp/>directions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>h<sp/>&lt;<sp/>8<sp/>?</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>h<sp/>&lt;<sp/>4<sp/>?</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>==<sp/>12<sp/>||<sp/>h<sp/>==<sp/>14<sp/>?<sp/>x<sp/>:<sp/>z;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>(h<sp/>&amp;<sp/>1)<sp/>==<sp/>0<sp/>?<sp/>u<sp/>:<sp/>-u<sp/>)<sp/>+<sp/>(<sp/>(h<sp/>&amp;<sp/>2)<sp/>==<sp/>0<sp/>?<sp/>v<sp/>:<sp/>-v<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/perlin_noise.cpp"/>
  </compounddef>
</doxygen>
