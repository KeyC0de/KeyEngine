<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classKeyboard" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Keyboard</compoundname>
    <basecompoundref refid="classNonCopyable" prot="private" virt="non-virtual">NonCopyable</basecompoundref>
    <includes refid="keyboard_8h" local="no">keyboard.h</includes>
    <innerclass refid="classKeyboard_1_1Event" prot="public">Keyboard::Event</innerclass>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classKeyboard_a553f958a25683445088050a69d3de8e9_1a553f958a25683445088050a69d3de8e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Window</definition>
        <argsstring></argsstring>
        <name>Window</name>
        <qualifiedname>Keyboard::Window</qualifiedname>
        <param>
          <type><ref refid="classWindow" kindref="compound">Window</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="14" column="14" bodyfile="inc/keyboard.h" bodystart="14" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classKeyboard_ac79b8de4d65d91e281a4a7c04e4c15ea_1ac79b8de4d65d91e281a4a7c04e4c15ea" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Keyboard::s_nKeys</definition>
        <argsstring></argsstring>
        <name>s_nKeys</name>
        <qualifiedname>Keyboard::s_nKeys</qualifiedname>
        <initializer>= 256u</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="16" column="38" bodyfile="inc/keyboard.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classKeyboard_a363f5fb18b9ae168c4fc7bce08126f31_1a363f5fb18b9ae168c4fc7bce08126f31" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Keyboard::s_maxBufferSize</definition>
        <argsstring></argsstring>
        <name>s_maxBufferSize</name>
        <qualifiedname>Keyboard::s_maxBufferSize</qualifiedname>
        <initializer>= 16u</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="17" column="38" bodyfile="inc/keyboard.h" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classKeyboard_a807ad6015d42826612926d20bec1aa21_1a807ad6015d42826612926d20bec1aa21" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Keyboard::m_bAutorepeat</definition>
        <argsstring></argsstring>
        <name>m_bAutorepeat</name>
        <qualifiedname>Keyboard::m_bAutorepeat</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="56" column="6" bodyfile="inc/keyboard.h" bodystart="56" bodyend="-1"/>
        <referencedby refid="classKeyboard_ab065f64c957e5073f2967a9c5100c895_1ab065f64c957e5073f2967a9c5100c895" compoundref="keyboard_8cpp" startline="81" endline="84">disableAutorepeat</referencedby>
        <referencedby refid="classKeyboard_aaa659e9faa6b0986b3ae4bf288d2b21c_1aaa659e9faa6b0986b3ae4bf288d2b21c" compoundref="keyboard_8cpp" startline="76" endline="79">enableAutorepeat</referencedby>
        <referencedby refid="classKeyboard_a6d8845aa292185a0513ee537b0c2fbc4_1a6d8845aa292185a0513ee537b0c2fbc4" compoundref="keyboard_8cpp" startline="86" endline="89">isAutorepeatEnabled</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classKeyboard_ac2996c1f7e6699c6dd39a255081e97bc_1ac2996c1f7e6699c6dd39a255081e97bc" prot="public" static="no" mutable="no">
        <type>std::bitset&lt; <ref refid="classKeyboard_ac79b8de4d65d91e281a4a7c04e4c15ea_1ac79b8de4d65d91e281a4a7c04e4c15ea" kindref="member">s_nKeys</ref> &gt;</type>
        <definition>std::bitset&lt;s_nKeys&gt; Keyboard::m_keyStates</definition>
        <argsstring></argsstring>
        <name>m_keyStates</name>
        <qualifiedname>Keyboard::m_keyStates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="57" column="13" bodyfile="inc/keyboard.h" bodystart="57" bodyend="-1"/>
        <referencedby refid="classKeyboard_a9ae942086b451980d60cfc9167ca42f0_1a9ae942086b451980d60cfc9167ca42f0" compoundref="keyboard_8cpp" startline="111" endline="114">clearKeyStates</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classKeyboard_a421038ebec3114798c6b7a011d8e2727_1a421038ebec3114798c6b7a011d8e2727" prot="public" static="no" mutable="no">
        <type>std::queue&lt; <ref refid="classKeyboard_1_1Event" kindref="compound">Keyboard::Event</ref> &gt;</type>
        <definition>std::queue&lt;Keyboard::Event&gt; Keyboard::m_eventQueue</definition>
        <argsstring></argsstring>
        <name>m_eventQueue</name>
        <qualifiedname>Keyboard::m_eventQueue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="58" column="12" bodyfile="inc/keyboard.h" bodystart="58" bodyend="-1"/>
        <referencedby refid="classKeyboard_a121d5336a3817d5cc24bb694b2135cdb_1a121d5336a3817d5cc24bb694b2135cdb" compoundref="keyboard_8cpp" startline="44" endline="47">flushEventQueue</referencedby>
        <referencedby refid="classKeyboard_aa258f4f3c83b007b99fd183f515bb1c2_1aa258f4f3c83b007b99fd183f515bb1c2" compoundref="keyboard_8cpp" startline="39" endline="42">isEventQueueEmpty</referencedby>
        <referencedby refid="classKeyboard_aa6b997459f8fd4754e8a0083cf7cbc75_1aa6b997459f8fd4754e8a0083cf7cbc75" compoundref="keyboard_8cpp" startline="28" endline="37">readEventQueue</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classKeyboard_ad1ba69df5506a23db275e51301c19837_1ad1ba69df5506a23db275e51301c19837" prot="public" static="no" mutable="no">
        <type>std::queue&lt; char &gt;</type>
        <definition>std::queue&lt;char&gt; Keyboard::m_charBuffer</definition>
        <argsstring></argsstring>
        <name>m_charBuffer</name>
        <qualifiedname>Keyboard::m_charBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="59" column="12" bodyfile="inc/keyboard.h" bodystart="59" bodyend="-1"/>
        <referencedby refid="classKeyboard_a936b9935e42566fbacb1fbd4e84dfcc6_1a936b9935e42566fbacb1fbd4e84dfcc6" compoundref="keyboard_8cpp" startline="65" endline="68">flushCharBuffer</referencedby>
        <referencedby refid="classKeyboard_a359bd32181bf710f448c5f72eeae1e01_1a359bd32181bf710f448c5f72eeae1e01" compoundref="keyboard_8cpp" startline="60" endline="63">isCharBufferEmpty</referencedby>
        <referencedby refid="classKeyboard_a10f09f893d2ee5de0382355051f87c46_1a10f09f893d2ee5de0382355051f87c46" compoundref="keyboard_8cpp" startline="49" endline="58">readCharBuffer</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classKeyboard_a593b2dc485da39d18afdef3d38c4e22c_1a593b2dc485da39d18afdef3d38c4e22c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Keyboard::Keyboard</definition>
        <argsstring>()=default</argsstring>
        <name>Keyboard</name>
        <qualifiedname>Keyboard::Keyboard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_a638ff76869499016bfa2a1334a3fe4d4_1a638ff76869499016bfa2a1334a3fe4d4" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Keyboard::onKeyPressed</definition>
        <argsstring>(unsigned char keycode) noexcept</argsstring>
        <name>onKeyPressed</name>
        <qualifiedname>Keyboard::onKeyPressed</qualifiedname>
        <param>
          <type>unsigned char</type>
          <declname>keycode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="87" column="6" bodyfile="src/keyboard.cpp" bodystart="91" bodyend="96"/>
        <referencedby refid="classWindow_afcc33d5d00fe7a117049c347a7c800d4_1afcc33d5d00fe7a117049c347a7c800d4" compoundref="window_8cpp" startline="794" endline="994">Window::windowProc_impl2d</referencedby>
        <referencedby refid="classWindow_a2821cd9dba5a27e88f90808281444e93_1a2821cd9dba5a27e88f90808281444e93" compoundref="window_8cpp" startline="996" endline="1569">Window::windowProc_impl3d</referencedby>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_a7f0d6d231047aa54ee05011287422b53_1a7f0d6d231047aa54ee05011287422b53" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Keyboard::onKeyReleased</definition>
        <argsstring>(unsigned char keycode) noexcept</argsstring>
        <name>onKeyReleased</name>
        <qualifiedname>Keyboard::onKeyReleased</qualifiedname>
        <param>
          <type>unsigned char</type>
          <declname>keycode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="88" column="6" bodyfile="src/keyboard.cpp" bodystart="98" bodyend="103"/>
        <referencedby refid="classWindow_afcc33d5d00fe7a117049c347a7c800d4_1afcc33d5d00fe7a117049c347a7c800d4" compoundref="window_8cpp" startline="794" endline="994">Window::windowProc_impl2d</referencedby>
        <referencedby refid="classWindow_a2821cd9dba5a27e88f90808281444e93_1a2821cd9dba5a27e88f90808281444e93" compoundref="window_8cpp" startline="996" endline="1569">Window::windowProc_impl3d</referencedby>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_a2cee5c3d01ae16d6e4ce2fc59c13cbc7_1a2cee5c3d01ae16d6e4ce2fc59c13cbc7" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Keyboard::onChar</definition>
        <argsstring>(char c) noexcept</argsstring>
        <name>onChar</name>
        <qualifiedname>Keyboard::onChar</qualifiedname>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="89" column="6" bodyfile="src/keyboard.cpp" bodystart="105" bodyend="109"/>
        <referencedby refid="classWindow_afcc33d5d00fe7a117049c347a7c800d4_1afcc33d5d00fe7a117049c347a7c800d4" compoundref="window_8cpp" startline="794" endline="994">Window::windowProc_impl2d</referencedby>
        <referencedby refid="classWindow_a2821cd9dba5a27e88f90808281444e93_1a2821cd9dba5a27e88f90808281444e93" compoundref="window_8cpp" startline="996" endline="1569">Window::windowProc_impl3d</referencedby>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_a9ae942086b451980d60cfc9167ca42f0_1a9ae942086b451980d60cfc9167ca42f0" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Keyboard::clearKeyStates</definition>
        <argsstring>() noexcept</argsstring>
        <name>clearKeyStates</name>
        <qualifiedname>Keyboard::clearKeyStates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="90" column="6" bodyfile="src/keyboard.cpp" bodystart="111" bodyend="114"/>
        <referencedby refid="classWindow_afcc33d5d00fe7a117049c347a7c800d4_1afcc33d5d00fe7a117049c347a7c800d4" compoundref="window_8cpp" startline="794" endline="994">Window::windowProc_impl2d</referencedby>
        <referencedby refid="classWindow_a2821cd9dba5a27e88f90808281444e93_1a2821cd9dba5a27e88f90808281444e93" compoundref="window_8cpp" startline="996" endline="1569">Window::windowProc_impl3d</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classKeyboard_ad2361f937a9e6372893721b67b0e4371_1ad2361f937a9e6372893721b67b0e4371" prot="private" static="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Keyboard::trimBuffer</definition>
        <argsstring>(std::queue&lt; T &gt; &amp;buf) noexcept</argsstring>
        <name>trimBuffer</name>
        <qualifiedname>Keyboard::trimBuffer</qualifiedname>
        <param>
          <type>std::queue&lt; T &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>check whether the provided buffer needs trimming </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="65" column="13" bodyfile="src/keyboard.cpp" bodystart="117" bodyend="123"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classKeyboard_ac9b39b3be8a3b61476aaa0897c6b0617_1ac9b39b3be8a3b61476aaa0897c6b0617" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Keyboard::~Keyboard</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~Keyboard</name>
        <qualifiedname>Keyboard::~Keyboard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_ae66e65cc1bbddc7ae3df2431eda69f87_1ae66e65cc1bbddc7ae3df2431eda69f87" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Keyboard::Keyboard</definition>
        <argsstring>(Keyboard &amp;&amp;rhs) noexcept</argsstring>
        <name>Keyboard</name>
        <qualifiedname>Keyboard::Keyboard</qualifiedname>
        <param>
          <type><ref refid="classKeyboard" kindref="compound">Keyboard</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="68" column="1" bodyfile="src/keyboard.cpp" bodystart="4" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_a07819d49bf27bbc7238ec2c1089809ff_1a07819d49bf27bbc7238ec2c1089809ff" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classKeyboard" kindref="compound">Keyboard</ref> &amp;</type>
        <definition>Keyboard &amp; Keyboard::operator=</definition>
        <argsstring>(Keyboard &amp;&amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>Keyboard::operator=</qualifiedname>
        <param>
          <type><ref refid="classKeyboard" kindref="compound">Keyboard</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="69" column="10" bodyfile="src/keyboard.cpp" bodystart="16" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_af03d770546134b5a8c1857eae31cb83a_1af03d770546134b5a8c1857eae31cb83a" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Keyboard::isKeyPressed</definition>
        <argsstring>(unsigned char keycode) const noexcept</argsstring>
        <name>isKeyPressed</name>
        <qualifiedname>Keyboard::isKeyPressed</qualifiedname>
        <param>
          <type>unsigned char</type>
          <declname>keycode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="72" column="6" bodyfile="src/keyboard.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_aa6b997459f8fd4754e8a0083cf7cbc75_1aa6b997459f8fd4754e8a0083cf7cbc75" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classKeyboard_1_1Event" kindref="compound">Keyboard::Event</ref> &gt;</type>
        <definition>std::optional&lt; Keyboard::Event &gt; Keyboard::readEventQueue</definition>
        <argsstring>() noexcept</argsstring>
        <name>readEventQueue</name>
        <qualifiedname>Keyboard::readEventQueue</qualifiedname>
        <briefdescription>
<para>read event from the queue if any </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="74" column="15" bodyfile="src/keyboard.cpp" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_aa258f4f3c83b007b99fd183f515bb1c2_1aa258f4f3c83b007b99fd183f515bb1c2" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Keyboard::isEventQueueEmpty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isEventQueueEmpty</name>
        <qualifiedname>Keyboard::isEventQueueEmpty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="75" column="6" bodyfile="src/keyboard.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_a121d5336a3817d5cc24bb694b2135cdb_1a121d5336a3817d5cc24bb694b2135cdb" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Keyboard::flushEventQueue</definition>
        <argsstring>() noexcept</argsstring>
        <name>flushEventQueue</name>
        <qualifiedname>Keyboard::flushEventQueue</qualifiedname>
        <briefdescription>
<para>clear events </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="77" column="6" bodyfile="src/keyboard.cpp" bodystart="44" bodyend="47"/>
        <referencedby refid="classKeyboard_a03eac10756813832e693a071dc0fb8ca_1a03eac10756813832e693a071dc0fb8ca" compoundref="keyboard_8cpp" startline="70" endline="74">flushAll</referencedby>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_a10f09f893d2ee5de0382355051f87c46_1a10f09f893d2ee5de0382355051f87c46" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::optional&lt; char &gt;</type>
        <definition>std::optional&lt; char &gt; Keyboard::readCharBuffer</definition>
        <argsstring>() noexcept</argsstring>
        <name>readCharBuffer</name>
        <qualifiedname>Keyboard::readCharBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="78" column="15" bodyfile="src/keyboard.cpp" bodystart="49" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_a359bd32181bf710f448c5f72eeae1e01_1a359bd32181bf710f448c5f72eeae1e01" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Keyboard::isCharBufferEmpty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isCharBufferEmpty</name>
        <qualifiedname>Keyboard::isCharBufferEmpty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="79" column="6" bodyfile="src/keyboard.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_a936b9935e42566fbacb1fbd4e84dfcc6_1a936b9935e42566fbacb1fbd4e84dfcc6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Keyboard::flushCharBuffer</definition>
        <argsstring>() noexcept</argsstring>
        <name>flushCharBuffer</name>
        <qualifiedname>Keyboard::flushCharBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="80" column="6" bodyfile="src/keyboard.cpp" bodystart="65" bodyend="68"/>
        <referencedby refid="classKeyboard_a03eac10756813832e693a071dc0fb8ca_1a03eac10756813832e693a071dc0fb8ca" compoundref="keyboard_8cpp" startline="70" endline="74">flushAll</referencedby>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_a03eac10756813832e693a071dc0fb8ca_1a03eac10756813832e693a071dc0fb8ca" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Keyboard::flushAll</definition>
        <argsstring>() noexcept</argsstring>
        <name>flushAll</name>
        <qualifiedname>Keyboard::flushAll</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="81" column="6" bodyfile="src/keyboard.cpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_aaa659e9faa6b0986b3ae4bf288d2b21c_1aaa659e9faa6b0986b3ae4bf288d2b21c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Keyboard::enableAutorepeat</definition>
        <argsstring>() noexcept</argsstring>
        <name>enableAutorepeat</name>
        <qualifiedname>Keyboard::enableAutorepeat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="83" column="6" bodyfile="src/keyboard.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_ab065f64c957e5073f2967a9c5100c895_1ab065f64c957e5073f2967a9c5100c895" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Keyboard::disableAutorepeat</definition>
        <argsstring>() noexcept</argsstring>
        <name>disableAutorepeat</name>
        <qualifiedname>Keyboard::disableAutorepeat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="84" column="6" bodyfile="src/keyboard.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classKeyboard_a6d8845aa292185a0513ee537b0c2fbc4_1a6d8845aa292185a0513ee537b0c2fbc4" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Keyboard::isAutorepeatEnabled</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isAutorepeatEnabled</name>
        <qualifiedname>Keyboard::isAutorepeatEnabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/keyboard.h" line="85" column="6" bodyfile="src/keyboard.cpp" bodystart="86" bodyend="89"/>
        <referencedby refid="classWindow_afcc33d5d00fe7a117049c347a7c800d4_1afcc33d5d00fe7a117049c347a7c800d4" compoundref="window_8cpp" startline="794" endline="994">Window::windowProc_impl2d</referencedby>
        <referencedby refid="classWindow_a2821cd9dba5a27e88f90808281444e93_1a2821cd9dba5a27e88f90808281444e93" compoundref="window_8cpp" startline="996" endline="1569">Window::windowProc_impl3d</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Keyboard</label>
        <link refid="classKeyboard"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NonCopyable</label>
        <link refid="classNonCopyable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Keyboard</label>
        <link refid="classKeyboard"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NonCopyable</label>
        <link refid="classNonCopyable"/>
      </node>
    </collaborationgraph>
    <location file="inc/keyboard.h" line="11" column="1" bodyfile="inc/keyboard.h" bodystart="13" bodyend="91"/>
    <listofallmembers>
      <member refid="classKeyboard_a9ae942086b451980d60cfc9167ca42f0_1a9ae942086b451980d60cfc9167ca42f0" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>clearKeyStates</name></member>
      <member refid="classKeyboard_ab065f64c957e5073f2967a9c5100c895_1ab065f64c957e5073f2967a9c5100c895" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>disableAutorepeat</name></member>
      <member refid="classKeyboard_aaa659e9faa6b0986b3ae4bf288d2b21c_1aaa659e9faa6b0986b3ae4bf288d2b21c" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>enableAutorepeat</name></member>
      <member refid="classKeyboard_a03eac10756813832e693a071dc0fb8ca_1a03eac10756813832e693a071dc0fb8ca" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>flushAll</name></member>
      <member refid="classKeyboard_a936b9935e42566fbacb1fbd4e84dfcc6_1a936b9935e42566fbacb1fbd4e84dfcc6" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>flushCharBuffer</name></member>
      <member refid="classKeyboard_a121d5336a3817d5cc24bb694b2135cdb_1a121d5336a3817d5cc24bb694b2135cdb" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>flushEventQueue</name></member>
      <member refid="classKeyboard_a6d8845aa292185a0513ee537b0c2fbc4_1a6d8845aa292185a0513ee537b0c2fbc4" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>isAutorepeatEnabled</name></member>
      <member refid="classKeyboard_a359bd32181bf710f448c5f72eeae1e01_1a359bd32181bf710f448c5f72eeae1e01" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>isCharBufferEmpty</name></member>
      <member refid="classKeyboard_aa258f4f3c83b007b99fd183f515bb1c2_1aa258f4f3c83b007b99fd183f515bb1c2" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>isEventQueueEmpty</name></member>
      <member refid="classKeyboard_af03d770546134b5a8c1857eae31cb83a_1af03d770546134b5a8c1857eae31cb83a" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>isKeyPressed</name></member>
      <member refid="classKeyboard_a593b2dc485da39d18afdef3d38c4e22c_1a593b2dc485da39d18afdef3d38c4e22c" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>Keyboard</name></member>
      <member refid="classKeyboard_ae66e65cc1bbddc7ae3df2431eda69f87_1ae66e65cc1bbddc7ae3df2431eda69f87" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>Keyboard</name></member>
      <member refid="classKeyboard_a807ad6015d42826612926d20bec1aa21_1a807ad6015d42826612926d20bec1aa21" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>m_bAutorepeat</name></member>
      <member refid="classKeyboard_ad1ba69df5506a23db275e51301c19837_1ad1ba69df5506a23db275e51301c19837" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>m_charBuffer</name></member>
      <member refid="classKeyboard_a421038ebec3114798c6b7a011d8e2727_1a421038ebec3114798c6b7a011d8e2727" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>m_eventQueue</name></member>
      <member refid="classKeyboard_ac2996c1f7e6699c6dd39a255081e97bc_1ac2996c1f7e6699c6dd39a255081e97bc" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>m_keyStates</name></member>
      <member refid="classNonCopyable_a809b6e4ade7ae32f6d248f2a3b783d45_1a809b6e4ade7ae32f6d248f2a3b783d45" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>NonCopyable</name></member>
      <member refid="classNonCopyable_a15aa3015488bb26c47ded914cb630cf5_1a15aa3015488bb26c47ded914cb630cf5" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>NonCopyable</name></member>
      <member refid="classNonCopyable_a487646562ae30ece23d7638f2aed1dde_1a487646562ae30ece23d7638f2aed1dde" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>NonCopyable</name></member>
      <member refid="classNonCopyable_af716e4cfb79381710ef4490414939ae9_1af716e4cfb79381710ef4490414939ae9" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>NonCopyable</name></member>
      <member refid="classKeyboard_a2cee5c3d01ae16d6e4ce2fc59c13cbc7_1a2cee5c3d01ae16d6e4ce2fc59c13cbc7" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>onChar</name></member>
      <member refid="classKeyboard_a638ff76869499016bfa2a1334a3fe4d4_1a638ff76869499016bfa2a1334a3fe4d4" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>onKeyPressed</name></member>
      <member refid="classKeyboard_a7f0d6d231047aa54ee05011287422b53_1a7f0d6d231047aa54ee05011287422b53" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>onKeyReleased</name></member>
      <member refid="classKeyboard_a07819d49bf27bbc7238ec2c1089809ff_1a07819d49bf27bbc7238ec2c1089809ff" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>operator=</name></member>
      <member refid="classNonCopyable_af4788b57da9a9faa570c754c22c724f5_1af4788b57da9a9faa570c754c22c724f5" prot="private" virt="non-virtual" ambiguityscope="NonCopyable::"><scope>Keyboard</scope><name>operator=</name></member>
      <member refid="classNonCopyable_ae032ca32cda9c836c27b28eb6a087d18_1ae032ca32cda9c836c27b28eb6a087d18" prot="private" virt="non-virtual" ambiguityscope="NonCopyable::"><scope>Keyboard</scope><name>operator=</name></member>
      <member refid="classNonCopyable_af81816bd4c2c4421a6eab98843ead6e4_1af81816bd4c2c4421a6eab98843ead6e4" prot="private" virt="non-virtual" ambiguityscope="NonCopyable::"><scope>Keyboard</scope><name>operator=</name></member>
      <member refid="classKeyboard_a10f09f893d2ee5de0382355051f87c46_1a10f09f893d2ee5de0382355051f87c46" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>readCharBuffer</name></member>
      <member refid="classKeyboard_aa6b997459f8fd4754e8a0083cf7cbc75_1aa6b997459f8fd4754e8a0083cf7cbc75" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>readEventQueue</name></member>
      <member refid="classKeyboard_a363f5fb18b9ae168c4fc7bce08126f31_1a363f5fb18b9ae168c4fc7bce08126f31" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>s_maxBufferSize</name></member>
      <member refid="classKeyboard_ac79b8de4d65d91e281a4a7c04e4c15ea_1ac79b8de4d65d91e281a4a7c04e4c15ea" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>s_nKeys</name></member>
      <member refid="classKeyboard_ad2361f937a9e6372893721b67b0e4371_1ad2361f937a9e6372893721b67b0e4371" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>trimBuffer</name></member>
      <member refid="classKeyboard_a553f958a25683445088050a69d3de8e9_1a553f958a25683445088050a69d3de8e9" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>Window</name></member>
      <member refid="classKeyboard_ac9b39b3be8a3b61476aaa0897c6b0617_1ac9b39b3be8a3b61476aaa0897c6b0617" prot="public" virt="non-virtual"><scope>Keyboard</scope><name>~Keyboard</name></member>
      <member refid="classNonCopyable_a3e461fb46c72b9a5af7df7e74dbd899e_1a3e461fb46c72b9a5af7df7e74dbd899e" prot="private" virt="non-virtual"><scope>Keyboard</scope><name>~NonCopyable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
