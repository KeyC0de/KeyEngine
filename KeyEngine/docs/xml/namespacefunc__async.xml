<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="namespacefunc__async" kind="namespace" language="C++">
    <compoundname>func_async</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacefunc__async_a224c931f9dead8e231b14ceb26da3617_1a224c931f9dead8e231b14ceb26da3617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void func_async::doPeriodically</definition>
        <argsstring>(nonstd::stop_token st, const std::function&lt; void(void)&gt; &amp;f, const size_t intervalMs, const bool now)</argsstring>
        <name>doPeriodically</name>
        <qualifiedname>func_async::doPeriodically</qualifiedname>
        <param>
          <type>nonstd::stop_token</type>
          <declname>st</declname>
        </param>
        <param>
          <type>const std::function&lt; void(void)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>intervalMs</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>now</declname>
        </param>
        <briefdescription>
<para>like a timer event <mdash/> executes void(*f)() function at periodic (ms) intervals </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>now : if you want to execute first up now </para>
</listitem>
</itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/thread_poolj.cpp" line="143" column="6" bodyfile="src/thread_poolj.cpp" bodystart="143" bodyend="164" declfile="inc/thread_poolj.h" declline="92" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacefunc__async_a5f3e4ca374f7de72954d29184be8f06d_1a5f3e4ca374f7de72954d29184be8f06d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void func_async::doLater</definition>
        <argsstring>(nonstd::stop_token st, const std::function&lt; void(void)&gt; &amp;f, const size_t intervalMs)</argsstring>
        <name>doLater</name>
        <qualifiedname>func_async::doLater</qualifiedname>
        <param>
          <type>nonstd::stop_token</type>
          <declname>st</declname>
        </param>
        <param>
          <type>const std::function&lt; void(void)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>intervalMs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/thread_poolj.cpp" line="166" column="6" bodyfile="src/thread_poolj.cpp" bodystart="166" bodyend="172" declfile="inc/thread_poolj.h" declline="93" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="inc/thread_poolj.h" line="87" column="1"/>
  </compounddef>
</doxygen>
