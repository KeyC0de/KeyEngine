<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="message__queue__bus__dispatcher_8cpp" kind="file" language="C++">
    <compoundname>message_queue_bus_dispatcher.cpp</compoundname>
    <includes refid="message__queue__bus__dispatcher_8h" local="yes">message_queue_bus_dispatcher.h</includes>
    <includes refid="message_8h" local="yes">message.h</includes>
    <includes refid="entity_8h" local="yes">entity.h</includes>
    <includes refid="assertions__console_8h" local="yes">assertions_console.h</includes>
    <incdepgraph>
      <node id="13">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>entity.h</label>
        <link refid="entity_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>entity_defines.h</label>
        <link refid="entity__defines_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>message.h</label>
        <link refid="message_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>message_queue_bus_dispatcher.h</label>
        <link refid="message__queue__bus__dispatcher_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="1">
        <label>src/message_queue_bus_dispatcher.cpp</label>
        <link refid="message__queue__bus__dispatcher_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>condition_variable</label>
      </node>
      <node id="12">
        <label>cstdint</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="4">
        <label>mutex</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="message__queue__bus__dispatcher_8h" kindref="compound">message_queue_bus_dispatcher.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="message_8h" kindref="compound">message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="entity_8h" kindref="compound">entity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assertions__console_8h" kindref="compound">assertions_console.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classMessageBus_a5e132536c9b32703ec842128d480b258_1a5e132536c9b32703ec842128d480b258" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMessageBus_a5e132536c9b32703ec842128d480b258_1a5e132536c9b32703ec842128d480b258" kindref="member">MessageBus::removeFrontByBackSwap</ref>()</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(<sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.front(),<sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.back()<sp/>);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.pop_back();</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classMessageBus_aa390b81429943cee2c8cf097bd58b2d4_1aa390b81429943cee2c8cf097bd58b2d4" refkind="member"><highlight class="normal"><ref refid="classMessageBus_a7598f2a15c66346f853d6d13de21757b_1a7598f2a15c66346f853d6d13de21757b" kindref="member">MessageBus::MessageBus</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initialCapacity<sp/>)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vec(initialCapacity)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classMessageBus_a16f18f8c4af54210848ca547f6d9ad06_1a16f18f8c4af54210848ca547f6d9ad06" refkind="member"><highlight class="normal"><ref refid="classMessageBus_a7598f2a15c66346f853d6d13de21757b_1a7598f2a15c66346f853d6d13de21757b" kindref="member">MessageBus::MessageBus</ref>(<sp/><ref refid="classMessageBus" kindref="compound">MessageBus</ref><sp/>&amp;&amp;rhs<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vec{std::move(<sp/>rhs.m_vec<sp/>)},</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>m_size(rhs.m_size)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classMessageBus_a6e4a6e5d8018423429802e821f1d5a03_1a6e4a6e5d8018423429802e821f1d5a03" refkind="member"><highlight class="normal"><ref refid="classMessageBus" kindref="compound">MessageBus</ref>&amp;<sp/><ref refid="classMessageBus_a6e4a6e5d8018423429802e821f1d5a03_1a6e4a6e5d8018423429802e821f1d5a03" kindref="member">MessageBus::operator=</ref>(<sp/><ref refid="classMessageBus" kindref="compound">MessageBus</ref><sp/>&amp;&amp;rhs<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMessageBus" kindref="compound">MessageBus</ref><sp/>tmp{std::move(<sp/>rhs<sp/>)};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>tmp<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classMessageBus_a06b68b60b6903a39140224548c788c37_1a06b68b60b6903a39140224548c788c37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMessageBus_a06b68b60b6903a39140224548c788c37_1a06b68b60b6903a39140224548c788c37" kindref="member">MessageBus::enqueue</ref>(<sp/><ref refid="classMessage" kindref="compound">Message</ref><sp/>*msg<sp/>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lg{<ref refid="classMessageBus_a3ae7f433af1e96050f2afaeca274b153_1a3ae7f433af1e96050f2afaeca274b153" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.emplace_back(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classMessageBus_ab8ac0e1b645ed452eef6669f538afd84_1ab8ac0e1b645ed452eef6669f538afd84" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMessageBus_a9d24d8cdd4d668c5556967696c65fba8_1a9d24d8cdd4d668c5556967696c65fba8" kindref="member">m_cond</ref>.notify_one();</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classMessageBus_a85ea7c0044a40d0e09434362eb140b7f_1a85ea7c0044a40d0e09434362eb140b7f" refkind="member"><highlight class="normal">std::unique_ptr&lt;Message&gt;<sp/><ref refid="classMessageBus_a85ea7c0044a40d0e09434362eb140b7f_1a85ea7c0044a40d0e09434362eb140b7f" kindref="member">MessageBus::dequeue</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>ul{<ref refid="classMessageBus_a3ae7f433af1e96050f2afaeca274b153_1a3ae7f433af1e96050f2afaeca274b153" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.empty()<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error{</highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>pop<sp/>from<sp/>empty<sp/>Queue.&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.empty()<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMessageBus_a9d24d8cdd4d668c5556967696c65fba8_1a9d24d8cdd4d668c5556967696c65fba8" kindref="member">m_cond</ref>.wait(<sp/>ul<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Message&gt;<sp/>pOut<sp/>=<sp/>std::move(<sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.back()<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.pop_back();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="classMessageBus_ab8ac0e1b645ed452eef6669f538afd84_1ab8ac0e1b645ed452eef6669f538afd84" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pOut;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classMessageBus_aba00023c9551dace685517015c1b3d7e_1aba00023c9551dace685517015c1b3d7e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMessage" kindref="compound">Message</ref>*<sp/><ref refid="classMessageBus_aba00023c9551dace685517015c1b3d7e_1aba00023c9551dace685517015c1b3d7e" kindref="member">MessageBus::peekFront</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lg{<ref refid="classMessageBus_a3ae7f433af1e96050f2afaeca274b153_1a3ae7f433af1e96050f2afaeca274b153" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.front().get();</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classMessageBus_ae2711865f5568dfb9b0fc4ea350177c4_1ae2711865f5568dfb9b0fc4ea350177c4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMessage" kindref="compound">Message</ref>*<sp/><ref refid="classMessageBus_ae2711865f5568dfb9b0fc4ea350177c4_1ae2711865f5568dfb9b0fc4ea350177c4" kindref="member">MessageBus::peekBack</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lg{<ref refid="classMessageBus_a3ae7f433af1e96050f2afaeca274b153_1a3ae7f433af1e96050f2afaeca274b153" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.back().get();</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classMessageBus_acea6996b8418cebfb0ecce597e446b86_1acea6996b8418cebfb0ecce597e446b86" refkind="member"><highlight class="normal">MessageBus::operator<sp/>bool()</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lg{m_mu};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!m_vec.empty();</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classMessageBus_a41c87b586ce15ce1ecc8767f25b0fa34_1a41c87b586ce15ce1ecc8767f25b0fa34" refkind="member"><highlight class="normal"><ref refid="classMessage" kindref="compound">Message</ref>*<sp/><ref refid="classMessageBus_a41c87b586ce15ce1ecc8767f25b0fa34_1a41c87b586ce15ce1ecc8767f25b0fa34" kindref="member">MessageBus::operator[]</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>index<sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lg{<ref refid="classMessageBus_a3ae7f433af1e96050f2afaeca274b153_1a3ae7f433af1e96050f2afaeca274b153" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.empty()<sp/>||<sp/>index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>index.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>[index].get();</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classMessageBus_a14e2568ff20ccf8018d8c8b34b179537_1a14e2568ff20ccf8018d8c8b34b179537" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMessage" kindref="compound">Message</ref>*<sp/><ref refid="classMessageBus_a41c87b586ce15ce1ecc8767f25b0fa34_1a41c87b586ce15ce1ecc8767f25b0fa34" kindref="member">MessageBus::operator[]</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>index<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="90"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lg{<ref refid="classMessageBus_a3ae7f433af1e96050f2afaeca274b153_1a3ae7f433af1e96050f2afaeca274b153" kindref="member">m_mu</ref>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.empty()<sp/>||<sp/>index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>index.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>[index].get();</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classMessageBus_a21ffcf18ee493140fdab6019ded3e8fc_1a21ffcf18ee493140fdab6019ded3e8fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classMessageBus_a21ffcf18ee493140fdab6019ded3e8fc_1a21ffcf18ee493140fdab6019ded3e8fc" kindref="member">MessageBus::isEmpty</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.empty();</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classMessageBus_a6936bf9408c97f408fe3c1b340e87f23_1a6936bf9408c97f408fe3c1b340e87f23" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMessageBus_a6936bf9408c97f408fe3c1b340e87f23_1a6936bf9408c97f408fe3c1b340e87f23" kindref="member">MessageBus::clear</ref>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.clear();</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classMessageBus_aa63b58f3d2cd308379f806d5b7d08704_1aa63b58f3d2cd308379f806d5b7d08704" refkind="member"><highlight class="normal">std::size_t<sp/><ref refid="classMessageBus_aa63b58f3d2cd308379f806d5b7d08704_1aa63b58f3d2cd308379f806d5b7d08704" kindref="member">MessageBus::getSize</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMessageBus_ab8ac0e1b645ed452eef6669f538afd84_1ab8ac0e1b645ed452eef6669f538afd84" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classMessageBus_af3dbede58c7524be2f9d8906aa1db674_1af3dbede58c7524be2f9d8906aa1db674" refkind="member"><highlight class="normal">std::size_t<sp/><ref refid="classMessageBus_af3dbede58c7524be2f9d8906aa1db674_1af3dbede58c7524be2f9d8906aa1db674" kindref="member">MessageBus::getCapacity</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMessageBus_aaccb0101733d16ef1ed5156633fc081b_1aaccb0101733d16ef1ed5156633fc081b" kindref="member">m_vec</ref>.capacity();</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classMessageDispatcher_afb9b280725d98139078d0ff70d9184d7_1afb9b280725d98139078d0ff70d9184d7" refkind="member"><highlight class="normal"><ref refid="classMessageDispatcher_afb9b280725d98139078d0ff70d9184d7_1afb9b280725d98139078d0ff70d9184d7" kindref="member">MessageDispatcher::MessageDispatcher</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initialCapacity<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mb(initialCapacity)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classMessageDispatcher_a54c87d777197854caa4235edcca7434a_1a54c87d777197854caa4235edcca7434a" refkind="member"><highlight class="normal"><ref refid="classMessageDispatcher_afb9b280725d98139078d0ff70d9184d7_1afb9b280725d98139078d0ff70d9184d7" kindref="member">MessageDispatcher::MessageDispatcher</ref>(<sp/><ref refid="classMessageDispatcher" kindref="compound">MessageDispatcher</ref><sp/>&amp;&amp;rhs<sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>m_mb{std::move(<sp/>rhs.m_mb<sp/>)}</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classMessageDispatcher_a99ddac95e38f4656990aee38b55270bc_1a99ddac95e38f4656990aee38b55270bc" refkind="member"><highlight class="normal"><ref refid="classMessageDispatcher" kindref="compound">MessageDispatcher</ref>&amp;<sp/><ref refid="classMessageDispatcher_a99ddac95e38f4656990aee38b55270bc_1a99ddac95e38f4656990aee38b55270bc" kindref="member">MessageDispatcher::operator=</ref>(<sp/><ref refid="classMessageDispatcher" kindref="compound">MessageDispatcher</ref><sp/>&amp;&amp;rhs<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMessageDispatcher" kindref="compound">MessageDispatcher</ref><sp/>tmp{std::move(<sp/>rhs<sp/>)};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>tmp<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classMessageDispatcher_a0481f9fa137bdb67d0feedc6535a9c5b_1a0481f9fa137bdb67d0feedc6535a9c5b" refkind="member"><highlight class="normal"><ref refid="classMessageDispatcher" kindref="compound">MessageDispatcher</ref>&amp;<sp/><ref refid="classMessageDispatcher_a0481f9fa137bdb67d0feedc6535a9c5b_1a0481f9fa137bdb67d0feedc6535a9c5b" kindref="member">MessageDispatcher::getInstance</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initialCapacity<sp/>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classMessageDispatcher" kindref="compound">MessageDispatcher</ref><sp/>instance{initialCapacity};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classMessageDispatcher_a1965dca63a394952ac2d0c4845b5ce61_1a1965dca63a394952ac2d0c4845b5ce61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMessageDispatcher_a1965dca63a394952ac2d0c4845b5ce61_1a1965dca63a394952ac2d0c4845b5ce61" kindref="member">MessageDispatcher::addMessage</ref>(<sp/><ref refid="classMessage" kindref="compound">Message</ref><sp/>*msg<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMessageDispatcher_addbf4f6ed8cd98fea50341827ac8476b_1addbf4f6ed8cd98fea50341827ac8476b" kindref="member">m_mb</ref>.<ref refid="classMessageBus_a06b68b60b6903a39140224548c788c37_1a06b68b60b6903a39140224548c788c37" kindref="member">enqueue</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classMessageDispatcher_adf8ef455119ea22ff7ab9bfad3ffffd6_1adf8ef455119ea22ff7ab9bfad3ffffd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMessageDispatcher_adf8ef455119ea22ff7ab9bfad3ffffd6_1adf8ef455119ea22ff7ab9bfad3ffffd6" kindref="member">MessageDispatcher::dispatchAll</ref>()</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classMessageDispatcher_addbf4f6ed8cd98fea50341827ac8476b_1addbf4f6ed8cd98fea50341827ac8476b" kindref="member">m_mb</ref>.<ref refid="classMessageBus_aa63b58f3d2cd308379f806d5b7d08704_1aa63b58f3d2cd308379f806d5b7d08704" kindref="member">getSize</ref>()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>msg<sp/>=<sp/><ref refid="classMessageDispatcher_addbf4f6ed8cd98fea50341827ac8476b_1addbf4f6ed8cd98fea50341827ac8476b" kindref="member">m_mb</ref>.<ref refid="classMessageBus_a85ea7c0044a40d0e09434362eb140b7f_1a85ea7c0044a40d0e09434362eb140b7f" kindref="member">dequeue</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>recipients<sp/>=<sp/>msg-&gt;getRecipients();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>recipients.size()<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>recipients!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classEntity" kindref="compound">Entity</ref><sp/>*entity<sp/>:<sp/>recipients<sp/>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity-&gt;onMessageReceived(<sp/>std::move(<sp/>msg<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classMessageDispatcher_a987a81db38368b17ad63a4a0bcffac06_1a987a81db38368b17ad63a4a0bcffac06" refkind="member"><highlight class="normal">std::size_t<sp/><ref refid="classMessageDispatcher_a987a81db38368b17ad63a4a0bcffac06_1a987a81db38368b17ad63a4a0bcffac06" kindref="member">MessageDispatcher::getSize</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMessageDispatcher_addbf4f6ed8cd98fea50341827ac8476b_1addbf4f6ed8cd98fea50341827ac8476b" kindref="member">m_mb</ref>.<ref refid="classMessageBus_aa63b58f3d2cd308379f806d5b7d08704_1aa63b58f3d2cd308379f806d5b7d08704" kindref="member">getSize</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classMessageDispatcher_a14b3a48e0102f1431e5c98acb420883f_1a14b3a48e0102f1431e5c98acb420883f" refkind="member"><highlight class="normal">std::size_t<sp/><ref refid="classMessageDispatcher_a14b3a48e0102f1431e5c98acb420883f_1a14b3a48e0102f1431e5c98acb420883f" kindref="member">MessageDispatcher::getCapacity</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classMessageDispatcher_addbf4f6ed8cd98fea50341827ac8476b_1addbf4f6ed8cd98fea50341827ac8476b" kindref="member">m_mb</ref>.<ref refid="classMessageBus_af3dbede58c7524be2f9d8906aa1db674_1af3dbede58c7524be2f9d8906aa1db674" kindref="member">getCapacity</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classMessageDispatcher_a567945bff2a283bd5143036743c0c8c1_1a567945bff2a283bd5143036743c0c8c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMessageDispatcher_a567945bff2a283bd5143036743c0c8c1_1a567945bff2a283bd5143036743c0c8c1" kindref="member">MessageDispatcher::clear</ref>()</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMessageDispatcher_addbf4f6ed8cd98fea50341827ac8476b_1addbf4f6ed8cd98fea50341827ac8476b" kindref="member">m_mb</ref>.<ref refid="classMessageBus_a6936bf9408c97f408fe3c1b340e87f23_1a6936bf9408c97f408fe3c1b340e87f23" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/message_queue_bus_dispatcher.cpp"/>
  </compounddef>
</doxygen>
