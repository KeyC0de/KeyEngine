<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classBlendState" kind="class" language="C++" prot="public">
    <compoundname>BlendState</compoundname>
    <basecompoundref refid="classIBindable" prot="public" virt="non-virtual">IBindable</basecompoundref>
    <includes refid="blend__state_8h" local="no">blend_state.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936e" prot="public" static="no" strong="no">
        <type></type>
        <name>Mode</name>
        <qualifiedname>BlendState::Mode</qualifiedname>
        <enumvalue id="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936ea88d24e12f11fcf30e7645cd90307ae76" prot="public">
          <name>NoBlend</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936ea51ee57fb900686d7df5c44536ef5dd30" prot="public">
          <name>Additive</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936ea13d941d78111e944f66303026b5aa0a6" prot="public">
          <name>Multiplicative</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936ea7fb6dd3e3861c00b85cdd7ca10e22705" prot="public">
          <name>DoubleMultiplicative</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936eac4db6edab9e8acb7e065a2202d738ec2" prot="public">
          <name>Alpha</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936eae9aa96aa9fa1073f4a8ea331394472ab" prot="public">
          <name>AlphaToCoverage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="21" column="1" bodyfile="inc/blend_state.h" bodystart="22" bodyend="29"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBlendState_aebac6c50cb7654c15583717e8d1f7541_1aebac6c50cb7654c15583717e8d1f7541" prot="private" static="no" mutable="no">
        <type>Microsoft::WRL::ComPtr&lt; ID3D11BlendState &gt;</type>
        <definition>Microsoft::WRL::ComPtr&lt;ID3D11BlendState&gt; BlendState::m_pD3dBlendState</definition>
        <argsstring></argsstring>
        <name>m_pD3dBlendState</name>
        <qualifiedname>BlendState::m_pD3dBlendState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="31" column="24" bodyfile="inc/blend_state.h" bodystart="31" bodyend="-1"/>
        <referencedby refid="classBlendState_aa3065367e75ee165cbeac58483aa19fc_1aa3065367e75ee165cbeac58483aa19fc" compoundref="blend__state_8cpp" startline="11" endline="90">BlendState</referencedby>
        <referencedby refid="classBlendState_a246f8b7d930fd91ccf4586e19f789347_1a246f8b7d930fd91ccf4586e19f789347" compoundref="blend__state_8cpp" startline="221" endline="224">getD3dBlendState</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classBlendState_aaef013e94e297fb5be8b230eff905d05_1aaef013e94e297fb5be8b230eff905d05" prot="private" static="no" mutable="no">
        <type><ref refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936e" kindref="member">Mode</ref></type>
        <definition>Mode BlendState::m_mode</definition>
        <argsstring></argsstring>
        <name>m_mode</name>
        <qualifiedname>BlendState::m_mode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="32" column="6" bodyfile="inc/blend_state.h" bodystart="32" bodyend="-1"/>
        <referencedby refid="classBlendState_ad1d598669c960e2542c8526f7145e92e_1ad1d598669c960e2542c8526f7145e92e" compoundref="blend__state_8cpp" startline="216" endline="219">getBlendMode</referencedby>
        <referencedby refid="classBlendState_aa6b960f91dea5183e301313830bd162f_1aa6b960f91dea5183e301313830bd162f" compoundref="blend__state_8cpp" startline="139" endline="142">getUid</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classBlendState_ac7b44a7f4cc9e0bf8146a0440c5d5053_1ac7b44a7f4cc9e0bf8146a0440c5d5053" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned BlendState::m_renderTargetSlot</definition>
        <argsstring></argsstring>
        <name>m_renderTargetSlot</name>
        <qualifiedname>BlendState::m_renderTargetSlot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="33" column="10" bodyfile="inc/blend_state.h" bodystart="33" bodyend="-1"/>
        <referencedby refid="classBlendState_aa6b960f91dea5183e301313830bd162f_1aa6b960f91dea5183e301313830bd162f" compoundref="blend__state_8cpp" startline="139" endline="142">getUid</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classBlendState_af3ccc9c9f130298e269db7c4118f413a_1af3ccc9c9f130298e269db7c4118f413a" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned BlendState::m_multisampleMask</definition>
        <argsstring></argsstring>
        <name>m_multisampleMask</name>
        <qualifiedname>BlendState::m_multisampleMask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="34" column="10" bodyfile="inc/blend_state.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBlendState_a2fa89574ea511e403205f884e221a7df_1a2fa89574ea511e403205f884e221a7df" prot="private" static="no" mutable="no">
        <type>std::optional&lt; std::array&lt; float, 4 &gt; &gt;</type>
        <definition>std::optional&lt;std::array&lt;float, 4&gt; &gt; BlendState::m_blendFactors</definition>
        <argsstring></argsstring>
        <name>m_blendFactors</name>
        <qualifiedname>BlendState::m_blendFactors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="35" column="15" bodyfile="inc/blend_state.h" bodystart="35" bodyend="-1"/>
        <referencedby refid="classBlendState_aa3065367e75ee165cbeac58483aa19fc_1aa3065367e75ee165cbeac58483aa19fc" compoundref="blend__state_8cpp" startline="11" endline="90">BlendState</referencedby>
        <referencedby refid="classBlendState_a03ad465f2b071208e008af7842f5335b_1a03ad465f2b071208e008af7842f5335b" compoundref="blend__state_8cpp" startline="210" endline="214">blendFactors</referencedby>
        <referencedby refid="classBlendState_a1094dbecb76242f5ec740222a2ef14ba_1a1094dbecb76242f5ec740222a2ef14ba" compoundref="blend__state_8cpp" startline="198" endline="202">getBlendFactorAlpha</referencedby>
        <referencedby refid="classBlendState_a3fcd66aa1fcde4353ad604aeefbb51fd_1a3fcd66aa1fcde4353ad604aeefbb51fd" compoundref="blend__state_8cpp" startline="192" endline="196">getBlendFactorBlue</referencedby>
        <referencedby refid="classBlendState_a4420126a1c3fadfe8435f575c6130e72_1a4420126a1c3fadfe8435f575c6130e72" compoundref="blend__state_8cpp" startline="186" endline="190">getBlendFactorGreen</referencedby>
        <referencedby refid="classBlendState_a58f01f80e13f9aaf7bb529f140b86bd6_1a58f01f80e13f9aaf7bb529f140b86bd6" compoundref="blend__state_8cpp" startline="180" endline="184">getBlendFactorRed</referencedby>
        <referencedby refid="classBlendState_a8f07f9b08fc1bbede5bd92211476f363_1a8f07f9b08fc1bbede5bd92211476f363" compoundref="blend__state_8cpp" startline="204" endline="208">getBlendFactors</referencedby>
        <referencedby refid="classBlendState_aa6b960f91dea5183e301313830bd162f_1aa6b960f91dea5183e301313830bd162f" compoundref="blend__state_8cpp" startline="139" endline="142">getUid</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classBlendState_aa3065367e75ee165cbeac58483aa19fc_1aa3065367e75ee165cbeac58483aa19fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BlendState::BlendState</definition>
        <argsstring>(Graphics &amp;gfx, const Mode mode, const unsigned renderTargetSlot, std::optional&lt; float &gt; blendFactors={}, const unsigned multisampleMask=0xFFFFFFFFu)</argsstring>
        <name>BlendState</name>
        <qualifiedname>BlendState::BlendState</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>const <ref refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936e" kindref="member">Mode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>renderTargetSlot</declname>
        </param>
        <param>
          <type>std::optional&lt; float &gt;</type>
          <declname>blendFactors</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>multisampleMask</declname>
          <defval>0xFFFFFFFFu</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="37" column="1" bodyfile="src/blend_state.cpp" bodystart="11" bodyend="90"/>
        <referencedby refid="classBlendState_a0fb024a3ef2865d6a01b52c8a8fe3d8f_1a0fb024a3ef2865d6a01b52c8a8fe3d8f" compoundref="blend__state_8cpp" startline="107" endline="137">calcUid</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a40b232bc0e513ab020aa07a29a66558a_1a40b232bc0e513ab020aa07a29a66558a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BlendState::bind</definition>
        <argsstring>(Graphics &amp;gfx) cond_noex override</argsstring>
        <name>bind</name>
        <qualifiedname>BlendState::bind</qualifiedname>
        <reimplements refid="classIBindable_add4560f78e76629ee81ba701ba1052e1_1add4560f78e76629ee81ba701ba1052e1">bind</reimplements>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <briefdescription>
<para>bind graphics resource to a certain stage of the graphics pipeline </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="39" column="6" bodyfile="src/blend_state.cpp" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_aa6b960f91dea5183e301313830bd162f_1aa6b960f91dea5183e301313830bd162f" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string BlendState::getUid</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>getUid</name>
        <qualifiedname>BlendState::getUid</qualifiedname>
        <reimplements refid="classIBindable_a7d88cdbd5d500d6d7f1bfabe16927855_1a7d88cdbd5d500d6d7f1bfabe16927855">getUid</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="42" column="13" bodyfile="src/blend_state.cpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a17a6b675b9df1a037279bd09857d020d_1a17a6b675b9df1a037279bd09857d020d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BlendState::fillBlendFactors</definition>
        <argsstring>(const float sameBlendFactor) cond_noex</argsstring>
        <name>fillBlendFactors</name>
        <qualifiedname>BlendState::fillBlendFactors</qualifiedname>
        <param>
          <type>const float</type>
          <declname>sameBlendFactor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="43" column="6" bodyfile="src/blend_state.cpp" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_af1d7b126eac3ac613d65acc22c1f39f0_1af1d7b126eac3ac613d65acc22c1f39f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BlendState::setBlendFactors</definition>
        <argsstring>(std::array&lt; float, 4 &gt; blendFactors) cond_noex</argsstring>
        <name>setBlendFactors</name>
        <qualifiedname>BlendState::setBlendFactors</qualifiedname>
        <param>
          <type>std::array&lt; float, 4 &gt;</type>
          <declname>blendFactors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="44" column="6" bodyfile="src/blend_state.cpp" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a601807fc7b470ddf241094a8857a6d11_1a601807fc7b470ddf241094a8857a6d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BlendState::setBlendFactorRed</definition>
        <argsstring>(const float blendFactorRed) cond_noex</argsstring>
        <name>setBlendFactorRed</name>
        <qualifiedname>BlendState::setBlendFactorRed</qualifiedname>
        <param>
          <type>const float</type>
          <declname>blendFactorRed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="45" column="6" bodyfile="src/blend_state.cpp" bodystart="156" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_aa01ebb731ef55fba7e9d2b6928c60e64_1aa01ebb731ef55fba7e9d2b6928c60e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BlendState::setBlendFactorGreen</definition>
        <argsstring>(const float blendFactorGreen) cond_noex</argsstring>
        <name>setBlendFactorGreen</name>
        <qualifiedname>BlendState::setBlendFactorGreen</qualifiedname>
        <param>
          <type>const float</type>
          <declname>blendFactorGreen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="46" column="6" bodyfile="src/blend_state.cpp" bodystart="162" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_ae74c15a0ef48f209a4a46a9cbe78c496_1ae74c15a0ef48f209a4a46a9cbe78c496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BlendState::setBlendFactorBlue</definition>
        <argsstring>(const float blendFactorBlue) cond_noex</argsstring>
        <name>setBlendFactorBlue</name>
        <qualifiedname>BlendState::setBlendFactorBlue</qualifiedname>
        <param>
          <type>const float</type>
          <declname>blendFactorBlue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="47" column="6" bodyfile="src/blend_state.cpp" bodystart="168" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a0ef99680704ad33b5370cc39d5a5c4df_1a0ef99680704ad33b5370cc39d5a5c4df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BlendState::setBlendFactorAlpha</definition>
        <argsstring>(const float blendFactorAlpha) cond_noex</argsstring>
        <name>setBlendFactorAlpha</name>
        <qualifiedname>BlendState::setBlendFactorAlpha</qualifiedname>
        <param>
          <type>const float</type>
          <declname>blendFactorAlpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="48" column="6" bodyfile="src/blend_state.cpp" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a58f01f80e13f9aaf7bb529f140b86bd6_1a58f01f80e13f9aaf7bb529f140b86bd6" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float BlendState::getBlendFactorRed</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBlendFactorRed</name>
        <qualifiedname>BlendState::getBlendFactorRed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="49" column="7" bodyfile="src/blend_state.cpp" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a4420126a1c3fadfe8435f575c6130e72_1a4420126a1c3fadfe8435f575c6130e72" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float BlendState::getBlendFactorGreen</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBlendFactorGreen</name>
        <qualifiedname>BlendState::getBlendFactorGreen</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="50" column="7" bodyfile="src/blend_state.cpp" bodystart="186" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a3fcd66aa1fcde4353ad604aeefbb51fd_1a3fcd66aa1fcde4353ad604aeefbb51fd" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float BlendState::getBlendFactorBlue</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBlendFactorBlue</name>
        <qualifiedname>BlendState::getBlendFactorBlue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="51" column="7" bodyfile="src/blend_state.cpp" bodystart="192" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a1094dbecb76242f5ec740222a2ef14ba_1a1094dbecb76242f5ec740222a2ef14ba" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float BlendState::getBlendFactorAlpha</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBlendFactorAlpha</name>
        <qualifiedname>BlendState::getBlendFactorAlpha</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="52" column="7" bodyfile="src/blend_state.cpp" bodystart="198" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a8f07f9b08fc1bbede5bd92211476f363_1a8f07f9b08fc1bbede5bd92211476f363" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const std::array&lt; float, 4 &gt; &amp;</type>
        <definition>const std::array&lt; float, 4 &gt; &amp; BlendState::getBlendFactors</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBlendFactors</name>
        <qualifiedname>BlendState::getBlendFactors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="53" column="18" bodyfile="src/blend_state.cpp" bodystart="204" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a03ad465f2b071208e008af7842f5335b_1a03ad465f2b071208e008af7842f5335b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::array&lt; float, 4 &gt; &amp;</type>
        <definition>std::array&lt; float, 4 &gt; &amp; BlendState::blendFactors</definition>
        <argsstring>()</argsstring>
        <name>blendFactors</name>
        <qualifiedname>BlendState::blendFactors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="54" column="12" bodyfile="src/blend_state.cpp" bodystart="210" bodyend="214"/>
        <referencedby refid="classBlendState_aa3065367e75ee165cbeac58483aa19fc_1aa3065367e75ee165cbeac58483aa19fc" compoundref="blend__state_8cpp" startline="11" endline="90">BlendState</referencedby>
        <referencedby refid="classBlendState_a0fb024a3ef2865d6a01b52c8a8fe3d8f_1a0fb024a3ef2865d6a01b52c8a8fe3d8f" compoundref="blend__state_8cpp" startline="107" endline="137">calcUid</referencedby>
        <referencedby refid="classBlendState_aa27898f671e468ccc0c397dc297f6891_1aa27898f671e468ccc0c397dc297f6891" compoundref="blend__state_8cpp" startline="98" endline="105">fetch</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBlendState_ad1d598669c960e2542c8526f7145e92e_1ad1d598669c960e2542c8526f7145e92e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936e" kindref="member">Mode</ref> &amp;</type>
        <definition>const BlendState::Mode &amp; BlendState::getBlendMode</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBlendMode</name>
        <qualifiedname>BlendState::getBlendMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="55" column="12" bodyfile="src/blend_state.cpp" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a246f8b7d930fd91ccf4586e19f789347_1a246f8b7d930fd91ccf4586e19f789347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Microsoft::WRL::ComPtr&lt; ID3D11BlendState &gt; &amp;</type>
        <definition>Microsoft::WRL::ComPtr&lt; ID3D11BlendState &gt; &amp; BlendState::getD3dBlendState</definition>
        <argsstring>()</argsstring>
        <name>getD3dBlendState</name>
        <qualifiedname>BlendState::getD3dBlendState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="56" column="24" bodyfile="src/blend_state.cpp" bodystart="221" bodyend="224"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBlendState_aa27898f671e468ccc0c397dc297f6891_1aa27898f671e468ccc0c397dc297f6891" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classBlendState" kindref="compound">BlendState</ref> &gt;</type>
        <definition>std::shared_ptr&lt; BlendState &gt; BlendState::fetch</definition>
        <argsstring>(Graphics &amp;gfx, const Mode mode, const unsigned renderTargetSlot, std::optional&lt; float &gt; blendFactors={}, const unsigned multisampleMask=0xFFFFFFFFu)</argsstring>
        <name>fetch</name>
        <qualifiedname>BlendState::fetch</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>const <ref refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936e" kindref="member">Mode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>renderTargetSlot</declname>
        </param>
        <param>
          <type>std::optional&lt; float &gt;</type>
          <declname>blendFactors</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>multisampleMask</declname>
          <defval>0xFFFFFFFFu</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="40" column="24" bodyfile="src/blend_state.cpp" bodystart="98" bodyend="105"/>
        <referencedby refid="classren_1_1BlurPass_af22cc14bc9b96591978c35005526cb94_1af22cc14bc9b96591978c35005526cb94" compoundref="blur__pass_8cpp" startline="10" endline="21">ren::BlurPass::BlurPass</referencedby>
        <referencedby refid="classren_1_1NegativePass_a81078cef7dbd15ecfedf85495abad7bf_1a81078cef7dbd15ecfedf85495abad7bf" compoundref="negative__pass_8cpp" startline="10" endline="21">ren::NegativePass::NegativePass</referencedby>
        <referencedby refid="classren_1_1PassThrough_a53963d7415f67b51c10fd38d1f222f9b_1a53963d7415f67b51c10fd38d1f222f9b" compoundref="pass__through_8cpp" startline="10" endline="21">ren::PassThrough::PassThrough</referencedby>
        <referencedby refid="classren_1_1ShadowPass_a89e7feb05baff9858c8b91edcb5a5d51_1a89e7feb05baff9858c8b91edcb5a5d51" compoundref="SHADOW__PASS_8CPP" startline="31" endline="92">ren::ShadowPass::ShadowPass</referencedby>
        <referencedby refid="classren_1_1VerticalBlurPass_ac74bced70c3303e580908b6d60726b4d_1ac74bced70c3303e580908b6d60726b4d" compoundref="vertical__blur__pass_8cpp" startline="10" endline="29">ren::VerticalBlurPass::VerticalBlurPass</referencedby>
      </memberdef>
      <memberdef kind="function" id="classBlendState_a0fb024a3ef2865d6a01b52c8a8fe3d8f_1a0fb024a3ef2865d6a01b52c8a8fe3d8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string BlendState::calcUid</definition>
        <argsstring>(const Mode mode, const unsigned renderTargetSlot, std::optional&lt; float &gt; blendFactors={}, const unsigned multisampleMask=0xFFFFFFFFu)</argsstring>
        <name>calcUid</name>
        <qualifiedname>BlendState::calcUid</qualifiedname>
        <param>
          <type>const <ref refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936e" kindref="member">Mode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>renderTargetSlot</declname>
        </param>
        <param>
          <type>std::optional&lt; float &gt;</type>
          <declname>blendFactors</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>multisampleMask</declname>
          <defval>0xFFFFFFFFu</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/blend_state.h" line="41" column="20" bodyfile="src/blend_state.cpp" bodystart="107" bodyend="137"/>
        <referencedby refid="classBlendState_aa6b960f91dea5183e301313830bd162f_1aa6b960f91dea5183e301313830bd162f" compoundref="blend__state_8cpp" startline="139" endline="142">getUid</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>blending factors are optional : apply separate values for R, G, B, A channels  </para>
    </briefdescription>
    <detaileddescription>
<para>=============================================================</para>
<para><simplesect kind="author"><para>KeyC0de </para>
</simplesect>
<simplesect kind="date"><para>2022/02/19 10:23 <heading level="1"></heading>
</para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BlendState</label>
        <link refid="classBlendState"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>GraphicsFriend</label>
        <link refid="classGraphicsFriend"/>
      </node>
      <node id="2">
        <label>IBindable</label>
        <link refid="classIBindable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BlendState</label>
        <link refid="classBlendState"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>GraphicsFriend</label>
        <link refid="classGraphicsFriend"/>
      </node>
      <node id="2">
        <label>IBindable</label>
        <link refid="classIBindable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/blend_state.h" line="17" column="1" bodyfile="inc/blend_state.h" bodystart="19" bodyend="57"/>
    <listofallmembers>
      <member refid="classIBindable_a608c5066b829febbd49cd82d1d1fa353_1a608c5066b829febbd49cd82d1d1fa353" prot="public" virt="virtual"><scope>BlendState</scope><name>accept</name></member>
      <member refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936ea51ee57fb900686d7df5c44536ef5dd30" prot="public" virt="non-virtual"><scope>BlendState</scope><name>Additive</name></member>
      <member refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936eac4db6edab9e8acb7e065a2202d738ec2" prot="public" virt="non-virtual"><scope>BlendState</scope><name>Alpha</name></member>
      <member refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936eae9aa96aa9fa1073f4a8ea331394472ab" prot="public" virt="non-virtual"><scope>BlendState</scope><name>AlphaToCoverage</name></member>
      <member refid="classBlendState_a40b232bc0e513ab020aa07a29a66558a_1a40b232bc0e513ab020aa07a29a66558a" prot="public" virt="virtual"><scope>BlendState</scope><name>bind</name></member>
      <member refid="classBlendState_a03ad465f2b071208e008af7842f5335b_1a03ad465f2b071208e008af7842f5335b" prot="public" virt="non-virtual"><scope>BlendState</scope><name>blendFactors</name></member>
      <member refid="classBlendState_aa3065367e75ee165cbeac58483aa19fc_1aa3065367e75ee165cbeac58483aa19fc" prot="public" virt="non-virtual"><scope>BlendState</scope><name>BlendState</name></member>
      <member refid="classBlendState_a0fb024a3ef2865d6a01b52c8a8fe3d8f_1a0fb024a3ef2865d6a01b52c8a8fe3d8f" prot="public" virt="non-virtual"><scope>BlendState</scope><name>calcUid</name></member>
      <member refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936ea7fb6dd3e3861c00b85cdd7ca10e22705" prot="public" virt="non-virtual"><scope>BlendState</scope><name>DoubleMultiplicative</name></member>
      <member refid="classBlendState_aa27898f671e468ccc0c397dc297f6891_1aa27898f671e468ccc0c397dc297f6891" prot="public" virt="non-virtual"><scope>BlendState</scope><name>fetch</name></member>
      <member refid="classBlendState_a17a6b675b9df1a037279bd09857d020d_1a17a6b675b9df1a037279bd09857d020d" prot="public" virt="non-virtual"><scope>BlendState</scope><name>fillBlendFactors</name></member>
      <member refid="classBlendState_a1094dbecb76242f5ec740222a2ef14ba_1a1094dbecb76242f5ec740222a2ef14ba" prot="public" virt="non-virtual"><scope>BlendState</scope><name>getBlendFactorAlpha</name></member>
      <member refid="classBlendState_a3fcd66aa1fcde4353ad604aeefbb51fd_1a3fcd66aa1fcde4353ad604aeefbb51fd" prot="public" virt="non-virtual"><scope>BlendState</scope><name>getBlendFactorBlue</name></member>
      <member refid="classBlendState_a4420126a1c3fadfe8435f575c6130e72_1a4420126a1c3fadfe8435f575c6130e72" prot="public" virt="non-virtual"><scope>BlendState</scope><name>getBlendFactorGreen</name></member>
      <member refid="classBlendState_a58f01f80e13f9aaf7bb529f140b86bd6_1a58f01f80e13f9aaf7bb529f140b86bd6" prot="public" virt="non-virtual"><scope>BlendState</scope><name>getBlendFactorRed</name></member>
      <member refid="classBlendState_a8f07f9b08fc1bbede5bd92211476f363_1a8f07f9b08fc1bbede5bd92211476f363" prot="public" virt="non-virtual"><scope>BlendState</scope><name>getBlendFactors</name></member>
      <member refid="classBlendState_ad1d598669c960e2542c8526f7145e92e_1ad1d598669c960e2542c8526f7145e92e" prot="public" virt="non-virtual"><scope>BlendState</scope><name>getBlendMode</name></member>
      <member refid="classBlendState_a246f8b7d930fd91ccf4586e19f789347_1a246f8b7d930fd91ccf4586e19f789347" prot="public" virt="non-virtual"><scope>BlendState</scope><name>getD3dBlendState</name></member>
      <member refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" prot="protected" virt="non-virtual"><scope>BlendState</scope><name>getDevice</name></member>
      <member refid="classGraphicsFriend_a619e32893ab49ea6c5200e7c2d52e2f2_1a619e32893ab49ea6c5200e7c2d52e2f2" prot="protected" virt="non-virtual"><scope>BlendState</scope><name>getDeviceContext</name></member>
      <member refid="classBlendState_aa6b960f91dea5183e301313830bd162f_1aa6b960f91dea5183e301313830bd162f" prot="public" virt="virtual"><scope>BlendState</scope><name>getUid</name></member>
      <member refid="classBlendState_a2fa89574ea511e403205f884e221a7df_1a2fa89574ea511e403205f884e221a7df" prot="private" virt="non-virtual"><scope>BlendState</scope><name>m_blendFactors</name></member>
      <member refid="classBlendState_aaef013e94e297fb5be8b230eff905d05_1aaef013e94e297fb5be8b230eff905d05" prot="private" virt="non-virtual"><scope>BlendState</scope><name>m_mode</name></member>
      <member refid="classBlendState_af3ccc9c9f130298e269db7c4118f413a_1af3ccc9c9f130298e269db7c4118f413a" prot="private" virt="non-virtual"><scope>BlendState</scope><name>m_multisampleMask</name></member>
      <member refid="classBlendState_aebac6c50cb7654c15583717e8d1f7541_1aebac6c50cb7654c15583717e8d1f7541" prot="private" virt="non-virtual"><scope>BlendState</scope><name>m_pD3dBlendState</name></member>
      <member refid="classBlendState_ac7b44a7f4cc9e0bf8146a0440c5d5053_1ac7b44a7f4cc9e0bf8146a0440c5d5053" prot="private" virt="non-virtual"><scope>BlendState</scope><name>m_renderTargetSlot</name></member>
      <member refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936e" prot="public" virt="non-virtual"><scope>BlendState</scope><name>Mode</name></member>
      <member refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936ea13d941d78111e944f66303026b5aa0a6" prot="public" virt="non-virtual"><scope>BlendState</scope><name>Multiplicative</name></member>
      <member refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936ea88d24e12f11fcf30e7645cd90307ae76" prot="public" virt="non-virtual"><scope>BlendState</scope><name>NoBlend</name></member>
      <member refid="classBlendState_a0ef99680704ad33b5370cc39d5a5c4df_1a0ef99680704ad33b5370cc39d5a5c4df" prot="public" virt="non-virtual"><scope>BlendState</scope><name>setBlendFactorAlpha</name></member>
      <member refid="classBlendState_ae74c15a0ef48f209a4a46a9cbe78c496_1ae74c15a0ef48f209a4a46a9cbe78c496" prot="public" virt="non-virtual"><scope>BlendState</scope><name>setBlendFactorBlue</name></member>
      <member refid="classBlendState_aa01ebb731ef55fba7e9d2b6928c60e64_1aa01ebb731ef55fba7e9d2b6928c60e64" prot="public" virt="non-virtual"><scope>BlendState</scope><name>setBlendFactorGreen</name></member>
      <member refid="classBlendState_a601807fc7b470ddf241094a8857a6d11_1a601807fc7b470ddf241094a8857a6d11" prot="public" virt="non-virtual"><scope>BlendState</scope><name>setBlendFactorRed</name></member>
      <member refid="classBlendState_af1d7b126eac3ac613d65acc22c1f39f0_1af1d7b126eac3ac613d65acc22c1f39f0" prot="public" virt="non-virtual"><scope>BlendState</scope><name>setBlendFactors</name></member>
      <member refid="classIBindable_a4d590eebe80fa4e0aa865a875ff86c02_1a4d590eebe80fa4e0aa865a875ff86c02" prot="public" virt="virtual"><scope>BlendState</scope><name>setDebugObjectName</name></member>
      <member refid="classIBindable_a12fe8725cb3f4836f22d1592b07e2c91_1a12fe8725cb3f4836f22d1592b07e2c91" prot="public" virt="virtual"><scope>BlendState</scope><name>setMesh</name></member>
      <member refid="classIBindable_a7f68262ff85e25e9f826eae7c01bbfa1_1a7f68262ff85e25e9f826eae7c01bbfa1" prot="public" virt="virtual"><scope>BlendState</scope><name>~IBindable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
