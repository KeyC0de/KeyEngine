<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classKeyTimer" kind="class" language="C++" prot="public" final="yes">
    <compoundname>KeyTimer</compoundname>
    <basecompoundref refid="classNonCopyableAndNonMovable" prot="private" virt="non-virtual">NonCopyableAndNonMovable</basecompoundref>
    <includes refid="key__timer_8h" local="no">key_timer.h</includes>
    <templateparamlist>
      <param>
        <type>typename Resolution</type>
        <defval>std::chrono::milliseconds</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classKeyTimer_a354b5d5a956267a691bf92e8954e41b5_1a354b5d5a956267a691bf92e8954e41b5" prot="public" static="no">
        <type>std::conditional_t&lt; std::chrono::high_resolution_clock::is_steady, std::chrono::high_resolution_clock, std::chrono::steady_clock &gt;</type>
        <definition>using KeyTimer&lt; Resolution &gt;::TClock =  std::conditional_t&lt;std::chrono::high_resolution_clock::is_steady,
		std::chrono::high_resolution_clock,
		std::chrono::steady_clock&gt;</definition>
        <argsstring></argsstring>
        <name>TClock</name>
        <qualifiedname>KeyTimer::TClock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="24" column="1" bodyfile="inc/key_timer.h" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classKeyTimer_acae5e24195e3e4a060ef9fdb5fda0a84_1acae5e24195e3e4a060ef9fdb5fda0a84" prot="private" static="no" mutable="no">
        <type>TClock::time_point</type>
        <definition>TClock::time_point KeyTimer&lt; Resolution &gt;::m_start</definition>
        <argsstring></argsstring>
        <name>m_start</name>
        <qualifiedname>KeyTimer::m_start</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="28" column="20" bodyfile="inc/key_timer.h" bodystart="28" bodyend="28"/>
        <referencedby refid="classKeyTimer_ad70fae950b4e47856a2c9e774fc60410_1ad70fae950b4e47856a2c9e774fc60410" compoundref="key__timer_8h" startline="72" endline="98">KeyTimer&lt; Resolution &gt;::getMilliSecondsFromStart</referencedby>
        <referencedby refid="classKeyTimer_a3ef6f86f264d4a46cacfb27f5632c3fa_1a3ef6f86f264d4a46cacfb27f5632c3fa" compoundref="key__timer_8h" startline="101" endline="128">KeyTimer&lt; Resolution &gt;::getSecondsFromStart</referencedby>
        <referencedby refid="classKeyTimer_a8b1d7eb8755dd8c5512216c667183071_1a8b1d7eb8755dd8c5512216c667183071" compoundref="key__timer_8h" startline="63" endline="69">KeyTimer&lt; Resolution &gt;::reset</referencedby>
        <referencedby refid="classKeyTimer_adc8d991f669445558eb8fbebd6d35d9e_1adc8d991f669445558eb8fbebd6d35d9e" compoundref="key__timer_8h" startline="57" endline="61">KeyTimer&lt; Resolution &gt;::restart</referencedby>
        <referencedby refid="classKeyTimer_ab8ce8e8658a0ea7c9b5ab4028bc7b777_1ab8ce8e8658a0ea7c9b5ab4028bc7b777" compoundref="key__timer_8h" startline="50" endline="55">KeyTimer&lt; Resolution &gt;::start</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classKeyTimer_a14125899e463ee1c0ab55bc60070aee9_1a14125899e463ee1c0ab55bc60070aee9" prot="private" static="no" mutable="no">
        <type>TClock::time_point</type>
        <definition>TClock::time_point KeyTimer&lt; Resolution &gt;::m_last</definition>
        <argsstring></argsstring>
        <name>m_last</name>
        <qualifiedname>KeyTimer::m_last</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="29" column="20" bodyfile="inc/key_timer.h" bodystart="29" bodyend="29"/>
        <referencedby refid="classKeyTimer_ae18173dcedbcc9715ba123d065a2cc4f_1ae18173dcedbcc9715ba123d065a2cc4f" compoundref="key__timer_8h" startline="132" endline="137">KeyTimer&lt; Resolution &gt;::getTimeElapsed</referencedby>
        <referencedby refid="classKeyTimer_a8fb4f49cfe264bdc7f009cd04f47f2c3_1a8fb4f49cfe264bdc7f009cd04f47f2c3" compoundref="key__timer_8h" startline="141" endline="163">KeyTimer&lt; Resolution &gt;::getTimeElapsedSecs</referencedby>
        <referencedby refid="classKeyTimer_a8b4f14a4f7aa852923450db4885eff3e_1a8b4f14a4f7aa852923450db4885eff3e" compoundref="key__timer_8h" startline="172" endline="178">KeyTimer&lt; Resolution &gt;::lap</referencedby>
        <referencedby refid="classKeyTimer_a6d4a328eafcbc3e8964e4720ddfb01aa_1a6d4a328eafcbc3e8964e4720ddfb01aa" compoundref="key__timer_8h" startline="166" endline="169">KeyTimer&lt; Resolution &gt;::peekTimeElapsed</referencedby>
        <referencedby refid="classKeyTimer_ab8ce8e8658a0ea7c9b5ab4028bc7b777_1ab8ce8e8658a0ea7c9b5ab4028bc7b777" compoundref="key__timer_8h" startline="50" endline="55">KeyTimer&lt; Resolution &gt;::start</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classKeyTimer_a60db4cc912ab30b862ec3fd08e42bfd5_1a60db4cc912ab30b862ec3fd08e42bfd5" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t KeyTimer&lt; Resolution &gt;::m_duration</definition>
        <argsstring></argsstring>
        <name>m_duration</name>
        <qualifiedname>KeyTimer::m_duration</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="30" column="8" bodyfile="inc/key_timer.h" bodystart="30" bodyend="30"/>
        <referencedby refid="classKeyTimer_ad70fae950b4e47856a2c9e774fc60410_1ad70fae950b4e47856a2c9e774fc60410" compoundref="key__timer_8h" startline="72" endline="98">KeyTimer&lt; Resolution &gt;::getMilliSecondsFromStart</referencedby>
        <referencedby refid="classKeyTimer_adc8d991f669445558eb8fbebd6d35d9e_1adc8d991f669445558eb8fbebd6d35d9e" compoundref="key__timer_8h" startline="57" endline="61">KeyTimer&lt; Resolution &gt;::restart</referencedby>
        <referencedby refid="classKeyTimer_ab8ce8e8658a0ea7c9b5ab4028bc7b777_1ab8ce8e8658a0ea7c9b5ab4028bc7b777" compoundref="key__timer_8h" startline="50" endline="55">KeyTimer&lt; Resolution &gt;::start</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classKeyTimer_a2914a899d867c7310f37343b3a706456_1a2914a899d867c7310f37343b3a706456" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>KeyTimer&lt; Resolution &gt;::KeyTimer</definition>
        <argsstring>(bool bStart=false) noexcept</argsstring>
        <name>KeyTimer</name>
        <qualifiedname>KeyTimer::KeyTimer</qualifiedname>
        <param>
          <type>bool</type>
          <declname>bStart</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="32" column="10" bodyfile="inc/key_timer.h" bodystart="32" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_a2a8566ddc99413d5132e58ac268671d6_1a2a8566ddc99413d5132e58ac268671d6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>KeyTimer&lt; Resolution &gt;::~KeyTimer</definition>
        <argsstring>() noexcept</argsstring>
        <name>~KeyTimer</name>
        <qualifiedname>KeyTimer::~KeyTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="40" column="1" bodyfile="inc/key_timer.h" bodystart="40" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_ab8ce8e8658a0ea7c9b5ab4028bc7b777_1ab8ce8e8658a0ea7c9b5ab4028bc7b777" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KeyTimer&lt; Resolution &gt;::start</definition>
        <argsstring>() noexcept</argsstring>
        <name>start</name>
        <qualifiedname>KeyTimer::start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="50" column="6" bodyfile="inc/key_timer.h" bodystart="50" bodyend="55"/>
        <referencedby refid="classGame_ab829358e04b5eb1b8937db2a8683c3a0_1ab829358e04b5eb1b8937db2a8683c3a0" compoundref="game_8cpp" startline="35" endline="50">Game&lt; T &gt;::Game</referencedby>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics::Graphics</referencedby>
        <referencedby refid="classKeyTimer_a2914a899d867c7310f37343b3a706456_1a2914a899d867c7310f37343b3a706456" compoundref="key__timer_8h" startline="32" endline="38">KeyTimer&lt; Resolution &gt;::KeyTimer</referencedby>
        <referencedby refid="classArkanoid_a9a1f1afe82238ca3c10bf890a977a436_1a9a1f1afe82238ca3c10bf890a977a436" compoundref="game_8cpp" startline="603" endline="634">Arkanoid::loop</referencedby>
        <referencedby refid="classPerfLog_aa026ecc1939d4325f1fbc7efd4f8d199_1aa026ecc1939d4325f1fbc7efd4f8d199" compoundref="performance__log_8cpp" startline="57" endline="62">PerfLog::start</referencedby>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_adc8d991f669445558eb8fbebd6d35d9e_1adc8d991f669445558eb8fbebd6d35d9e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KeyTimer&lt; Resolution &gt;::restart</definition>
        <argsstring>() noexcept</argsstring>
        <name>restart</name>
        <qualifiedname>KeyTimer::restart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="57" column="6" bodyfile="inc/key_timer.h" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_a8b1d7eb8755dd8c5512216c667183071_1a8b1d7eb8755dd8c5512216c667183071" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KeyTimer&lt; Resolution &gt;::reset</definition>
        <argsstring>() noexcept</argsstring>
        <name>reset</name>
        <qualifiedname>KeyTimer::reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="63" column="6" bodyfile="inc/key_timer.h" bodystart="63" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_ad70fae950b4e47856a2c9e774fc60410_1ad70fae950b4e47856a2c9e774fc60410" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t KeyTimer&lt; Resolution &gt;::getMilliSecondsFromStart</definition>
        <argsstring>() noexcept</argsstring>
        <name>getMilliSecondsFromStart</name>
        <qualifiedname>KeyTimer::getMilliSecondsFromStart</qualifiedname>
        <briefdescription>
<para>returns the duration between m_start and now in milliseconds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="72" column="18" bodyfile="inc/key_timer.h" bodystart="72" bodyend="98"/>
        <referencedby refid="classKeyTimer_a2a8566ddc99413d5132e58ac268671d6_1a2a8566ddc99413d5132e58ac268671d6" compoundref="key__timer_8h" startline="40" endline="48">KeyTimer&lt; Resolution &gt;::~KeyTimer</referencedby>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_a3ef6f86f264d4a46cacfb27f5632c3fa_1a3ef6f86f264d4a46cacfb27f5632c3fa" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float KeyTimer&lt; Resolution &gt;::getSecondsFromStart</definition>
        <argsstring>() noexcept</argsstring>
        <name>getSecondsFromStart</name>
        <qualifiedname>KeyTimer::getSecondsFromStart</qualifiedname>
        <briefdescription>
<para>returns the duration between m_start and now in seconds </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="101" column="17" bodyfile="inc/key_timer.h" bodystart="101" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_ae18173dcedbcc9715ba123d065a2cc4f_1ae18173dcedbcc9715ba123d065a2cc4f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float KeyTimer&lt; Resolution &gt;::getTimeElapsed</definition>
        <argsstring>() noexcept</argsstring>
        <name>getTimeElapsed</name>
        <qualifiedname>KeyTimer::getTimeElapsed</qualifiedname>
        <briefdescription>
<para>marks a lap, which marks the current time </para>
        </briefdescription>
        <detaileddescription>
<para>returns duration in targeted Time Resolution between successive calls of the function and </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="132" column="7" bodyfile="inc/key_timer.h" bodystart="132" bodyend="137"/>
        <referencedby refid="classPerfLog_aa026ecc1939d4325f1fbc7efd4f8d199_1aa026ecc1939d4325f1fbc7efd4f8d199" compoundref="performance__log_8cpp" startline="57" endline="62">PerfLog::start</referencedby>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_a8fb4f49cfe264bdc7f009cd04f47f2c3_1a8fb4f49cfe264bdc7f009cd04f47f2c3" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float KeyTimer&lt; Resolution &gt;::getTimeElapsedSecs</definition>
        <argsstring>() noexcept</argsstring>
        <name>getTimeElapsedSecs</name>
        <qualifiedname>KeyTimer::getTimeElapsedSecs</qualifiedname>
        <briefdescription>
<para>marks a lap </para>
        </briefdescription>
        <detaileddescription>
<para>returns duration in seconds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="141" column="7" bodyfile="inc/key_timer.h" bodystart="141" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_a6d4a328eafcbc3e8964e4720ddfb01aa_1a6d4a328eafcbc3e8964e4720ddfb01aa" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float KeyTimer&lt; Resolution &gt;::peekTimeElapsed</definition>
        <argsstring>() const noexcept</argsstring>
        <name>peekTimeElapsed</name>
        <qualifiedname>KeyTimer::peekTimeElapsed</qualifiedname>
        <briefdescription>
<para>returns duration between the last call of <ref refid="classKeyTimer_ae18173dcedbcc9715ba123d065a2cc4f_1ae18173dcedbcc9715ba123d065a2cc4f" kindref="member">getTimeElapsed()</ref> and now </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="166" column="7" bodyfile="inc/key_timer.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_a8b4f14a4f7aa852923450db4885eff3e_1a8b4f14a4f7aa852923450db4885eff3e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>float</type>
        <definition>float KeyTimer&lt; Resolution &gt;::lap</definition>
        <argsstring>() noexcept</argsstring>
        <name>lap</name>
        <qualifiedname>KeyTimer::lap</qualifiedname>
        <briefdescription>
<para>works like getTimeElapsed/getTimeElapsedSecs but may be more performant </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="172" column="7" bodyfile="inc/key_timer.h" bodystart="172" bodyend="178"/>
        <referencedby refid="classArkanoid_aed6248f1d49ee4d132d1b087c394b4a1_1aed6248f1d49ee4d132d1b087c394b4a1" compoundref="game_8cpp" startline="636" endline="641">Arkanoid::calcDt</referencedby>
        <referencedby refid="classPerfLog_aeb1bf27a3021af63de8a7e13cb641470_1aeb1bf27a3021af63de8a7e13cb641470" compoundref="performance__log_8cpp" startline="64" endline="68">PerfLog::lap</referencedby>
        <referencedby refid="classSandbox3d_a22ca94841fcff1809793a061a7825155_1a22ca94841fcff1809793a061a7825155" compoundref="game_8cpp" startline="213" endline="287">Sandbox3d::loop</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classKeyTimer_a36bdadbd57baf7541c0b7c01ed688599_1a36bdadbd57baf7541c0b7c01ed688599" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KeyTimer&lt; Resolution &gt;::sleepFor</definition>
        <argsstring>(const float t)</argsstring>
        <name>sleepFor</name>
        <qualifiedname>KeyTimer::sleepFor</qualifiedname>
        <param>
          <type>const float</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>delays execution of this_thread for the amount of time specified (in milliseconds, or microseconds) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="182" column="13" bodyfile="inc/key_timer.h" bodystart="182" bodyend="188"/>
        <referencedby refid="classKeyTimer_a36bdadbd57baf7541c0b7c01ed688599_1a36bdadbd57baf7541c0b7c01ed688599" compoundref="key__timer_8h" startline="182" endline="188">KeyTimer&lt; Resolution &gt;::sleepFor</referencedby>
        <referencedby refid="classKeyTimer_ac7d3d30e328d2beb9bf3adaf7709257b_1ac7d3d30e328d2beb9bf3adaf7709257b" compoundref="key__timer_8h" startline="189" endline="192">KeyTimer&lt; Resolution &gt;::sleepFor</referencedby>
        <referencedby refid="classKeyTimer_ad599ad25448f723e7ca60f1a27633fb8_1ad599ad25448f723e7ca60f1a27633fb8" compoundref="key__timer_8h" startline="193" endline="196">KeyTimer&lt; Resolution &gt;::sleepFor</referencedby>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_ac7d3d30e328d2beb9bf3adaf7709257b_1ac7d3d30e328d2beb9bf3adaf7709257b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KeyTimer&lt; Resolution &gt;::sleepFor</definition>
        <argsstring>(const int t)</argsstring>
        <name>sleepFor</name>
        <qualifiedname>KeyTimer::sleepFor</qualifiedname>
        <param>
          <type>const int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="189" column="13" bodyfile="inc/key_timer.h" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_ad599ad25448f723e7ca60f1a27633fb8_1ad599ad25448f723e7ca60f1a27633fb8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KeyTimer&lt; Resolution &gt;::sleepFor</definition>
        <argsstring>(const uint64_t t)</argsstring>
        <name>sleepFor</name>
        <qualifiedname>KeyTimer::sleepFor</qualifiedname>
        <param>
          <type>const uint64_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="193" column="13" bodyfile="inc/key_timer.h" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_a4872b515a594cb40e044f73224a26dbb_1a4872b515a594cb40e044f73224a26dbb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KeyTimer&lt; Resolution &gt;::sleepFor</definition>
        <argsstring>(const std::chrono::milliseconds &amp;t)</argsstring>
        <name>sleepFor</name>
        <qualifiedname>KeyTimer::sleepFor</qualifiedname>
        <param>
          <type>const std::chrono::milliseconds &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="197" column="13" bodyfile="inc/key_timer.h" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classKeyTimer_a44678e0ae6fde0998b509c41ccaa70df_1a44678e0ae6fde0998b509c41ccaa70df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void KeyTimer&lt; Resolution &gt;::sleepFor</definition>
        <argsstring>(const std::chrono::microseconds &amp;t)</argsstring>
        <name>sleepFor</name>
        <qualifiedname>KeyTimer::sleepFor</qualifiedname>
        <param>
          <type>const std::chrono::microseconds &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_timer.h" line="201" column="13" bodyfile="inc/key_timer.h" bodystart="201" bodyend="204"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KeyTimer&lt; Resolution &gt;</label>
        <link refid="classKeyTimer"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NonCopyableAndNonMovable</label>
        <link refid="classNonCopyableAndNonMovable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KeyTimer&lt; Resolution &gt;</label>
        <link refid="classKeyTimer"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NonCopyableAndNonMovable</label>
        <link refid="classNonCopyableAndNonMovable"/>
      </node>
    </collaborationgraph>
    <location file="inc/key_timer.h" line="20" column="1" bodyfile="inc/key_timer.h" bodystart="22" bodyend="206"/>
    <listofallmembers>
      <member refid="classKeyTimer_ad70fae950b4e47856a2c9e774fc60410_1ad70fae950b4e47856a2c9e774fc60410" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>getMilliSecondsFromStart</name></member>
      <member refid="classKeyTimer_a3ef6f86f264d4a46cacfb27f5632c3fa_1a3ef6f86f264d4a46cacfb27f5632c3fa" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>getSecondsFromStart</name></member>
      <member refid="classKeyTimer_ae18173dcedbcc9715ba123d065a2cc4f_1ae18173dcedbcc9715ba123d065a2cc4f" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>getTimeElapsed</name></member>
      <member refid="classKeyTimer_a8fb4f49cfe264bdc7f009cd04f47f2c3_1a8fb4f49cfe264bdc7f009cd04f47f2c3" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>getTimeElapsedSecs</name></member>
      <member refid="classKeyTimer_a2914a899d867c7310f37343b3a706456_1a2914a899d867c7310f37343b3a706456" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>KeyTimer</name></member>
      <member refid="classKeyTimer_a8b4f14a4f7aa852923450db4885eff3e_1a8b4f14a4f7aa852923450db4885eff3e" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>lap</name></member>
      <member refid="classKeyTimer_a60db4cc912ab30b862ec3fd08e42bfd5_1a60db4cc912ab30b862ec3fd08e42bfd5" prot="private" virt="non-virtual"><scope>KeyTimer</scope><name>m_duration</name></member>
      <member refid="classKeyTimer_a14125899e463ee1c0ab55bc60070aee9_1a14125899e463ee1c0ab55bc60070aee9" prot="private" virt="non-virtual"><scope>KeyTimer</scope><name>m_last</name></member>
      <member refid="classKeyTimer_acae5e24195e3e4a060ef9fdb5fda0a84_1acae5e24195e3e4a060ef9fdb5fda0a84" prot="private" virt="non-virtual"><scope>KeyTimer</scope><name>m_start</name></member>
      <member refid="classNonCopyableAndNonMovable_a0f3fc95f2c582514d58832b7c14d2965_1a0f3fc95f2c582514d58832b7c14d2965" prot="private" virt="non-virtual"><scope>KeyTimer</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_a3502311a2435129e171eb36ba05f0b2f_1a3502311a2435129e171eb36ba05f0b2f" prot="private" virt="non-virtual"><scope>KeyTimer</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_a259655d15f1887d015c6d77a0f09f4ff_1a259655d15f1887d015c6d77a0f09f4ff" prot="private" virt="non-virtual"><scope>KeyTimer</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_acadc47621b689b1b95bef13a35f18572_1acadc47621b689b1b95bef13a35f18572" prot="private" virt="non-virtual"><scope>KeyTimer</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_a6541862f56b2fcaa89155f08b8adaf11_1a6541862f56b2fcaa89155f08b8adaf11" prot="private" virt="non-virtual"><scope>KeyTimer</scope><name>operator=</name></member>
      <member refid="classNonCopyableAndNonMovable_aa3af41edbd14c886cdec335b22254829_1aa3af41edbd14c886cdec335b22254829" prot="private" virt="non-virtual"><scope>KeyTimer</scope><name>operator=</name></member>
      <member refid="classNonCopyableAndNonMovable_a972632a389e0f2370de9604df60ea9d6_1a972632a389e0f2370de9604df60ea9d6" prot="private" virt="non-virtual"><scope>KeyTimer</scope><name>operator=</name></member>
      <member refid="classKeyTimer_a6d4a328eafcbc3e8964e4720ddfb01aa_1a6d4a328eafcbc3e8964e4720ddfb01aa" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>peekTimeElapsed</name></member>
      <member refid="classKeyTimer_a8b1d7eb8755dd8c5512216c667183071_1a8b1d7eb8755dd8c5512216c667183071" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>reset</name></member>
      <member refid="classKeyTimer_adc8d991f669445558eb8fbebd6d35d9e_1adc8d991f669445558eb8fbebd6d35d9e" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>restart</name></member>
      <member refid="classKeyTimer_a36bdadbd57baf7541c0b7c01ed688599_1a36bdadbd57baf7541c0b7c01ed688599" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>sleepFor</name></member>
      <member refid="classKeyTimer_ac7d3d30e328d2beb9bf3adaf7709257b_1ac7d3d30e328d2beb9bf3adaf7709257b" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>sleepFor</name></member>
      <member refid="classKeyTimer_ad599ad25448f723e7ca60f1a27633fb8_1ad599ad25448f723e7ca60f1a27633fb8" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>sleepFor</name></member>
      <member refid="classKeyTimer_a4872b515a594cb40e044f73224a26dbb_1a4872b515a594cb40e044f73224a26dbb" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>sleepFor</name></member>
      <member refid="classKeyTimer_a44678e0ae6fde0998b509c41ccaa70df_1a44678e0ae6fde0998b509c41ccaa70df" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>sleepFor</name></member>
      <member refid="classKeyTimer_ab8ce8e8658a0ea7c9b5ab4028bc7b777_1ab8ce8e8658a0ea7c9b5ab4028bc7b777" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>start</name></member>
      <member refid="classKeyTimer_a354b5d5a956267a691bf92e8954e41b5_1a354b5d5a956267a691bf92e8954e41b5" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>TClock</name></member>
      <member refid="classKeyTimer_a2a8566ddc99413d5132e58ac268671d6_1a2a8566ddc99413d5132e58ac268671d6" prot="public" virt="non-virtual"><scope>KeyTimer</scope><name>~KeyTimer</name></member>
      <member refid="classNonCopyableAndNonMovable_aa6874bb9a99fe151e8c2eda429fe5867_1aa6874bb9a99fe151e8c2eda429fe5867" prot="private" virt="non-virtual"><scope>KeyTimer</scope><name>~NonCopyableAndNonMovable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
