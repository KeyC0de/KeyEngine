<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="testing_8cpp" kind="file" language="C++">
    <compoundname>testing.cpp</compoundname>
    <includes refid="testing_8h" local="yes">testing.h</includes>
    <includes refid="key__wrl_8h" local="yes">key_wrl.h</includes>
    <includes local="no">array</includes>
    <includes refid="graphics_8h" local="yes">graphics.h</includes>
    <includes refid="window_8h" local="yes">window.h</includes>
    <includes refid="dynamic__constant__buffer_8h" local="yes">dynamic_constant_buffer.h</includes>
    <includes refid="material__loader_8h" local="yes">material_loader.h</includes>
    <includes refid="mesh_8h" local="yes">mesh.h</includes>
    <includes refid="d3d__utils_8h" local="yes">d3d_utils.h</includes>
    <includes refid="index__buffer_8h" local="yes">index_buffer.h</includes>
    <includes refid="input__layout_8h" local="yes">input_layout.h</includes>
    <includes refid="pixel__shader_8h" local="yes">pixel_shader.h</includes>
    <includes refid="primitive__topology_8h" local="yes">primitive_topology.h</includes>
    <includes refid="vertex__buffer_8h" local="yes">vertex_buffer.h</includes>
    <includes refid="vertex__shader_8h" local="yes">vertex_shader.h</includes>
    <includes refid="render__target_8h" local="yes">render_target.h</includes>
    <includes refid="bitmap_8h" local="yes">bitmap.h</includes>
    <includes refid="assertions__console_8h" local="yes">assertions_console.h</includes>
    <includes local="yes">assimp/Importer.hpp</includes>
    <includes local="yes">assimp/scene.h</includes>
    <includes local="yes">assimp/postprocess.h</includes>
    <includes refid="bmp__loader_8h" local="yes">bmp_loader.h</includes>
    <includes refid="key__lua_8h" local="yes">key_lua.h</includes>
    <incdepgraph>
      <node id="33">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>bindable.h</label>
        <link refid="bindable_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>bitmap.h</label>
        <link refid="bitmap_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>bmp_loader.h</label>
        <link refid="bmp__loader_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="25">
        <label>console.h</label>
        <link refid="console_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>d3d_utils.h</label>
        <link refid="d3d__utils_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>dynamic_constant_buffer.h</label>
        <link refid="dynamic__constant__buffer_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>dynamic_vertex_buffer.h</label>
        <link refid="dynamic__vertex__buffer_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>graphics_friend.h</label>
        <link refid="graphics__friend_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>index_buffer.h</label>
        <link refid="index__buffer_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>input_layout.h</label>
        <link refid="input__layout_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>key_exception.h</label>
        <link refid="key__exception_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>key_lua.h</label>
        <link refid="key__lua_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>key_timer.h</label>
        <link refid="key__timer_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>key_wrl.h</label>
        <link refid="key__wrl_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>keyboard.h</label>
        <link refid="keyboard_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>material.h</label>
        <link refid="material_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>material_loader.h</label>
        <link refid="material__loader_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>mesh.h</label>
        <link refid="mesh_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>mouse.h</label>
        <link refid="mouse_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="70">
        <label>os_utils.h</label>
        <link refid="os__utils_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>pixel_shader.h</label>
        <link refid="pixel__shader_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>primitive_topology.h</label>
        <link refid="primitive__topology_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>render_surface.h</label>
        <link refid="render__surface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>render_target.h</label>
        <link refid="render__target_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>rendering_channel.h</label>
        <link refid="rendering__channel_8h"/>
      </node>
      <node id="2">
        <label>testing.h</label>
        <link refid="testing_8h"/>
      </node>
      <node id="21">
        <label>texture_desc.h</label>
        <link refid="texture__desc_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>transform_vscb.h</label>
        <link refid="transform__vscb_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>vertex_buffer.h</label>
        <link refid="vertex__buffer_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>vertex_shader.h</label>
        <link refid="vertex__shader_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>window.h</label>
        <link refid="window_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>windows_hidden_defs.h</label>
        <link refid="windows__hidden__defs_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/testing.cpp</label>
        <link refid="testing_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>DirectXMath.h</label>
      </node>
      <node id="86">
        <label>DirectxMath.h</label>
      </node>
      <node id="75">
        <label>ShlObj.h</label>
      </node>
      <node id="9">
        <label>Windows.h</label>
      </node>
      <node id="41">
        <label>algorithm</label>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="88">
        <label>assimp/Importer.hpp</label>
      </node>
      <node id="89">
        <label>assimp/postprocess.h</label>
      </node>
      <node id="61">
        <label>assimp/scene.h</label>
      </node>
      <node id="37">
        <label>bitset</label>
      </node>
      <node id="55">
        <label>cassert</label>
      </node>
      <node id="24">
        <label>chrono</label>
      </node>
      <node id="39">
        <label>cinttypes</label>
      </node>
      <node id="27">
        <label>cmath</label>
      </node>
      <node id="72">
        <label>comdef.h</label>
      </node>
      <node id="38">
        <label>cstddef</label>
      </node>
      <node id="28">
        <label>cstdint</label>
      </node>
      <node id="11">
        <label>d3d11.h</label>
      </node>
      <node id="12">
        <label>d3dcompiler.h</label>
      </node>
      <node id="10">
        <label>dxgi1_4.h</label>
      </node>
      <node id="87">
        <label>dxtex/DirectXTex.h</label>
      </node>
      <node id="45">
        <label>execution</label>
      </node>
      <node id="58">
        <label>filesystem</label>
      </node>
      <node id="91">
        <label>fstream</label>
      </node>
      <node id="74">
        <label>functional</label>
      </node>
      <node id="40">
        <label>future</label>
      </node>
      <node id="31">
        <label>iomanip</label>
      </node>
      <node id="34">
        <label>iostream</label>
      </node>
      <node id="43">
        <label>iterator</label>
      </node>
      <node id="32">
        <label>limits</label>
      </node>
      <node id="94">
        <label>lua/lauxlib.h</label>
      </node>
      <node id="93">
        <label>lua/lua.h</label>
      </node>
      <node id="95">
        <label>lua/lualib.h</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="42">
        <label>numeric</label>
      </node>
      <node id="49">
        <label>optional</label>
      </node>
      <node id="51">
        <label>queue</label>
      </node>
      <node id="44">
        <label>regex</label>
      </node>
      <node id="8">
        <label>sdkddkver.h</label>
      </node>
      <node id="36">
        <label>set</label>
      </node>
      <node id="30">
        <label>sstream</label>
      </node>
      <node id="19">
        <label>stdexcept</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="23">
        <label>thread</label>
      </node>
      <node id="73">
        <label>tlhelp32.h</label>
      </node>
      <node id="69">
        <label>tuple</label>
      </node>
      <node id="29">
        <label>type_traits</label>
      </node>
      <node id="56">
        <label>unordered_map</label>
      </node>
      <node id="60">
        <label>utility</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
      <node id="76">
        <label>wincred.h</label>
      </node>
      <node id="71">
        <label>winternl.h</label>
      </node>
      <node id="4">
        <label>wrl.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="testing_8cpp_ad37a13097027655233f9bdbad37ae2e6_1ad37a13097027655233f9bdbad37ae2e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testDynamicMeshLoading</definition>
        <argsstring>()</argsstring>
        <name>testDynamicMeshLoading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testing.cpp" line="30" column="6" bodyfile="src/testing.cpp" bodystart="30" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="testing_8cpp_ae002839ec404fe382577e391a3e7bcde_1ae002839ec404fe382577e391a3e7bcde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testMaterialSystemLoading</definition>
        <argsstring>(Graphics &amp;gfx)</argsstring>
        <name>testMaterialSystemLoading</name>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testing.cpp" line="57" column="6" bodyfile="src/testing.cpp" bodystart="57" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="testing_8cpp_acd54f63bbbbb89229fb81663a0339b1b_1acd54f63bbbbb89229fb81663a0339b1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testScaleMatrixTranslation</definition>
        <argsstring>()</argsstring>
        <name>testScaleMatrixTranslation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testing.cpp" line="70" column="6" bodyfile="src/testing.cpp" bodystart="70" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="testing_8cpp_a615223c9014d0338497568c46d43ca1f_1a615223c9014d0338497568c46d43ca1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testDynamicConstant</definition>
        <argsstring>()</argsstring>
        <name>testDynamicConstant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testing.cpp" line="83" column="6" bodyfile="src/testing.cpp" bodystart="83" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="testing_8cpp_a6602bea1ca81d830dfee5423f7f48029_1a6602bea1ca81d830dfee5423f7f48029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testDynamicVertex</definition>
        <argsstring>(Window &amp;wnd)</argsstring>
        <name>testDynamicVertex</name>
        <param>
          <type><ref refid="classWindow" kindref="compound">Window</ref> &amp;</type>
          <declname>wnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testing.cpp" line="346" column="6" bodyfile="src/testing.cpp" bodystart="346" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="testing_8cpp_a6b44f338fef29603e9cf1a6a676d2599_1a6b44f338fef29603e9cf1a6a676d2599" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testBmpLoading</definition>
        <argsstring>()</argsstring>
        <name>testBmpLoading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testing.cpp" line="400" column="6" bodyfile="src/testing.cpp" bodystart="400" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="testing_8cpp_a90951fbdfdc4dc81d9dd7a95ee39feb5_1a90951fbdfdc4dc81d9dd7a95ee39feb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testLuaScripting</definition>
        <argsstring>()</argsstring>
        <name>testLuaScripting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/testing.cpp" line="407" column="6" bodyfile="src/testing.cpp" bodystart="407" bodyend="439"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testing_8h" kindref="compound">testing.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="key__wrl_8h" kindref="compound">key_wrl.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>remove<sp/>it,<sp/>you<sp/>heard<sp/>me</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="graphics_8h" kindref="compound">graphics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="window_8h" kindref="compound">window.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="dynamic__constant__buffer_8h" kindref="compound">dynamic_constant_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="material__loader_8h" kindref="compound">material_loader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="mesh_8h" kindref="compound">mesh.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="d3d__utils_8h" kindref="compound">d3d_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="index__buffer_8h" kindref="compound">index_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="input__layout_8h" kindref="compound">input_layout.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="pixel__shader_8h" kindref="compound">pixel_shader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="primitive__topology_8h" kindref="compound">primitive_topology.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="vertex__buffer_8h" kindref="compound">vertex_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="vertex__shader_8h" kindref="compound">vertex_shader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="render__target_8h" kindref="compound">render_target.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="bitmap_8h" kindref="compound">bitmap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="assertions__console_8h" kindref="compound">assertions_console.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;assimp/Importer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;assimp/scene.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;assimp/postprocess.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="bmp__loader_8h" kindref="compound">bmp_loader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="key__lua_8h" kindref="compound">key_lua.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceDirectX" kindref="compound">dx</ref><sp/>=<sp/><ref refid="namespaceDirectX" kindref="compound">DirectX</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="testing_8h_ad37a13097027655233f9bdbad37ae2e6_1ad37a13097027655233f9bdbad37ae2e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="testing_8cpp_ad37a13097027655233f9bdbad37ae2e6_1ad37a13097027655233f9bdbad37ae2e6" kindref="member">testDynamicMeshLoading</ref>()</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacever" kindref="compound">ver</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Assimp::Importer<sp/>imp;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pScene<sp/>=<sp/>imp.ReadFile(<sp/></highlight><highlight class="stringliteral">&quot;assets/models/brick_wall/brick_wall.obj&quot;</highlight><highlight class="normal">,<sp/>aiProcess_Triangulate<sp/>|<sp/>aiProcess_JoinIdenticalVertices<sp/>|<sp/>aiProcess_ConvertToLeftHanded<sp/>|<sp/>aiProcess_GenNormals<sp/>|<sp/>aiProcess_CalcTangentSpace<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layout<sp/>=<sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref>{}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classver_1_1VertexInputLayout_a7adfb63eeb82ed86d1144d70fddc0dee_1a7adfb63eeb82ed86d1144d70fddc0dee" kindref="member">add</ref>(<sp/>VertexInputLayout::Position3D<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classver_1_1VertexInputLayout_a7adfb63eeb82ed86d1144d70fddc0dee_1a7adfb63eeb82ed86d1144d70fddc0dee" kindref="member">add</ref>(<sp/>VertexInputLayout::Normal<sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classver_1_1VertexInputLayout_a7adfb63eeb82ed86d1144d70fddc0dee_1a7adfb63eeb82ed86d1144d70fddc0dee" kindref="member">add</ref>(<sp/>VertexInputLayout::Tangent<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classver_1_1VertexInputLayout_a7adfb63eeb82ed86d1144d70fddc0dee_1a7adfb63eeb82ed86d1144d70fddc0dee" kindref="member">add</ref>(<sp/>VertexInputLayout::Bitangent<sp/>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classver_1_1VertexInputLayout_a7adfb63eeb82ed86d1144d70fddc0dee_1a7adfb63eeb82ed86d1144d70fddc0dee" kindref="member">add</ref>(<sp/>VertexInputLayout::Texture2D<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBuffer" kindref="compound">ver::VBuffer</ref><sp/>cb{std::move(<sp/>layout<sp/>),<sp/>*pScene-&gt;mMeshes[0]};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0ull,<sp/>end<sp/>=<sp/>cb.getVertexCount();<sp/>i<sp/>&lt;<sp/>end;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>cb[i].getElement&lt;VertexInputLayout::Position3D&gt;();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>cb[i].getElement&lt;VertexInputLayout::Normal&gt;();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>cb[i].getElement&lt;VertexInputLayout::Tangent&gt;();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>cb[i].getElement&lt;VertexInputLayout::Bitangent&gt;();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>cb[i].getElement&lt;VertexInputLayout::Texture2D&gt;();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="testing_8h_ae002839ec404fe382577e391a3e7bcde_1ae002839ec404fe382577e391a3e7bcde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="testing_8cpp_ae002839ec404fe382577e391a3e7bcde_1ae002839ec404fe382577e391a3e7bcde" kindref="member">testMaterialSystemLoading</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>strPath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;assets/models/brick_wall/brick_wall.obj&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>std::filesystem::path<sp/>path{strPath};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Assimp::Importer<sp/>imp;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pScene<sp/>=<sp/>imp.ReadFile(<sp/>strPath,<sp/>aiProcess_Triangulate<sp/>|<sp/>aiProcess_JoinIdenticalVertices<sp/>|<sp/>aiProcess_ConvertToLeftHanded<sp/>|<sp/>aiProcess_GenNormals<sp/>|<sp/>aiProcess_CalcTangentSpace<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMaterialLoader" kindref="compound">MaterialLoader</ref><sp/>mat{gfx,<sp/>*(pScene-&gt;mMaterials[1]),<sp/>path};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMesh" kindref="compound">Mesh</ref><sp/><ref refid="namespacemesh" kindref="compound">mesh</ref>{gfx,<sp/>mat,<sp/>*pScene-&gt;mMeshes[0]};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="testing_8h_acd54f63bbbbb89229fb81663a0339b1b_1acd54f63bbbbb89229fb81663a0339b1b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="testing_8cpp_acd54f63bbbbb89229fb81663a0339b1b_1acd54f63bbbbb89229fb81663a0339b1b" kindref="member">testScaleMatrixTranslation</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tlMat<sp/>=<sp/>DirectX::XMMatrixTranslation(<sp/>20.f,<sp/>30.f,<sp/>40.f<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>tlMat<sp/>=<sp/><ref refid="namespaceutil_a66c68478c4448bcbe2eeee0bd09b4bd9_1a66c68478c4448bcbe2eeee0bd09b4bd9" kindref="member">util::scaleTranslation</ref>(<sp/>tlMat,<sp/>0.1f<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>dx::XMFLOAT4X4<sp/>f4{};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>dx::XMStoreFloat4x4(<sp/>&amp;f4,<sp/>tlMat<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>etl<sp/>=<sp/><ref refid="namespaceutil_a26b269c9ffa8b7895942433253d492b5_1a26b269c9ffa8b7895942433253d492b5" kindref="member">util::extractTranslation</ref>(<sp/>f4<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>etl.x<sp/>==<sp/>2.f<sp/>&amp;&amp;<sp/>etl.y<sp/>==<sp/>3.f<sp/>&amp;&amp;<sp/>etl.z<sp/>==<sp/>4.f,<sp/></highlight><highlight class="stringliteral">&quot;NO!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="testing_8h_a615223c9014d0338497568c46d43ca1f_1a615223c9014d0338497568c46d43ca1f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="testing_8cpp_a615223c9014d0338497568c46d43ca1f_1a615223c9014d0338497568c46d43ca1f" kindref="member">testDynamicConstant</ref>()</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::string_literals;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>roundtrip<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5aa75d3cc2c3da26872d3e1377c2c3f45f" kindref="member">con::Struct</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s].<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float3&gt;(<sp/></highlight><highlight class="stringliteral">&quot;pubes&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s].<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float&gt;(<sp/></highlight><highlight class="stringliteral">&quot;dank&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float&gt;(<sp/></highlight><highlight class="stringliteral">&quot;woot&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s].set&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5aa75d3cc2c3da26872d3e1377c2c3f45f" kindref="member">con::Struct</ref>&gt;(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s].T().<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float3&gt;(<sp/></highlight><highlight class="stringliteral">&quot;twerk&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s].T().<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;werk&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s].T()[</highlight><highlight class="stringliteral">&quot;werk&quot;</highlight><highlight class="normal">s].set&lt;con::Float&gt;(<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s].T().<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;meta&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s].T()[</highlight><highlight class="stringliteral">&quot;meta&quot;</highlight><highlight class="normal">s].set&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s].T()[</highlight><highlight class="stringliteral">&quot;meta&quot;</highlight><highlight class="normal">s].T().set&lt;con::Matrix&gt;(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s].T().<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Bool&gt;(<sp/></highlight><highlight class="stringliteral">&quot;booler&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fails:<sp/>duplicate<sp/>symbol<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>s.add&lt;con::Bool&gt;(<sp/>&quot;arr&quot;s<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fails:<sp/>bad<sp/>symbol<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//s.add&lt;con::Bool&gt;(<sp/>&quot;69man&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref>(<sp/>std::move(<sp/>lay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fails<sp/>to<sp/>compile:<sp/>conversion<sp/>not<sp/>in<sp/>topo<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cb[&quot;woot&quot;s]<sp/>=<sp/>&quot;#&quot;s;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sig<sp/>=<sp/>cb.getRootElement().calcSignature();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>exp<sp/>=<sp/>42.0f;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;woot&quot;</highlight><highlight class="normal">s]<sp/>=<sp/>exp;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>act<sp/>=<sp/>cb[</highlight><highlight class="stringliteral">&quot;woot&quot;</highlight><highlight class="normal">s];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>act<sp/>==<sp/>exp,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>exp<sp/>=<sp/>420.0f;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;dank&quot;</highlight><highlight class="normal">s]<sp/>=<sp/>exp;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>act<sp/>=<sp/>cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;dank&quot;</highlight><highlight class="normal">s];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>act<sp/>==<sp/>exp,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>exp<sp/>=<sp/>111.0f;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s][2][</highlight><highlight class="stringliteral">&quot;werk&quot;</highlight><highlight class="normal">s][5]<sp/>=<sp/>exp;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>act<sp/>=<sp/>cb[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s][2][</highlight><highlight class="stringliteral">&quot;werk&quot;</highlight><highlight class="normal">s][5];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>act<sp/>==<sp/>exp,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>exp<sp/>=<sp/>DirectX::XMFLOAT3{69.0f,<sp/>0.0f,<sp/>0.0f};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;pubes&quot;</highlight><highlight class="normal">s]<sp/>=<sp/>exp;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx::XMFLOAT3<sp/>act<sp/>=<sp/>cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;pubes&quot;</highlight><highlight class="normal">s];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>!std::memcmp(<sp/>&amp;exp,<sp/>&amp;act,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>DirectX::XMFLOAT3<sp/>)<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DirectX::XMFLOAT4X4<sp/>exp{};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx::XMStoreFloat4x4(<sp/>&amp;exp,<sp/>dx::XMMatrixIdentity()<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s][2][</highlight><highlight class="stringliteral">&quot;meta&quot;</highlight><highlight class="normal">s][5][3]<sp/>=<sp/>exp;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx::XMFLOAT4X4<sp/>act<sp/>=<sp/>cb[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s][2][</highlight><highlight class="stringliteral">&quot;meta&quot;</highlight><highlight class="normal">s][5][3];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>!std::memcmp(<sp/>&amp;exp,<sp/>&amp;act,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>DirectX::XMFLOAT4X4<sp/>)<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>exp<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s][2][</highlight><highlight class="stringliteral">&quot;booler&quot;</highlight><highlight class="normal">s]<sp/>=<sp/>exp;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>act<sp/>=<sp/>cb[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s][2][</highlight><highlight class="stringliteral">&quot;booler&quot;</highlight><highlight class="normal">s];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>act<sp/>==<sp/>exp,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>exp<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s][2][</highlight><highlight class="stringliteral">&quot;booler&quot;</highlight><highlight class="normal">s]<sp/>=<sp/>exp;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>act<sp/>=<sp/>cb[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s][2][</highlight><highlight class="stringliteral">&quot;booler&quot;</highlight><highlight class="normal">s];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>act<sp/>==<sp/>exp,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;pubes&quot;</highlight><highlight class="normal">s].isValid(),<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>!cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;fubar&quot;</highlight><highlight class="normal">s].isValid(),<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ref<sp/>=<sp/>cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;pubes&quot;</highlight><highlight class="normal">s];<sp/>ref.isValid()<sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx::XMFLOAT3<sp/>f<sp/>=<sp/>ref;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>f.x<sp/>==<sp/>69.0f,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>if<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;pubes&quot;</highlight><highlight class="normal">s].setIfValid(<sp/>dx::XMFLOAT3{1.0f,<sp/>2.0f,<sp/>3.0f}<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;f3<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">dx::XMFLOAT3&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;pubes&quot;</highlight><highlight class="normal">s]);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>f3.x<sp/>==<sp/>1.0f<sp/>&amp;&amp;<sp/>f3.y<sp/>==<sp/>2.0f<sp/>&amp;&amp;<sp/>f3.z<sp/>==<sp/>3.0f,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>!cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;phubar&quot;</highlight><highlight class="normal">s].setIfValid(<sp/>dx::XMFLOAT3{2.0f,<sp/>2.0f,<sp/>7.0f}<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;cb2<sp/>=<sp/>cb;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx::XMFLOAT4X4<sp/>act<sp/>=<sp/>cb2[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s][2][</highlight><highlight class="stringliteral">&quot;meta&quot;</highlight><highlight class="normal">s][5][3];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>act._11<sp/>==<sp/>1.0f,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>doesn&apos;t<sp/>compile:<sp/>buffer<sp/>is<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cb[&quot;arr&quot;][2][&quot;booler&quot;]<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static_cast&lt;bool&amp;&gt;(cb[&quot;arr&quot;][2][&quot;booler&quot;])<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>fails<sp/>ASSERTion:<sp/>array<sp/>out<sp/>of<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cb[&quot;arr&quot;s][200];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>test<sp/>array<sp/>of<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">].set&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">].T().set&lt;con::Matrix&gt;(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref>(<sp/>std::move(<sp/>lay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>act<sp/>=<sp/>cb.getSizeInBytes();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>act<sp/>==<sp/>16u<sp/>*<sp/>4u<sp/>*<sp/>4u<sp/>*<sp/>6u,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>test<sp/>array<sp/>of<sp/>floats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">].set&lt;con::Float&gt;(<sp/>16<sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref>(<sp/>std::move(<sp/>lay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>act<sp/>=<sp/>cb.getSizeInBytes();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>act<sp/>==<sp/>256u,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>test<sp/>array<sp/>of<sp/>structs<sp/>with<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">].set&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5aa75d3cc2c3da26872d3e1377c2c3f45f" kindref="member">con::Struct</ref>&gt;(<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">s].T().<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float2&gt;(<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">].T().<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float3&gt;(<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref>(<sp/>std::move(<sp/>lay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>act<sp/>=<sp/>cb.getSizeInBytes();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>act<sp/>==<sp/>16u<sp/>*<sp/>2u<sp/>*<sp/>6u,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>test<sp/>array<sp/>of<sp/>primitive<sp/>that<sp/>needs<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">].set&lt;con::Float3&gt;(<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref>(<sp/>std::move(<sp/>lay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>act<sp/>=<sp/>cb.getSizeInBytes();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>act<sp/>==<sp/>16u<sp/>*<sp/>6u,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>testing<sp/>CookedLayout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">].set&lt;con::Float3&gt;(<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cooked<sp/>=<sp/><ref refid="classcon_1_1LayoutMap_a1c3854382a84e6b2f510aadd916d8ce4_1a1c3854382a84e6b2f510aadd916d8ce4" kindref="member">con::LayoutMap::fetch</ref>(<sp/>std::move(<sp/>lay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>raw<sp/>is<sp/>cleared<sp/>after<sp/>donating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float&gt;(<sp/></highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fails<sp/>to<sp/>compile,<sp/>cooked<sp/>returns<sp/>const&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cooked[&quot;arr&quot;].add&lt;con::Float&gt;(&quot;buttman&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b1<sp/>=<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref>(<sp/>cooked<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">][0]<sp/>=<sp/>dx::XMFLOAT3{<sp/>69.0f,<sp/>0.0f,<sp/>0.0f<sp/>};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b2<sp/>=<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref>(<sp/>cooked<sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b2[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">][0]<sp/>=<sp/>dx::XMFLOAT3{<sp/>420.0f,<sp/>0.0f,<sp/>0.0f<sp/>};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">dx::XMFLOAT3</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b1[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">][0]).x<sp/>==<sp/>69.0f,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">dx::XMFLOAT3</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b2[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">][0]).x<sp/>==<sp/>420.0f,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specific<sp/>testing<sp/>scenario<sp/>(packing<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float4&gt;(<sp/></highlight><highlight class="stringliteral">&quot;materialColor&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float3&gt;(<sp/></highlight><highlight class="stringliteral">&quot;modelSpecularColor&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float&gt;(<sp/></highlight><highlight class="stringliteral">&quot;modelSpecularGloss&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cooked<sp/>=<sp/><ref refid="classcon_1_1LayoutMap_a1c3854382a84e6b2f510aadd916d8ce4_1a1c3854382a84e6b2f510aadd916d8ce4" kindref="member">con::LayoutMap::fetch</ref>(<sp/>std::move(<sp/>lay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>cooked.getSizeInBytes()<sp/>==<sp/>48u,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>non-packing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">].set&lt;con::Float&gt;(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cooked<sp/>=<sp/><ref refid="classcon_1_1LayoutMap_a1c3854382a84e6b2f510aadd916d8ce4_1a1c3854382a84e6b2f510aadd916d8ce4" kindref="member">con::LayoutMap::fetch</ref>(<sp/>std::move(<sp/>lay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>cooked.getSizeInBytes()<sp/>==<sp/>160u,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>of<sp/>struct<sp/>w/<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">].set&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5aa75d3cc2c3da26872d3e1377c2c3f45f" kindref="member">con::Struct</ref>&gt;(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">].T().<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float3&gt;(<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;arr&quot;</highlight><highlight class="normal">].T().<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float2&gt;(<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cooked<sp/>=<sp/><ref refid="classcon_1_1LayoutMap_a1c3854382a84e6b2f510aadd916d8ce4_1a1c3854382a84e6b2f510aadd916d8ce4" kindref="member">con::LayoutMap::fetch</ref>(<sp/>std::move(<sp/>lay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>cooked.getSizeInBytes()<sp/>==<sp/>320u,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>testing<sp/>pointer<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5aa75d3cc2c3da26872d3e1377c2c3f45f" kindref="member">con::Struct</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s].<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float3&gt;(<sp/></highlight><highlight class="stringliteral">&quot;pubes&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s].<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float&gt;(<sp/></highlight><highlight class="stringliteral">&quot;dank&quot;</highlight><highlight class="normal">s<sp/>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref>(<sp/>std::move(<sp/>lay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>exp<sp/>=<sp/>696969.6969f;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;dank&quot;</highlight><highlight class="normal">s]<sp/>=<sp/>696969.6969f;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;)cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;dank&quot;</highlight><highlight class="normal">s]<sp/>==<sp/>exp,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>*(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)&amp;cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;dank&quot;</highlight><highlight class="normal">s]<sp/>==<sp/>exp,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>exp2<sp/>=<sp/>42.424242f;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)&amp;cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;dank&quot;</highlight><highlight class="normal">s]<sp/>=<sp/>exp2;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;)cb[</highlight><highlight class="stringliteral">&quot;butts&quot;</highlight><highlight class="normal">s][</highlight><highlight class="stringliteral">&quot;dank&quot;</highlight><highlight class="normal">s]<sp/>==<sp/>exp2,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specific<sp/>testing<sp/>scenario<sp/>(packing<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Bool&gt;(<sp/></highlight><highlight class="stringliteral">&quot;normalMapEnabled&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Bool&gt;(<sp/></highlight><highlight class="stringliteral">&quot;specularMapEnabled&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Bool&gt;(<sp/></highlight><highlight class="stringliteral">&quot;hasGlossMap&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float&gt;(<sp/></highlight><highlight class="stringliteral">&quot;modelSpecularGloss&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float4&gt;(<sp/></highlight><highlight class="stringliteral">&quot;modelSpecularColor&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Float&gt;(<sp/></highlight><highlight class="stringliteral">&quot;specularMapWeight&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref>(<sp/>std::move(<sp/>lay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>cb.getSizeInBytes()<sp/>==<sp/>32u,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specific<sp/>testing<sp/>scenario<sp/>(array<sp/>packing<sp/>issues<sp/>gimme<sp/>a<sp/>tissue)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxRadius<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCoef<sp/>=<sp/>maxRadius<sp/>*<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1RawLayout" kindref="compound">con::RawLayout</ref><sp/>lay;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;con::Integer&gt;(<sp/></highlight><highlight class="stringliteral">&quot;nTaps&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay.<ref refid="classcon_1_1RawLayout_ac4cd4dabf994fd33e4cfb154e0dbe94c_1ac4cd4dabf994fd33e4cfb154e0dbe94c" kindref="member">add</ref>&lt;<ref refid="namespacecon_a715a53e528376e9d85ea035a2db279a5_1a715a53e528376e9d85ea035a2db279a5a70f1151d1a31fb6a465cde6b89721e0d" kindref="member">con::Array</ref>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;coefficients&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lay[</highlight><highlight class="stringliteral">&quot;coefficients&quot;</highlight><highlight class="normal">].set&lt;con::Float&gt;(<sp/>nCoef<sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcon_1_1CBuffer" kindref="compound">con::CBuffer</ref><sp/>cb{std::move(<sp/>lay<sp/>)};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ASSERT<sp/>proper<sp/>amount<sp/>of<sp/>memory<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>cb.getSizeInBytes()<sp/>==<sp/>(<sp/>nCoef<sp/>+<sp/>1<sp/>)<sp/>*<sp/>4<sp/>*<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ASSERT<sp/>array<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*begin<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)&amp;cb[</highlight><highlight class="stringliteral">&quot;nTaps&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>std::all_of(<sp/>begin,<sp/>begin<sp/>+<sp/>cb.getSizeInBytes(),<sp/>[](<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>c<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ASSERT<sp/>sparse<sp/>float<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nCoef;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb[</highlight><highlight class="stringliteral">&quot;coefficients&quot;</highlight><highlight class="normal">][i]<sp/>=<sp/>6.9f;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>begin<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">std::array&lt;float,<sp/>4&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)&amp;cb[</highlight><highlight class="stringliteral">&quot;coefficients&quot;</highlight><highlight class="normal">][0]<sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>begin<sp/>+<sp/>nCoef;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>std::all_of(<sp/>begin,<sp/>end,<sp/>[](<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;arr<sp/>)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arr[0]<sp/>==<sp/>6.9f</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>arr[1]<sp/>==<sp/>0.0f</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>arr[2]<sp/>==<sp/>0.0f</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>arr[3]<sp/>==<sp/>0.0f;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Assertion<sp/>failed!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="testing_8h_a6602bea1ca81d830dfee5423f7f48029_1a6602bea1ca81d830dfee5423f7f48029" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="testing_8cpp_a6602bea1ca81d830dfee5423f7f48029_1a6602bea1ca81d830dfee5423f7f48029" kindref="member">testDynamicVertex</ref>(<sp/><ref refid="classWindow" kindref="compound">Window</ref><sp/>&amp;wnd<sp/>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceDirectX" kindref="compound">dx</ref><sp/>=<sp/><ref refid="namespaceDirectX" kindref="compound">DirectX</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacever" kindref="compound">ver</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>renderWithVS<sp/>=<sp/>[&amp;gfx<sp/>=<sp/>wnd.<ref refid="classWindow_a7bfce0a1441d9a824b5469ae7de8c862_1a7bfce0a1441d9a824b5469ae7de8c862" kindref="member">getGraphics</ref>()](<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;vsName<sp/>)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bitop<sp/>=<sp/><ref refid="classPrimitiveTopology_a1f65640090cc0f20dd4115f25ff24e09_1a1f65640090cc0f20dd4115f25ff24e09" kindref="member">PrimitiveTopology::fetch</ref>(<sp/>gfx,<sp/>D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST<sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(dynamic)<sp/>vertex<sp/>buffer<sp/>bindable<sp/>assembly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layout<sp/>=<sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref>{}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classver_1_1VertexInputLayout_a7adfb63eeb82ed86d1144d70fddc0dee_1a7adfb63eeb82ed86d1144d70fddc0dee" kindref="member">add</ref>(<sp/>VertexInputLayout::Position2D<sp/>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classver_1_1VertexInputLayout_a7adfb63eeb82ed86d1144d70fddc0dee_1a7adfb63eeb82ed86d1144d70fddc0dee" kindref="member">add</ref>(<sp/>VertexInputLayout::Float3Color<sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBuffer" kindref="compound">ver::VBuffer</ref><sp/>vb{layout,<sp/>3};</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vb[0].getElement&lt;VertexInputLayout::Position2D&gt;()<sp/>=<sp/>dx::XMFLOAT2{0.0f,<sp/>0.5f};</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vb[0].getElement&lt;VertexInputLayout::Float3Color&gt;()<sp/>=<sp/>dx::XMFLOAT3{1.0f,<sp/>0.0f,<sp/>0.0f};</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vb[1].getElement&lt;VertexInputLayout::Position2D&gt;()<sp/>=<sp/>dx::XMFLOAT2{0.5f,<sp/>-0.5f};</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vb[1].getElement&lt;VertexInputLayout::Float3Color&gt;()<sp/>=<sp/>dx::XMFLOAT3{0.0f,<sp/>1.0f,<sp/>0.0f};</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vb[2].getElement&lt;VertexInputLayout::Position2D&gt;()<sp/>=<sp/>dx::XMFLOAT2{-0.5f,<sp/>-0.5f};</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vb[2].getElement&lt;VertexInputLayout::Float3Color&gt;()<sp/>=<sp/>dx::XMFLOAT3{0.0f,<sp/>0.0f,<sp/>1.0f};</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bivb<sp/>=<sp/><ref refid="classVertexBuffer_a2d44b7aade969e7f5f748eb2cbb5bd30_1a2d44b7aade969e7f5f748eb2cbb5bd30" kindref="member">VertexBuffer::fetch</ref>(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;##?&quot;</highlight><highlight class="normal">,<sp/>vb<sp/>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>bindables..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned&gt;<sp/>idx<sp/>=<sp/>{0,<sp/>1,<sp/>2};</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>biidx<sp/>=<sp/><ref refid="classIndexBuffer_abcbdeb2e6ecd7a5dd93c4c397e8ae368_1abcbdeb2e6ecd7a5dd93c4c397e8ae368" kindref="member">IndexBuffer::fetch</ref>(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;##?&quot;</highlight><highlight class="normal">,<sp/>idx<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bips<sp/>=<sp/><ref refid="classPixelShader_a308b5792652bde2a8fe1df25b297c381_1a308b5792652bde2a8fe1df25b297c381" kindref="member">PixelShader::fetch</ref>(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;cube_ps.cso&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bivs<sp/>=<sp/><ref refid="classVertexShader_ad90bf6654d053a4fe7a3c699acf6f4ff_1ad90bf6654d053a4fe7a3c699acf6f4ff" kindref="member">VertexShader::fetch</ref>(<sp/>gfx,<sp/>vsName<sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bilay<sp/>=<sp/><ref refid="classInputLayout_a28404524310f3bdf8ba2537206e1e109_1a28404524310f3bdf8ba2537206e1e109" kindref="member">InputLayout::fetch</ref>(<sp/>gfx,<sp/>layout,<sp/>*bivs<sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>gfx.getClientWidth();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>gfx.getClientHeight();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rt<sp/>=<sp/><ref refid="classRenderTargetShaderInput" kindref="compound">RenderTargetShaderInput</ref>{gfx,<sp/>width,<sp/>height,<sp/>0};</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>biidx-&gt;<ref refid="classRenderTargetShaderInput_a14b6d1f595c10bb27325f061953250c7_1a14b6d1f595c10bb27325f061953250c7" kindref="member">bind</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bivb-&gt;bind(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitop-&gt;bind(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bips-&gt;bind(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bivs-&gt;bind(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bilay-&gt;bind(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt.clear(<sp/>gfx,<sp/>{0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f}<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt.bindRenderSurface(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfx.drawIndexed(<sp/>biidx-&gt;getIndexCount()<sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfx.getRenderTargetFromBackBuffer()-&gt;bindRenderSurface(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt.convertToBitmap(<sp/>gfx,<sp/>width,<sp/>height<sp/>).save(<sp/>vsName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>renderWithVS(<sp/></highlight><highlight class="stringliteral">&quot;cube_vs.cso&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="testing_8h_a6b44f338fef29603e9cf1a6a676d2599_1a6b44f338fef29603e9cf1a6a676d2599" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="testing_8cpp_a6b44f338fef29603e9cf1a6a676d2599_1a6b44f338fef29603e9cf1a6a676d2599" kindref="member">testBmpLoading</ref>()</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBmpLoader" kindref="compound">BmpLoader</ref><sp/>bmp{</highlight><highlight class="stringliteral">&quot;assets/textures/grey_image.bmp&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>bmp.<ref refid="classBmpLoader_a6fdcb726696c80848ef8e69219e8dd16_1a6fdcb726696c80848ef8e69219e8dd16" kindref="member">applyPerlinNoise</ref>(<sp/></highlight><highlight class="stringliteral">&quot;assets/textures/grey_image_out.bmp&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>?<sp/>EXIT_SUCCESS<sp/>:<sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>ret,<sp/></highlight><highlight class="stringliteral">&quot;perlin<sp/>noise<sp/>not<sp/>applied<sp/>properly!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="testing_8h_a90951fbdfdc4dc81d9dd7a95ee39feb5_1a90951fbdfdc4dc81d9dd7a95ee39feb5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="testing_8cpp_a90951fbdfdc4dc81d9dd7a95ee39feb5_1a90951fbdfdc4dc81d9dd7a95ee39feb5" kindref="member">testLuaScripting</ref>()</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_State<sp/>*luaVm<sp/>=<sp/>luaL_newstate();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>luaL_openlibs(luaVm);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>num_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>=<sp/>2<sp/>+<sp/>3<sp/>+<sp/>math.sin(3.14<sp/>/<sp/>2)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="key__lua_8h_a2168990b58602bd64dc1ea30895b2f67_1a2168990b58602bd64dc1ea30895b2f67" kindref="member">executeLuaGetNumber</ref>(<sp/>luaVm,<sp/>num_str<sp/>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>num_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;a<sp/>=<sp/>a<sp/>+<sp/>100&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="key__lua_8h_a2168990b58602bd64dc1ea30895b2f67_1a2168990b58602bd64dc1ea30895b2f67" kindref="member">executeLuaGetNumber</ref>(<sp/>luaVm,<sp/>num_str<sp/>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PlayerName<sp/>=<sp/>\&quot;Ciaran\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="key__lua_8h_a6b8c25239871bd970d2e9e32c41d38f0_1a6b8c25239871bd970d2e9e32c41d38f0" kindref="member">executeLuaGetString</ref>(<sp/>luaVm,<sp/>str_str<sp/>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="key__lua_8h_ab8b6c22163bde5d322ccaf0eb5e0dbef_1ab8b6c22163bde5d322ccaf0eb5e0dbef" kindref="member">executeLuaFileGetNumber</ref>(<sp/>luaVm,<sp/></highlight><highlight class="stringliteral">&quot;scripts/scripting.lua&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="key__lua_8h_a01e737dd70f18856bd8f5b529dbbdcbc_1a01e737dd70f18856bd8f5b529dbbdcbc" kindref="member">executeLuaFileGetTable</ref>(<sp/>luaVm,<sp/></highlight><highlight class="stringliteral">&quot;scripts/scripting.lua&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;player&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="key__lua_8h_a4585437b5d2a3962599b401c11ac49eb_1a4585437b5d2a3962599b401c11ac49eb" kindref="member">executeLuaFunctionFromFile</ref>(<sp/>luaVm,<sp/></highlight><highlight class="stringliteral">&quot;scripts/scripting.lua&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;getSum&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="key__lua_8h_ae70e285207ed78c0103f9f9994f89bd1_1ae70e285207ed78c0103f9f9994f89bd1" kindref="member">executeLuaCFunctionFromFile</ref>(<sp/>luaVm,<sp/></highlight><highlight class="stringliteral">&quot;scripts/scripting.lua&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;callCFunction&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;callableFromLua_mySum&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="key__lua_8h_a94bac6ec9430904b22c125178cbe4b9b_1a94bac6ec9430904b22c125178cbe4b9b" kindref="member">callableFromLua_mySum</ref><sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alternatively<sp/>you<sp/>can<sp/>use<sp/>the<sp/>sol<sp/>library:<sp/>https://github.com/ThePhD/sol2,<sp/>tutorial:<sp/>https://www.youtube.com/watch?v=ONywOoJC4TQ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>!getchar()<sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>__debugbreak();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_close(luaVm);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/testing.cpp"/>
  </compounddef>
</doxygen>
