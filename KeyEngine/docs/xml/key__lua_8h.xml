<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="key__lua_8h" kind="file" language="C++">
    <compoundname>key_lua.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes refid="assertions__console_8h" local="no">assertions_console.h</includes>
    <includes local="yes">lua/lua.h</includes>
    <includes local="yes">lua/lauxlib.h</includes>
    <includes local="yes">lua/lualib.h</includes>
    <includedby refid="key__lua_8cpp" local="yes">src/key_lua.cpp</includedby>
    <includedby refid="testing_8cpp" local="yes">src/testing.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>inc/key_lua.h</label>
        <link refid="key__lua_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>lua/lauxlib.h</label>
      </node>
      <node id="5">
        <label>lua/lua.h</label>
      </node>
      <node id="7">
        <label>lua/lualib.h</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>inc/key_lua.h</label>
        <link refid="key__lua_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/key_lua.cpp</label>
        <link refid="key__lua_8cpp"/>
      </node>
      <node id="3">
        <label>src/testing.cpp</label>
        <link refid="testing_8cpp"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="key__lua_8h_a169ba3c8f52adabd940ce47e0ee586f7_1a169ba3c8f52adabd940ce47e0ee586f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool luaCheck</definition>
        <argsstring>(lua_State *luaVm, const int ret)</argsstring>
        <name>luaCheck</name>
        <param>
          <type>lua_State *</type>
          <declname>luaVm</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_lua.h" line="18" column="6" bodyfile="src/key_lua.cpp" bodystart="4" bodyend="14" declfile="inc/key_lua.h" declline="18" declcolumn="6"/>
        <referencedby refid="key__lua_8h_ae70e285207ed78c0103f9f9994f89bd1_1ae70e285207ed78c0103f9f9994f89bd1" compoundref="key__lua_8h" startline="26" endline="53">executeLuaCFunctionFromFile</referencedby>
        <referencedby refid="key__lua_8h_ab8b6c22163bde5d322ccaf0eb5e0dbef_1ab8b6c22163bde5d322ccaf0eb5e0dbef" compoundref="key__lua_8cpp" startline="49" endline="62">executeLuaFileGetNumber</referencedby>
        <referencedby refid="key__lua_8h_a01e737dd70f18856bd8f5b529dbbdcbc_1a01e737dd70f18856bd8f5b529dbbdcbc" compoundref="key__lua_8cpp" startline="64" endline="107">executeLuaFileGetTable</referencedby>
        <referencedby refid="key__lua_8h_a4585437b5d2a3962599b401c11ac49eb_1a4585437b5d2a3962599b401c11ac49eb" compoundref="key__lua_8cpp" startline="109" endline="137">executeLuaFunctionFromFile</referencedby>
        <referencedby refid="key__lua_8h_a2168990b58602bd64dc1ea30895b2f67_1a2168990b58602bd64dc1ea30895b2f67" compoundref="key__lua_8cpp" startline="16" endline="32">executeLuaGetNumber</referencedby>
        <referencedby refid="key__lua_8h_a6b8c25239871bd970d2e9e32c41d38f0_1a6b8c25239871bd970d2e9e32c41d38f0" compoundref="key__lua_8cpp" startline="34" endline="47">executeLuaGetString</referencedby>
      </memberdef>
      <memberdef kind="function" id="key__lua_8h_a2168990b58602bd64dc1ea30895b2f67_1a2168990b58602bd64dc1ea30895b2f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void executeLuaGetNumber</definition>
        <argsstring>(lua_State *luaVm, const std::string &amp;strVar)</argsstring>
        <name>executeLuaGetNumber</name>
        <param>
          <type>lua_State *</type>
          <declname>luaVm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>strVar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_lua.h" line="19" column="6" bodyfile="src/key_lua.cpp" bodystart="16" bodyend="32" declfile="inc/key_lua.h" declline="19" declcolumn="6"/>
        <referencedby refid="testing_8h_a90951fbdfdc4dc81d9dd7a95ee39feb5_1a90951fbdfdc4dc81d9dd7a95ee39feb5" compoundref="testing_8cpp" startline="407" endline="439">testLuaScripting</referencedby>
      </memberdef>
      <memberdef kind="function" id="key__lua_8h_a6b8c25239871bd970d2e9e32c41d38f0_1a6b8c25239871bd970d2e9e32c41d38f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void executeLuaGetString</definition>
        <argsstring>(lua_State *luaVm, const std::string &amp;strVar)</argsstring>
        <name>executeLuaGetString</name>
        <param>
          <type>lua_State *</type>
          <declname>luaVm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>strVar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_lua.h" line="20" column="6" bodyfile="src/key_lua.cpp" bodystart="34" bodyend="47" declfile="inc/key_lua.h" declline="20" declcolumn="6"/>
        <referencedby refid="testing_8h_a90951fbdfdc4dc81d9dd7a95ee39feb5_1a90951fbdfdc4dc81d9dd7a95ee39feb5" compoundref="testing_8cpp" startline="407" endline="439">testLuaScripting</referencedby>
      </memberdef>
      <memberdef kind="function" id="key__lua_8h_ab8b6c22163bde5d322ccaf0eb5e0dbef_1ab8b6c22163bde5d322ccaf0eb5e0dbef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void executeLuaFileGetNumber</definition>
        <argsstring>(lua_State *luaVm, const std::string &amp;filename)</argsstring>
        <name>executeLuaFileGetNumber</name>
        <param>
          <type>lua_State *</type>
          <declname>luaVm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_lua.h" line="21" column="6" bodyfile="src/key_lua.cpp" bodystart="49" bodyend="62" declfile="inc/key_lua.h" declline="21" declcolumn="6"/>
        <referencedby refid="testing_8h_a90951fbdfdc4dc81d9dd7a95ee39feb5_1a90951fbdfdc4dc81d9dd7a95ee39feb5" compoundref="testing_8cpp" startline="407" endline="439">testLuaScripting</referencedby>
      </memberdef>
      <memberdef kind="function" id="key__lua_8h_a01e737dd70f18856bd8f5b529dbbdcbc_1a01e737dd70f18856bd8f5b529dbbdcbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void executeLuaFileGetTable</definition>
        <argsstring>(lua_State *luaVm, const std::string &amp;filename, const std::string &amp;tableName)</argsstring>
        <name>executeLuaFileGetTable</name>
        <param>
          <type>lua_State *</type>
          <declname>luaVm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>tableName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_lua.h" line="22" column="6" bodyfile="src/key_lua.cpp" bodystart="64" bodyend="107" declfile="inc/key_lua.h" declline="22" declcolumn="6"/>
        <referencedby refid="testing_8h_a90951fbdfdc4dc81d9dd7a95ee39feb5_1a90951fbdfdc4dc81d9dd7a95ee39feb5" compoundref="testing_8cpp" startline="407" endline="439">testLuaScripting</referencedby>
      </memberdef>
      <memberdef kind="function" id="key__lua_8h_a4585437b5d2a3962599b401c11ac49eb_1a4585437b5d2a3962599b401c11ac49eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void executeLuaFunctionFromFile</definition>
        <argsstring>(lua_State *luaVm, const std::string &amp;filename, const std::string &amp;functionName)</argsstring>
        <name>executeLuaFunctionFromFile</name>
        <param>
          <type>lua_State *</type>
          <declname>luaVm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>functionName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_lua.h" line="23" column="6" bodyfile="src/key_lua.cpp" bodystart="109" bodyend="137" declfile="inc/key_lua.h" declline="23" declcolumn="6"/>
        <referencedby refid="testing_8h_a90951fbdfdc4dc81d9dd7a95ee39feb5_1a90951fbdfdc4dc81d9dd7a95ee39feb5" compoundref="testing_8cpp" startline="407" endline="439">testLuaScripting</referencedby>
      </memberdef>
      <memberdef kind="function" id="key__lua_8h_ae70e285207ed78c0103f9f9994f89bd1_1ae70e285207ed78c0103f9f9994f89bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TCallable</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void executeLuaCFunctionFromFile</definition>
        <argsstring>(lua_State *luaVm, const std::string &amp;filename, const std::string &amp;luaFunctionName, const std::string &amp;cFunctionName, TCallable f)</argsstring>
        <name>executeLuaCFunctionFromFile</name>
        <param>
          <type>lua_State *</type>
          <declname>luaVm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>luaFunctionName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>cFunctionName</declname>
        </param>
        <param>
          <type>TCallable</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_lua.h" line="26" column="6" bodyfile="inc/key_lua.h" bodystart="26" bodyend="53"/>
        <referencedby refid="testing_8h_a90951fbdfdc4dc81d9dd7a95ee39feb5_1a90951fbdfdc4dc81d9dd7a95ee39feb5" compoundref="testing_8cpp" startline="407" endline="439">testLuaScripting</referencedby>
      </memberdef>
      <memberdef kind="function" id="key__lua_8h_a94bac6ec9430904b22c125178cbe4b9b_1a94bac6ec9430904b22c125178cbe4b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int callableFromLua_mySum</definition>
        <argsstring>(lua_State *luaVm)</argsstring>
        <name>callableFromLua_mySum</name>
        <param>
          <type>lua_State *</type>
          <declname>luaVm</declname>
        </param>
        <briefdescription>
<para>C++ functions callable from Lua: </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/key_lua.h" line="56" column="16" bodyfile="src/key_lua.cpp" bodystart="139" bodyend="149" declfile="inc/key_lua.h" declline="56" declcolumn="16"/>
        <referencedby refid="testing_8h_a90951fbdfdc4dc81d9dd7a95ee39feb5_1a90951fbdfdc4dc81d9dd7a95ee39feb5" compoundref="testing_8cpp" startline="407" endline="439">testLuaScripting</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assertions__console_8h" kindref="compound">assertions_console.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lua<sp/>is<sp/>a<sp/>C<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lua/lua.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lua/lauxlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lua/lualib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>comment(<sp/>lib,<sp/>&quot;lua53.lib&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="key__lua_8h_a169ba3c8f52adabd940ce47e0ee586f7_1a169ba3c8f52adabd940ce47e0ee586f7" kindref="member">luaCheck</ref>(<sp/>lua_State<sp/>*luaVm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="key__lua_8h_a2168990b58602bd64dc1ea30895b2f67_1a2168990b58602bd64dc1ea30895b2f67" kindref="member">executeLuaGetNumber</ref>(<sp/>lua_State<sp/>*luaVm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;strVar<sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="key__lua_8h_a6b8c25239871bd970d2e9e32c41d38f0_1a6b8c25239871bd970d2e9e32c41d38f0" kindref="member">executeLuaGetString</ref>(<sp/>lua_State<sp/>*luaVm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;strVar<sp/>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="key__lua_8h_ab8b6c22163bde5d322ccaf0eb5e0dbef_1ab8b6c22163bde5d322ccaf0eb5e0dbef" kindref="member">executeLuaFileGetNumber</ref>(<sp/>lua_State<sp/>*luaVm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename<sp/>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="key__lua_8h_a01e737dd70f18856bd8f5b529dbbdcbc_1a01e737dd70f18856bd8f5b529dbbdcbc" kindref="member">executeLuaFileGetTable</ref>(<sp/>lua_State<sp/>*luaVm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;tableName<sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="key__lua_8h_a4585437b5d2a3962599b401c11ac49eb_1a4585437b5d2a3962599b401c11ac49eb" kindref="member">executeLuaFunctionFromFile</ref>(<sp/>lua_State<sp/>*luaVm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;functionName<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TCallable&gt;</highlight></codeline>
<codeline lineno="26" refid="key__lua_8h_ae70e285207ed78c0103f9f9994f89bd1_1ae70e285207ed78c0103f9f9994f89bd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="key__lua_8h_ae70e285207ed78c0103f9f9994f89bd1_1ae70e285207ed78c0103f9f9994f89bd1" kindref="member">executeLuaCFunctionFromFile</ref>(<sp/>lua_State<sp/>*luaVm,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;luaFunctionName,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;cFunctionName,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>TCallable<sp/>f<sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_register(luaVm,<sp/>cFunctionName.c_str(),<sp/>f);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>luaL_dofile(luaVm,<sp/>filename.c_str());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/><ref refid="key__lua_8h_a169ba3c8f52adabd940ce47e0ee586f7_1a169ba3c8f52adabd940ce47e0ee586f7" kindref="member">luaCheck</ref>(<sp/>luaVm,<sp/>ret),<sp/></highlight><highlight class="stringliteral">&quot;Lua<sp/>error!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_getglobal(<sp/>luaVm,<sp/>luaFunctionName.c_str()<sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gets<sp/>the<sp/>global<sp/>lua<sp/>object<sp/>and<sp/>puts<sp/>it<sp/>in<sp/>the<sp/>lua<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lua_isfunction(luaVm,<sp/>-1)<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnumber(<sp/>luaVm,<sp/>1.0f<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnumber(<sp/>luaVm,<sp/>2.0f<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>lua_pcall(luaVm,<sp/>2,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/><ref refid="key__lua_8h_a169ba3c8f52adabd940ce47e0ee586f7_1a169ba3c8f52adabd940ce47e0ee586f7" kindref="member">luaCheck</ref>(<sp/>luaVm,<sp/>ret<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Lua<sp/>function<sp/>error!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>return<sp/>value<sp/>of<sp/>the<sp/>function<sp/>is,<sp/>as<sp/>usual,<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>function_result_c<sp/>=<sp/>(float)lua_tonumber(luaVm,<sp/>-1);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[C++:]<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>luaFunctionName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(a,<sp/>b)<sp/>returned<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>function_result_c<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="key__lua_8h_a94bac6ec9430904b22c125178cbe4b9b_1a94bac6ec9430904b22c125178cbe4b9b" kindref="member">callableFromLua_mySum</ref>(<sp/>lua_State<sp/>*luaVm<sp/>);</highlight></codeline>
    </programlisting>
    <location file="inc/key_lua.h"/>
  </compounddef>
</doxygen>
