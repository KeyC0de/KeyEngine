<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structgui_1_1Component_1_1Component__State" kind="struct" language="C++" prot="private">
    <compoundname>gui::Component::Component_State</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_a23be839219b5af58237859ce08417384_1a23be839219b5af58237859ce08417384" prot="public" static="no" mutable="no">
        <type><ref refid="classRectangleI" kindref="compound">RectangleI</ref></type>
        <definition>RectangleI gui::Component::Component_State::m_collision_shape</definition>
        <argsstring></argsstring>
        <name>m_collision_shape</name>
        <qualifiedname>gui::Component::Component_State::m_collision_shape</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="157" column="12" bodyfile="inc/ui_component.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_ad0dfe2ec968def57c110304171f41fee_1ad0dfe2ec968def57c110304171f41fee" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string gui::Component::Component_State::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <qualifiedname>gui::Component::Component_State::m_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="158" column="13" bodyfile="inc/ui_component.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_a6e78e78153f597bacb3a45164cc93bc2_1a6e78e78153f597bacb3a45164cc93bc2" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string gui::Component::Component_State::m_text</definition>
        <argsstring></argsstring>
        <name>m_text</name>
        <qualifiedname>gui::Component::Component_State::m_text</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="159" column="13" bodyfile="inc/ui_component.h" bodystart="159" bodyend="-1"/>
        <referencedby refid="structgui_1_1Component_1_1Component__State_a5093045ce8afda0f6b42a7ed54c33bdf_1a5093045ce8afda0f6b42a7ed54c33bdf" compoundref="ui__component_8cpp" startline="23" endline="87">Component_State</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_a8df18e0b72dee508703bf8843b4fbec9_1a8df18e0b72dee508703bf8843b4fbec9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gui::Component::Component_State::m_is_interactive</definition>
        <argsstring></argsstring>
        <name>m_is_interactive</name>
        <qualifiedname>gui::Component::Component_State::m_is_interactive</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>Interactive vs Enabled component: </para>
        </briefdescription>
        <detaileddescription>
<para>disabled means you can&apos;t interact with the component at all, no tooltips and no mouse interactions (for example just text or image display)</para>
<para>interactive and disabled is to be able to show only tooltips but no clicks (so for example an material with tooltip but that you can&apos;t c lick)</para>
<para>interactive and enabled is both tooltips and clicks (so like a button) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="164" column="6" bodyfile="inc/ui_component.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_afcbd70793a6075b06ea80c70799c923f_1afcbd70793a6075b06ea80c70799c923f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gui::Component::Component_State::m_is_enabled</definition>
        <argsstring></argsstring>
        <name>m_is_enabled</name>
        <qualifiedname>gui::Component::Component_State::m_is_enabled</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="165" column="6" bodyfile="inc/ui_component.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_a23536917493ecc1380a19ff29e6c1014_1a23536917493ecc1380a19ff29e6c1014" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gui::Component::Component_State::m_can_resize_width</definition>
        <argsstring></argsstring>
        <name>m_can_resize_width</name>
        <qualifiedname>gui::Component::Component_State::m_can_resize_width</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="166" column="6" bodyfile="inc/ui_component.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_a56e0a300eb693d5021f9771481281b77_1a56e0a300eb693d5021f9771481281b77" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gui::Component::Component_State::m_can_resize_height</definition>
        <argsstring></argsstring>
        <name>m_can_resize_height</name>
        <qualifiedname>gui::Component::Component_State::m_can_resize_height</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="167" column="6" bodyfile="inc/ui_component.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_aab03ff248c9867c8f698aa22f369bc52_1aab03ff248c9867c8f698aa22f369bc52" prot="public" static="no" mutable="no">
        <type><ref refid="classgui_1_1Component_a1feddee03237aeac601c1a9409ddb2f1_1a1feddee03237aeac601c1a9409ddb2f1" kindref="member">Dock_Point</ref></type>
        <definition>Dock_Point gui::Component::Component_State::m_docking</definition>
        <argsstring></argsstring>
        <name>m_docking</name>
        <qualifiedname>gui::Component::Component_State::m_docking</qualifiedname>
        <initializer>= <ref refid="classgui_1_1Component_a1feddee03237aeac601c1a9409ddb2f1_1a1feddee03237aeac601c1a9409ddb2f1a00b96ee372e13ded64b9edc4796941ee" kindref="member">Dock_Point::Dock_Point_None</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="168" column="12" bodyfile="inc/ui_component.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_a7115228d7daf242997f9ca447234df0e_1a7115228d7daf242997f9ca447234df0e" prot="public" static="no" mutable="no">
        <type><ref refid="classgui_1_1Component_aca93d509caa8785da6d3b06837c15e7e_1aca93d509caa8785da6d3b06837c15e7e" kindref="member">Text_Justification</ref></type>
        <definition>Text_Justification gui::Component::Component_State::m_text_justification</definition>
        <argsstring></argsstring>
        <name>m_text_justification</name>
        <qualifiedname>gui::Component::Component_State::m_text_justification</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="169" column="20" bodyfile="inc/ui_component.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_ad837cbdbf9577bbba920998852417477_1ad837cbdbf9577bbba920998852417477" prot="public" static="no" mutable="no">
        <type>DirectX::XMVECTORF32</type>
        <definition>DirectX::XMVECTORF32 gui::Component::Component_State::m_color</definition>
        <argsstring></argsstring>
        <name>m_color</name>
        <qualifiedname>gui::Component::Component_State::m_color</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="170" column="22" bodyfile="inc/ui_component.h" bodystart="170" bodyend="-1"/>
        <referencedby refid="structgui_1_1Component_1_1Component__State_a5093045ce8afda0f6b42a7ed54c33bdf_1a5093045ce8afda0f6b42a7ed54c33bdf" compoundref="ui__component_8cpp" startline="23" endline="87">Component_State</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_a86b883f1ad38b2cb6c208ae24b119f01_1a86b883f1ad38b2cb6c208ae24b119f01" prot="public" static="no" mutable="no">
        <type>const DirectX::XMFLOAT2</type>
        <definition>const DirectX::XMFLOAT2 gui::Component::Component_State::m_text_scale</definition>
        <argsstring></argsstring>
        <name>m_text_scale</name>
        <qualifiedname>gui::Component::Component_State::m_text_scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="171" column="25" bodyfile="inc/ui_component.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_a5b13bd4406202996e7e7aebeee2a2324_1a5b13bd4406202996e7e7aebeee2a2324" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classTexture" kindref="compound">Texture</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Texture&gt; gui::Component::Component_State::m_texture</definition>
        <argsstring></argsstring>
        <name>m_texture</name>
        <qualifiedname>gui::Component::Component_State::m_texture</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="172" column="17" bodyfile="inc/ui_component.h" bodystart="172" bodyend="-1"/>
        <referencedby refid="structgui_1_1Component_1_1Component__State_a5093045ce8afda0f6b42a7ed54c33bdf_1a5093045ce8afda0f6b42a7ed54c33bdf" compoundref="ui__component_8cpp" startline="23" endline="87">Component_State</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Component_1_1Component__State_a6dd1a62a683188047ff12cbb9b8b110b_1a6dd1a62a683188047ff12cbb9b8b110b" prot="public" static="no" mutable="no">
        <type>std::function&lt; void(<ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;)&gt;</type>
        <definition>std::function&lt;void(Graphics&amp;)&gt; gui::Component::Component_State::m_custom_render_func</definition>
        <argsstring></argsstring>
        <name>m_custom_render_func</name>
        <qualifiedname>gui::Component::Component_State::m_custom_render_func</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="173" column="15" bodyfile="inc/ui_component.h" bodystart="173" bodyend="-1"/>
        <referencedby refid="structgui_1_1Component_1_1Component__State_a5093045ce8afda0f6b42a7ed54c33bdf_1a5093045ce8afda0f6b42a7ed54c33bdf" compoundref="ui__component_8cpp" startline="23" endline="87">Component_State</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structgui_1_1Component_1_1Component__State_a5093045ce8afda0f6b42a7ed54c33bdf_1a5093045ce8afda0f6b42a7ed54c33bdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gui::Component::Component_State::Component_State</definition>
        <argsstring>(Graphics &amp;gfx, const RectangleI &amp;collision_shape, const std::string &amp;name=&quot;default&quot;, const std::string &amp;text=&quot;&quot;, const std::string image_path=&quot;&quot;, const DirectX::XMVECTORF32 &amp;text_color=DirectX::Colors::White, const DirectX::XMFLOAT2 &amp;text_scale=DirectX::XMFLOAT2{1.0f, 1.0f}, const bool is_interactive=true, const bool is_enabled=false, const bool can_resize_width=true, const bool can_resize_height=true, const Dock_Point docking=Dock_Point::Dock_Point_None, const Text_Justification text_justification=Text_Justification::Text_Justification_Left)</argsstring>
        <name>Component_State</name>
        <qualifiedname>gui::Component::Component_State::Component_State</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>const <ref refid="classRectangleI" kindref="compound">RectangleI</ref> &amp;</type>
          <declname>collision_shape</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <defval>&quot;default&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string</type>
          <declname>image_path</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const DirectX::XMVECTORF32 &amp;</type>
          <declname>text_color</declname>
          <defval><ref refid="namespaceDirectX_1_1Colors_a224e19ac54fcc026b183a5c9340a047b_1a224e19ac54fcc026b183a5c9340a047b" kindref="member">DirectX::Colors::White</ref></defval>
        </param>
        <param>
          <type>const DirectX::XMFLOAT2 &amp;</type>
          <declname>text_scale</declname>
          <defval>DirectX::XMFLOAT2{1.0f, 1.0f}</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>is_interactive</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>is_enabled</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>can_resize_width</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>can_resize_height</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const <ref refid="classgui_1_1Component_a1feddee03237aeac601c1a9409ddb2f1_1a1feddee03237aeac601c1a9409ddb2f1" kindref="member">Dock_Point</ref></type>
          <declname>docking</declname>
          <defval><ref refid="classgui_1_1Component_a1feddee03237aeac601c1a9409ddb2f1_1a1feddee03237aeac601c1a9409ddb2f1a00b96ee372e13ded64b9edc4796941ee" kindref="member">Dock_Point::Dock_Point_None</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classgui_1_1Component_aca93d509caa8785da6d3b06837c15e7e_1aca93d509caa8785da6d3b06837c15e7e" kindref="member">Text_Justification</ref></type>
          <declname>text_justification</declname>
          <defval><ref refid="classgui_1_1Component_aca93d509caa8785da6d3b06837c15e7e_1aca93d509caa8785da6d3b06837c15e7ea6c2f39387e46d76b15adb70e6b8a4525" kindref="member">Text_Justification::Text_Justification_Left</ref></defval>
        </param>
        <briefdescription>
<para>image_path will either contain the path to the texture file or the flat color of the texture </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="176" column="1" bodyfile="src/ui_component.cpp" bodystart="23" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structgui_1_1Component_1_1Component__State_aa6a82b6aff031ec15cd74085f0f337b1_1aa6a82b6aff031ec15cd74085f0f337b1" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>gui::Component::Component_State::~Component_State</definition>
        <argsstring>() noexcept</argsstring>
        <name>~Component_State</name>
        <qualifiedname>gui::Component::Component_State::~Component_State</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="178" column="1" bodyfile="src/ui_component.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structgui_1_1Component_1_1Component__State_a208e9add85360cdc4a8fc18560939bbb_1a208e9add85360cdc4a8fc18560939bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gui::Component::Component_State::update</definition>
        <argsstring>(const float dt, const Point &amp;input_pos)</argsstring>
        <name>update</name>
        <qualifiedname>gui::Component::Component_State::update</qualifiedname>
        <param>
          <type>const float</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const <ref refid="structgui_1_1Point" kindref="compound">Point</ref> &amp;</type>
          <declname>input_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="180" column="6" bodyfile="src/ui_component.cpp" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structgui_1_1Component_1_1Component__State_aed03c278a5c3ffd92039451ed150d730_1aed03c278a5c3ffd92039451ed150d730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gui::Component::Component_State::render</definition>
        <argsstring>(Graphics &amp;gfx, DirectX::SpriteBatch *pSpriteBatch, DirectX::SpriteFont *pSpriteFont, RasterizerState *pRasterizerState)</argsstring>
        <name>render</name>
        <qualifiedname>gui::Component::Component_State::render</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>DirectX::SpriteBatch *</type>
          <declname>pSpriteBatch</declname>
        </param>
        <param>
          <type>DirectX::SpriteFont *</type>
          <declname>pSpriteFont</declname>
        </param>
        <param>
          <type><ref refid="classRasterizerState" kindref="compound">RasterizerState</ref> *</type>
          <declname>pRasterizerState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="181" column="6" bodyfile="src/ui_component.cpp" bodystart="100" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structgui_1_1Component_1_1Component__State_af81c5a45f20c09e2a00130f4fb917bcb_1af81c5a45f20c09e2a00130f4fb917bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gui::Component::Component_State::resize</definition>
        <argsstring>(const int new_width, const int new_height)</argsstring>
        <name>resize</name>
        <qualifiedname>gui::Component::Component_State::resize</qualifiedname>
        <param>
          <type>const int</type>
          <declname>new_width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>new_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="182" column="6" bodyfile="src/ui_component.cpp" bodystart="115" bodyend="119"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="structgui_1_1Component_1_1Component__State_a514e073122e6bb710cdd5fbc39a48339_1a514e073122e6bb710cdd5fbc39a48339" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gui::Component::Component_State::draw_text</definition>
        <argsstring>(Graphics &amp;gfx, DirectX::SpriteBatch *pSpriteBatch, DirectX::SpriteFont *pSpriteFont)</argsstring>
        <name>draw_text</name>
        <qualifiedname>gui::Component::Component_State::draw_text</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>DirectX::SpriteBatch *</type>
          <declname>pSpriteBatch</declname>
        </param>
        <param>
          <type>DirectX::SpriteFont *</type>
          <declname>pSpriteFont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="184" column="6" bodyfile="src/ui_component.cpp" bodystart="121" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structgui_1_1Component_1_1Component__State_a1bdfa1560d65da7dee6deef3a91067a9_1a1bdfa1560d65da7dee6deef3a91067a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gui::Component::Component_State::draw_texture</definition>
        <argsstring>(Graphics &amp;gfx, DirectX::SpriteBatch *pSpriteBatch, RasterizerState *pRasterizerState)</argsstring>
        <name>draw_texture</name>
        <qualifiedname>gui::Component::Component_State::draw_texture</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>DirectX::SpriteBatch *</type>
          <declname>pSpriteBatch</declname>
        </param>
        <param>
          <type><ref refid="classRasterizerState" kindref="compound">RasterizerState</ref> *</type>
          <declname>pRasterizerState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="185" column="6" bodyfile="src/ui_component.cpp" bodystart="130" bodyend="139"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>RectangleI</label>
        <link refid="classRectangleI"/>
      </node>
      <node id="1">
        <label>gui::Component::Component_State</label>
        <link refid="structgui_1_1Component_1_1Component__State"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_collision_shape</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/ui_component.h" line="155" column="1" bodyfile="inc/ui_component.h" bodystart="156" bodyend="186"/>
    <listofallmembers>
      <member refid="structgui_1_1Component_1_1Component__State_a5093045ce8afda0f6b42a7ed54c33bdf_1a5093045ce8afda0f6b42a7ed54c33bdf" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>Component_State</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a514e073122e6bb710cdd5fbc39a48339_1a514e073122e6bb710cdd5fbc39a48339" prot="private" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>draw_text</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a1bdfa1560d65da7dee6deef3a91067a9_1a1bdfa1560d65da7dee6deef3a91067a9" prot="private" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>draw_texture</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a56e0a300eb693d5021f9771481281b77_1a56e0a300eb693d5021f9771481281b77" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_can_resize_height</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a23536917493ecc1380a19ff29e6c1014_1a23536917493ecc1380a19ff29e6c1014" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_can_resize_width</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a23be839219b5af58237859ce08417384_1a23be839219b5af58237859ce08417384" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_collision_shape</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_ad837cbdbf9577bbba920998852417477_1ad837cbdbf9577bbba920998852417477" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_color</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a6dd1a62a683188047ff12cbb9b8b110b_1a6dd1a62a683188047ff12cbb9b8b110b" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_custom_render_func</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_aab03ff248c9867c8f698aa22f369bc52_1aab03ff248c9867c8f698aa22f369bc52" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_docking</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_afcbd70793a6075b06ea80c70799c923f_1afcbd70793a6075b06ea80c70799c923f" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_is_enabled</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a8df18e0b72dee508703bf8843b4fbec9_1a8df18e0b72dee508703bf8843b4fbec9" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_is_interactive</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_ad0dfe2ec968def57c110304171f41fee_1ad0dfe2ec968def57c110304171f41fee" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_name</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a6e78e78153f597bacb3a45164cc93bc2_1a6e78e78153f597bacb3a45164cc93bc2" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_text</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a7115228d7daf242997f9ca447234df0e_1a7115228d7daf242997f9ca447234df0e" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_text_justification</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a86b883f1ad38b2cb6c208ae24b119f01_1a86b883f1ad38b2cb6c208ae24b119f01" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_text_scale</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a5b13bd4406202996e7e7aebeee2a2324_1a5b13bd4406202996e7e7aebeee2a2324" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>m_texture</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_aed03c278a5c3ffd92039451ed150d730_1aed03c278a5c3ffd92039451ed150d730" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>render</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_af81c5a45f20c09e2a00130f4fb917bcb_1af81c5a45f20c09e2a00130f4fb917bcb" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>resize</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_a208e9add85360cdc4a8fc18560939bbb_1a208e9add85360cdc4a8fc18560939bbb" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>update</name></member>
      <member refid="structgui_1_1Component_1_1Component__State_aa6a82b6aff031ec15cd74085f0f337b1_1aa6a82b6aff031ec15cd74085f0f337b1" prot="public" virt="non-virtual"><scope>gui::Component::Component_State</scope><name>~Component_State</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
