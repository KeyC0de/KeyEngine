<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="camera_8cpp" kind="file" language="C++">
    <compoundname>camera.cpp</compoundname>
    <includes refid="camera_8h" local="yes">camera.h</includes>
    <includes refid="graphics_8h" local="yes">graphics.h</includes>
    <includes refid="camera__widget_8h" local="yes">camera_widget.h</includes>
    <includes refid="camera__frustum_8h" local="yes">camera_frustum.h</includes>
    <includes refid="math__utils_8h" local="yes">math_utils.h</includes>
    <includes refid="geometry_8h" local="yes">geometry.h</includes>
    <includes refid="vertex__buffer_8h" local="yes">vertex_buffer.h</includes>
    <includes local="yes">imgui/imgui.h</includes>
    <includes refid="d3d__utils_8h" local="yes">d3d_utils.h</includes>
    <incdepgraph>
      <node id="37">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>bindable.h</label>
        <link refid="bindable_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>camera_frustum.h</label>
        <link refid="camera__frustum_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>camera_widget.h</label>
        <link refid="camera__widget_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="30">
        <label>console.h</label>
        <link refid="console_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>d3d_utils.h</label>
        <link refid="d3d__utils_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>dynamic_constant_buffer.h</label>
        <link refid="dynamic__constant__buffer_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>dynamic_vertex_buffer.h</label>
        <link refid="dynamic__vertex__buffer_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>geometry.h</label>
        <link refid="geometry_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>graphics_friend.h</label>
        <link refid="graphics__friend_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>imgui_visitors.h</label>
        <link refid="imgui__visitors_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>key_exception.h</label>
        <link refid="key__exception_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>key_timer.h</label>
        <link refid="key__timer_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>key_wrl.h</label>
        <link refid="key__wrl_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>material.h</label>
        <link refid="material_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>mesh.h</label>
        <link refid="mesh_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="72">
        <label>os_utils.h</label>
        <link refid="os__utils_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>rendering_channel.h</label>
        <link refid="rendering__channel_8h"/>
      </node>
      <node id="26">
        <label>texture_desc.h</label>
        <link refid="texture__desc_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>transform_vscb.h</label>
        <link refid="transform__vscb_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>triangle_mesh.h</label>
        <link refid="triangle__mesh_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>vertex_buffer.h</label>
        <link refid="vertex__buffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/camera.cpp</label>
        <link refid="camera_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>DirectXMath.h</label>
      </node>
      <node id="77">
        <label>ShlObj.h</label>
      </node>
      <node id="15">
        <label>Windows.h</label>
      </node>
      <node id="45">
        <label>algorithm</label>
      </node>
      <node id="66">
        <label>assimp/scene.h</label>
      </node>
      <node id="41">
        <label>bitset</label>
      </node>
      <node id="60">
        <label>cassert</label>
      </node>
      <node id="29">
        <label>chrono</label>
      </node>
      <node id="43">
        <label>cinttypes</label>
      </node>
      <node id="32">
        <label>cmath</label>
      </node>
      <node id="74">
        <label>comdef.h</label>
      </node>
      <node id="42">
        <label>cstddef</label>
      </node>
      <node id="33">
        <label>cstdint</label>
      </node>
      <node id="19">
        <label>d3d11.h</label>
      </node>
      <node id="20">
        <label>d3dcompiler.h</label>
      </node>
      <node id="18">
        <label>dxgi1_4.h</label>
      </node>
      <node id="49">
        <label>execution</label>
      </node>
      <node id="7">
        <label>filesystem</label>
      </node>
      <node id="76">
        <label>functional</label>
      </node>
      <node id="44">
        <label>future</label>
      </node>
      <node id="69">
        <label>imgui/imgui.h</label>
      </node>
      <node id="36">
        <label>iomanip</label>
      </node>
      <node id="38">
        <label>iostream</label>
      </node>
      <node id="47">
        <label>iterator</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="46">
        <label>numeric</label>
      </node>
      <node id="54">
        <label>optional</label>
      </node>
      <node id="48">
        <label>regex</label>
      </node>
      <node id="14">
        <label>sdkddkver.h</label>
      </node>
      <node id="40">
        <label>set</label>
      </node>
      <node id="35">
        <label>sstream</label>
      </node>
      <node id="24">
        <label>stdexcept</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="28">
        <label>thread</label>
      </node>
      <node id="75">
        <label>tlhelp32.h</label>
      </node>
      <node id="71">
        <label>tuple</label>
      </node>
      <node id="34">
        <label>type_traits</label>
      </node>
      <node id="10">
        <label>unordered_map</label>
      </node>
      <node id="65">
        <label>utility</label>
      </node>
      <node id="61">
        <label>variant</label>
      </node>
      <node id="21">
        <label>vector</label>
      </node>
      <node id="78">
        <label>wincred.h</label>
      </node>
      <node id="73">
        <label>winternl.h</label>
      </node>
      <node id="17">
        <label>wrl.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="camera_8h" kindref="compound">camera.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphics_8h" kindref="compound">graphics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="camera__widget_8h" kindref="compound">camera_widget.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="camera__frustum_8h" kindref="compound">camera_frustum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="math__utils_8h" kindref="compound">math_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="geometry_8h" kindref="compound">geometry.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vertex__buffer_8h" kindref="compound">vertex_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;imgui/imgui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3d__utils_8h" kindref="compound">d3d_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceDirectX" kindref="compound">dx</ref><sp/>=<sp/><ref refid="namespaceDirectX" kindref="compound">DirectX</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classCamera_adc13a05bed1dc73ac90f29fc7b96dfa0_1adc13a05bed1dc73ac90f29fc7b96dfa0" refkind="member"><highlight class="normal">DirectX::XMMATRIX<sp/><ref refid="classCamera_adc13a05bed1dc73ac90f29fc7b96dfa0_1adc13a05bed1dc73ac90f29fc7b96dfa0" kindref="member">Camera::getShadowOrthographicMatrix</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>w,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>h,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shadowCamFarZ,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shadowCamNearZ<sp/></highlight><highlight class="comment">/*=<sp/>1.0f*/</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMMatrixOrthographicLH(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>w<sp/>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>h<sp/>),<sp/>shadowCamNearZ,<sp/>shadowCamFarZ<sp/>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classCamera_a60f0edb6285926aad69f4dfcbfa11896_1a60f0edb6285926aad69f4dfcbfa11896" refkind="member"><highlight class="normal">DirectX::XMMATRIX<sp/><ref refid="classCamera_a60f0edb6285926aad69f4dfcbfa11896_1a60f0edb6285926aad69f4dfcbfa11896" kindref="member">Camera::getShadowProjectionMatrix</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shadowCamFarZ,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shadowCamNearZ<sp/></highlight><highlight class="comment">/*=<sp/>1.0f*/</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="namespaceutil_a9cb19702de08e7aca317e7a795f37040_1a9cb19702de08e7aca317e7a795f37040" kindref="member">util::PI</ref><sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMMatrixPerspectiveFovLH(<sp/>r,<sp/>1.0f,<sp/>shadowCamNearZ,<sp/>shadowCamFarZ<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classCamera_aaa6c4ca43fa06f9995d961d805fd4de3_1aaa6c4ca43fa06f9995d961d805fd4de3" refkind="member"><highlight class="normal">DirectX::XMVECTOR<sp/><ref refid="classCamera_aaa6c4ca43fa06f9995d961d805fd4de3_1aaa6c4ca43fa06f9995d961d805fd4de3" kindref="member">Camera::computeTargetVector</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DirectX::XMFLOAT3<sp/>&amp;pos,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pitchDeg,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yawDeg<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMVECTOR<sp/>lightPosition<sp/>=<sp/>dx::XMVectorSet(<sp/>pos.x,<sp/>pos.y,<sp/>pos.z,<sp/>1.0f<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pitchRadians<sp/>=<sp/><ref refid="namespaceutil_a9ae2547dbf481d93da2a600fcab91ffa_1a9ae2547dbf481d93da2a600fcab91ffa" kindref="member">util::toRadians</ref>(<sp/>pitchDeg<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yawRadians<sp/>=<sp/><ref refid="namespaceutil_a9ae2547dbf481d93da2a600fcab91ffa_1a9ae2547dbf481d93da2a600fcab91ffa" kindref="member">util::toRadians</ref>(<sp/>yawDeg<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>direction<sp/>vector<sp/>from<sp/>pitch<sp/>and<sp/>yaw<sp/>using<sp/>trigonometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>std::cos(<sp/>yawRadians<sp/>)<sp/>*<sp/>cos(<sp/>pitchRadians<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal<sp/>component<sp/>-<sp/>yaw<sp/>affects<sp/>X<sp/>and<sp/>Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>std::sin(<sp/>pitchRadians<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vertical<sp/>component<sp/>-<sp/>pitch<sp/>affects<sp/>Y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>std::sin(<sp/>yawRadians<sp/>)<sp/>*<sp/>cos(<sp/>pitchRadians<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>depth<sp/>component<sp/>-<sp/>yaw<sp/>affects<sp/>Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMVECTOR<sp/>lightDirection<sp/>=<sp/>dx::XMVectorSet(<sp/>x,<sp/>y,<sp/>z,<sp/>0.0f<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>this<sp/>direction<sp/>vector<sp/>to<sp/>the<sp/>light&apos;s<sp/>position<sp/>to<sp/>get<sp/>the<sp/>point<sp/>it&apos;s<sp/>looking<sp/>at<sp/>(target)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMVectorAdd(<sp/>lightPosition,<sp/>lightDirection<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classCamera_acd1b1e7e17b69bdeb085b968e5793136_1acd1b1e7e17b69bdeb085b968e5793136" refkind="member"><highlight class="normal">std::pair&lt;float,float&gt;<sp/><ref refid="classCamera_acd1b1e7e17b69bdeb085b968e5793136_1acd1b1e7e17b69bdeb085b968e5793136" kindref="member">Camera::computePitchYawInDegFromDirectionVector</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DirectX::XMFLOAT3<sp/>&amp;directionNormalized<sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/><ref refid="namespaceutil_a1a6872147f0d950e184c0748908696ea_1a1a6872147f0d950e184c0748908696ea" kindref="member">util::isNormalized</ref>(<sp/>directionNormalized<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Provided<sp/>direction<sp/>vector<sp/>is<sp/>not<sp/>normalized!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pitchRadians<sp/>=<sp/>std::atan2f(<sp/>directionNormalized.y,<sp/>std::sqrt(directionNormalized.x<sp/>*<sp/>directionNormalized.x<sp/>+<sp/>directionNormalized.z<sp/>*<sp/>directionNormalized.z<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pitch<sp/>/in<sp/>[-pi/2,<sp/>pi/2]<sp/>radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yawRadians<sp/>=<sp/>std::atan2f(<sp/>directionNormalized.x,<sp/>directionNormalized.z<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yaw<sp/>/in<sp/>[-pi,<sp/>pi]<sp/>radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="namespaceutil_a80c74393452d6c7fb4ac1d854c905c8a_1a80c74393452d6c7fb4ac1d854c905c8a" kindref="member">util::toDegrees</ref>(<sp/>pitchRadians<sp/>),<sp/><ref refid="namespaceutil_a80c74393452d6c7fb4ac1d854c905c8a_1a80c74393452d6c7fb4ac1d854c905c8a" kindref="member">util::toDegrees</ref>(<sp/>yawRadians<sp/>)};</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classCamera_a3a06462591b9d7c74a57d343330ac07a_1a3a06462591b9d7c74a57d343330ac07a" refkind="member"><highlight class="normal">DirectX::XMFLOAT3<sp/><ref refid="classCamera_a3a06462591b9d7c74a57d343330ac07a_1a3a06462591b9d7c74a57d343330ac07a" kindref="member">Camera::computePitchYawRollInDegFromDirectionVector</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DirectX::XMFLOAT3<sp/>&amp;directionNormalized<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pitchAndYawDeg<sp/>=<sp/><ref refid="classCamera_acd1b1e7e17b69bdeb085b968e5793136_1acd1b1e7e17b69bdeb085b968e5793136" kindref="member">computePitchYawInDegFromDirectionVector</ref>(<sp/>directionNormalized<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{pitchAndYawDeg.first,<sp/>pitchAndYawDeg.second,<sp/>0.0f};</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classCamera_a65fc3f5463fa3d988438c1e38770b876_1a65fc3f5463fa3d988438c1e38770b876" refkind="member"><highlight class="normal"><ref refid="classCamera_a65fc3f5463fa3d988438c1e38770b876_1a65fc3f5463fa3d988438c1e38770b876" kindref="member">Camera::Camera</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fovDegrees<sp/></highlight><highlight class="comment">/*=<sp/>90.0f*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DirectX::XMFLOAT3<sp/>&amp;posDefault<sp/></highlight><highlight class="comment">/*=<sp/>{0.0f,<sp/>0.0f,<sp/>0.0f}*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pitchDegDefault<sp/></highlight><highlight class="comment">/*=<sp/>0.0f*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yawDegDefault<sp/></highlight><highlight class="comment">/*=<sp/>0.0f*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTethered<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPerspectiveProjection<sp/></highlight><highlight class="comment">/*=<sp/>true*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nearZ<sp/></highlight><highlight class="comment">/*=<sp/>0.5f*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>farZ<sp/></highlight><highlight class="comment">/*=<sp/>200.0f*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DirectX::XMFLOAT4<sp/>camWidgetColor<sp/></highlight><highlight class="comment">/*=<sp/>{0.2f,<sp/>0.2f,<sp/>0.6f,<sp/>1.0f}*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DirectX::XMFLOAT4<sp/>camFrustumColor<sp/></highlight><highlight class="comment">/*=<sp/>{0.6f,<sp/>0.2f,<sp/>0.2f,<sp/>1.0f}*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>translationSpeed<sp/></highlight><highlight class="comment">/*=<sp/>16.0f*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rotationSpeed<sp/></highlight><highlight class="comment">/*=<sp/>0.096f*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bShowDebugMeshes<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal"><sp/>)<sp/>noexcept</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>m_translationSpeed{translationSpeed},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rotationSpeed{rotationSpeed},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nearZ(nearZ),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>m_farZ(farZ),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>m_NearZDefault(nearZ),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>m_FarZDefault(farZ),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>m_width(width),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>m_height(height),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>m_widthDefault(width),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>m_heightDefault(height),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>m_aspectRatio(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(width)<sp/>/<sp/>height),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fovRadians{dx::XMConvertToRadians(<sp/>fovDegrees<sp/>)},</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>m_posDefault(posDefault),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pitchDefault(<ref refid="namespaceutil_a9ae2547dbf481d93da2a600fcab91ffa_1a9ae2547dbf481d93da2a600fcab91ffa" kindref="member">util::toRadians</ref>(<sp/>pitchDegDefault<sp/>)),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>m_yawDefault(<ref refid="namespaceutil_a9ae2547dbf481d93da2a600fcab91ffa_1a9ae2547dbf481d93da2a600fcab91ffa" kindref="member">util::toRadians</ref>(<sp/>yawDegDefault<sp/>)),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bTethered(bTethered),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bPespectiveProjection(bPerspectiveProjection),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraWidget(std::make_unique&lt;CameraWidget&gt;(gfx,<sp/>1.0f,<sp/>camWidgetColor),<sp/>gfx,<sp/>{pitchDegDefault,<sp/>yawDegDefault,<sp/>0.0f},<sp/>posDefault),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraFrustum(std::make_unique&lt;CameraFrustum&gt;(gfx,<sp/>1.0f,<sp/>camFrustumColor,<sp/>1.0f,<sp/>height,<sp/>nearZ,<sp/>farZ),<sp/>gfx,<sp/>{yawDegDefault,<sp/>yawDegDefault,<sp/>0.0f},<sp/>posDefault),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bShowWidget{bShowDebugMeshes},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bShowFrustum{bShowDebugMeshes}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>s_id++;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>m_name<sp/>=<sp/>std::string{</highlight><highlight class="stringliteral">&quot;Camera#&quot;</highlight><highlight class="normal">}<sp/>+<sp/>std::to_string(<sp/>s_id<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bTethered<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pos<sp/>=<sp/>posDefault;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>resetToDefault(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classCamera_a12ef2532159ea4927385d862302129e7_1a12ef2532159ea4927385d862302129e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_a12ef2532159ea4927385d862302129e7_1a12ef2532159ea4927385d862302129e7" kindref="member">Camera::update</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dt,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lerpBetweenFrames,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnableSmoothMovement<sp/></highlight><highlight class="comment">/*=<sp/>false*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classCamera_aa0f940aaaf3dc1afa030082b057feb76_1aa0f940aaaf3dc1afa030082b057feb76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_aa0f940aaaf3dc1afa030082b057feb76_1aa0f940aaaf3dc1afa030082b057feb76" kindref="member">Camera::render</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>channels<sp/></highlight><highlight class="comment">/*=<sp/>rch::all*/</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cond_noex</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bShowWidget<sp/>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cameraWidget.render(<sp/>channels<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bShowFrustum<sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cameraFrustum.render(<sp/>channels<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classCamera_a28fe2cb59984f7d7200a5b7a03b7fb01_1a28fe2cb59984f7d7200a5b7a03b7fb01" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_a28fe2cb59984f7d7200a5b7a03b7fb01_1a28fe2cb59984f7d7200a5b7a03b7fb01" kindref="member">Camera::connectMaterialsToRenderer</ref>(<sp/><ref refid="classren_1_1Renderer" kindref="compound">ren::Renderer</ref><sp/>&amp;<ref refid="namespaceren" kindref="compound">ren</ref><sp/>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCamera_ac9530bde301f2e79c21bff33561f17da_1ac9530bde301f2e79c21bff33561f17da" kindref="member">m_cameraWidget</ref>.<ref refid="classModel_a026f7d322b40a3488184d711962d92c2_1a026f7d322b40a3488184d711962d92c2" kindref="member">connectMaterialsToRenderer</ref>(<sp/><ref refid="namespaceren" kindref="compound">ren</ref><sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCamera_ac2e3499708cef07f0c53ac3549985c05_1ac2e3499708cef07f0c53ac3549985c05" kindref="member">m_cameraFrustum</ref>.<ref refid="classModel_a026f7d322b40a3488184d711962d92c2_1a026f7d322b40a3488184d711962d92c2" kindref="member">connectMaterialsToRenderer</ref>(<sp/><ref refid="namespaceren" kindref="compound">ren</ref><sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" kindref="member">Camera::makeActive</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="141"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>gfx.<ref refid="classGraphics_a1318c2c7f400f63a1b70391bebab4673_1a1318c2c7f400f63a1b70391bebab4673" kindref="member">setViewMatrix</ref>(<sp/><ref refid="classCamera_a69061c32d9aae3cba2237a0733649928_1a69061c32d9aae3cba2237a0733649928" kindref="member">getViewMatrix</ref>()<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>gfx.<ref refid="classGraphics_a2ae47898ec3e6e2a64b3a8149a26ca6d_1a2ae47898ec3e6e2a64b3a8149a26ca6d" kindref="member">setProjectionMatrix</ref>(<sp/><ref refid="classCamera_afa7cd578b69a71b3848e1c64fdea43a3_1afa7cd578b69a71b3848e1c64fdea43a3" kindref="member">m_bPespectiveProjection</ref><sp/>?</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCamera_a459c4094d26c1c4342563d8c57e5d57a_1a459c4094d26c1c4342563d8c57e5d57a" kindref="member">getPerspectiveProjectionMatrix</ref>()<sp/>:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCamera_afc76c2b8fcc7d3feb23235a9fff0ee6d_1afc76c2b8fcc7d3feb23235a9fff0ee6d" kindref="member">getOrthographicProjectionMatrix</ref>(<sp/><ref refid="classCamera_a6d655887e5e87b12e19094ec89b74449_1a6d655887e5e87b12e19094ec89b74449" kindref="member">m_width</ref>,<sp/><ref refid="classCamera_ab78d1297dea3f67d7e59c1c1a2cf52ab_1ab78d1297dea3f67d7e59c1c1a2cf52ab" kindref="member">m_height</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classCamera_a2742b6e7168d1425c2cbd2685d90fab3_1a2742b6e7168d1425c2cbd2685d90fab3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_a2742b6e7168d1425c2cbd2685d90fab3_1a2742b6e7168d1425c2cbd2685d90fab3" kindref="member">Camera::resetToDefault</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!m_bTethered<sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pos<sp/>=<sp/>m_posDefault;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cameraWidget.setTranslation(<sp/>m_pos<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cameraFrustum.setTranslation(<sp/>m_pos<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pitch<sp/>=<sp/>m_pitchDefault;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>m_yaw<sp/>=<sp/>m_yawDefault;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMFLOAT3<sp/>angles{m_pitch,<sp/>m_yaw,<sp/>0.0f};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraWidget.setRotation(<sp/>angles<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraFrustum.setRotation(<sp/>angles<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>m_width<sp/>=<sp/>m_widthDefault;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>m_height<sp/>=<sp/>m_heightDefault;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nearZ<sp/>=<sp/>m_NearZDefault;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>m_farZ<sp/>=<sp/>m_FarZDefault;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>updateCameraFrustum(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classCamera_a69061c32d9aae3cba2237a0733649928_1a69061c32d9aae3cba2237a0733649928" refkind="member"><highlight class="normal">DirectX::XMMATRIX<sp/><ref refid="classCamera_a69061c32d9aae3cba2237a0733649928_1a69061c32d9aae3cba2237a0733649928" kindref="member">Camera::getViewMatrix</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>camPosition<sp/>=<sp/>dx::XMLoadFloat3(<sp/>&amp;<ref refid="classCamera_a3c4f56de45dec516c93157dfe9aa2448_1a3c4f56de45dec516c93157dfe9aa2448" kindref="member">m_pos</ref><sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>camTarget<sp/>=<sp/><ref refid="classCamera_ab5b2ede544f3c7b5b24191703f96f460_1ab5b2ede544f3c7b5b24191703f96f460" kindref="member">getTarget</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMMatrixLookAtLH(<sp/>camPosition,<sp/>camTarget,<sp/><ref refid="classCamera_a0b7848483ea5d46bee2849505620855e_1a0b7848483ea5d46bee2849505620855e" kindref="member">getUp</ref>()<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classCamera_a119f72de69166ad7f8d69fdfd28437de_1a119f72de69166ad7f8d69fdfd28437de" refkind="member"><highlight class="normal">DirectX::XMMATRIX<sp/><ref refid="classCamera_a119f72de69166ad7f8d69fdfd28437de_1a119f72de69166ad7f8d69fdfd28437de" kindref="member">Camera::getReflectionViewMatrix</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMVECTOR<sp/>&amp;mirrorPlane<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>dx::XMMATRIX<sp/>R<sp/>=<sp/>dx::XMMatrixReflect(<sp/>mirrorPlane<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMMatrixMultiply(<sp/>getViewMatrix(),<sp/>R<sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classCamera_aa79555b2e77e07c0f070016498185caa_1aa79555b2e77e07c0f070016498185caa" refkind="member"><highlight class="normal">DirectX::XMMATRIX<sp/><ref refid="classCamera_aa79555b2e77e07c0f070016498185caa_1aa79555b2e77e07c0f070016498185caa" kindref="member">Camera::getProjectionMatrix</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bForShadows,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shadowCamFarZ<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_bPespectiveProjection<sp/>?</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>bForShadows<sp/>?<sp/>getShadowProjectionMatrix(<sp/>shadowCamFarZ<sp/>)<sp/>:<sp/>getPerspectiveProjectionMatrix()<sp/>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(<sp/>bForShadows<sp/>?<sp/>getShadowOrthographicMatrix(<sp/>m_width,<sp/>m_height,<sp/>shadowCamFarZ<sp/>)<sp/>:<sp/>getOrthographicProjectionMatrix(<sp/>m_width,<sp/>m_height<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classCamera_a7934bf160e8fbb077a85ae94563cd35f_1a7934bf160e8fbb077a85ae94563cd35f" refkind="member"><highlight class="normal">DirectX::XMVECTOR<sp/><ref refid="classCamera_a7934bf160e8fbb077a85ae94563cd35f_1a7934bf160e8fbb077a85ae94563cd35f" kindref="member">Camera::getDirection</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMVECTOR<sp/>forwardVector{0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMVector3Transform(<sp/>forwardVector,<sp/><ref refid="classCamera_a1b8c041a2c04c520d64c73b8ab01b840_1a1b8c041a2c04c520d64c73b8ab01b840" kindref="member">getRotationMatrix</ref>()<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classCamera_a8e279f50486bb8c77e85e9149992c347_1a8e279f50486bb8c77e85e9149992c347" refkind="member"><highlight class="normal">DirectX::XMVECTOR<sp/><ref refid="classCamera_a8e279f50486bb8c77e85e9149992c347_1a8e279f50486bb8c77e85e9149992c347" kindref="member">Camera::getRight</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMVector3Cross(<sp/><ref refid="classCamera_a0b7848483ea5d46bee2849505620855e_1a0b7848483ea5d46bee2849505620855e" kindref="member">getUp</ref>(),<sp/><ref refid="classCamera_a7934bf160e8fbb077a85ae94563cd35f_1a7934bf160e8fbb077a85ae94563cd35f" kindref="member">getDirection</ref>()<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classCamera_a0b7848483ea5d46bee2849505620855e_1a0b7848483ea5d46bee2849505620855e" refkind="member"><highlight class="normal">DirectX::XMVECTOR<sp/><ref refid="classCamera_a0b7848483ea5d46bee2849505620855e_1a0b7848483ea5d46bee2849505620855e" kindref="member">Camera::getUp</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMVECTOR{0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f};<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>aka<sp/>upVector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classCamera_af3981d25eb5b09097c9d60ef7f6a936c_1af3981d25eb5b09097c9d60ef7f6a936c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classCamera_af3981d25eb5b09097c9d60ef7f6a936c_1af3981d25eb5b09097c9d60ef7f6a936c" kindref="member">Camera::getFovRadians</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCamera_a38e43d42c55982625419f60769cac43b_1a38e43d42c55982625419f60769cac43b" kindref="member">m_fovRadians</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classCamera_a4cffeb51dd4475c274019f11b5c5c89f_1a4cffeb51dd4475c274019f11b5c5c89f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classCamera_a4cffeb51dd4475c274019f11b5c5c89f_1a4cffeb51dd4475c274019f11b5c5c89f" kindref="member">Camera::getName</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCamera_acb7b3e084b057cc037734303700c5df7_1acb7b3e084b057cc037734303700c5df7" kindref="member">m_name</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classCamera_abb32e44fc006cdd7f0c999e27e8b2dee_1abb32e44fc006cdd7f0c999e27e8b2dee" refkind="member"><highlight class="normal">std::vector&lt;dx::XMFLOAT4&gt;<sp/><ref refid="classCamera_abb32e44fc006cdd7f0c999e27e8b2dee_1abb32e44fc006cdd7f0c999e27e8b2dee" kindref="member">Camera::getFrustumPlanes</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x,<sp/>y,<sp/>z,<sp/>and<sp/>w<sp/>represent<sp/>A,<sp/>B,<sp/>C<sp/>and<sp/>D<sp/>in<sp/>the<sp/>plane<sp/>equation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>ABC<sp/>are<sp/>the<sp/>xyz<sp/>of<sp/>the<sp/>planes<sp/>normal,<sp/>and<sp/>D<sp/>is<sp/>the<sp/>plane<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;dx::XMFLOAT4&gt;<sp/>frustumPlanes(<sp/>6<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>dx::XMFLOAT4X4<sp/>viewProj{};<sp/><sp/></highlight><highlight class="comment">//<sp/>Left-Handed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>dx::XMStoreFloat4x4(<sp/>&amp;viewProj,<sp/><ref refid="classCamera_a69061c32d9aae3cba2237a0733649928_1a69061c32d9aae3cba2237a0733649928" kindref="member">getViewMatrix</ref>()<sp/>*<sp/><ref refid="classCamera_a459c4094d26c1c4342563d8c57e5d57a_1a459c4094d26c1c4342563d8c57e5d57a" kindref="member">getPerspectiveProjectionMatrix</ref>()<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.x|y|z|w<sp/>of<sp/>the<sp/>plane<sp/>represent<sp/>A|B|C|D<sp/>of<sp/>the<sp/>plane<sp/>equation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Left<sp/>Frustum<sp/>Plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>first<sp/>column<sp/>of<sp/>the<sp/>matrix<sp/>to<sp/>the<sp/>fourth<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[0].x<sp/>=<sp/>viewProj._14<sp/>+<sp/>viewProj._11;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[0].y<sp/>=<sp/>viewProj._24<sp/>+<sp/>viewProj._21;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[0].z<sp/>=<sp/>viewProj._34<sp/>+<sp/>viewProj._31;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[0].w<sp/>=<sp/>viewProj._44<sp/>+<sp/>viewProj._41;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right<sp/>Frustum<sp/>Plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>first<sp/>column<sp/>of<sp/>matrix<sp/>from<sp/>the<sp/>fourth<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[1].x<sp/>=<sp/>viewProj._14<sp/>-<sp/>viewProj._11;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[1].y<sp/>=<sp/>viewProj._24<sp/>-<sp/>viewProj._21;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[1].z<sp/>=<sp/>viewProj._34<sp/>-<sp/>viewProj._31;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[1].w<sp/>=<sp/>viewProj._44<sp/>-<sp/>viewProj._41;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Top<sp/>Frustum<sp/>Plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>second<sp/>column<sp/>of<sp/>matrix<sp/>from<sp/>the<sp/>fourth<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[2].x<sp/>=<sp/>viewProj._14<sp/>-<sp/>viewProj._12;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[2].y<sp/>=<sp/>viewProj._24<sp/>-<sp/>viewProj._22;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[2].z<sp/>=<sp/>viewProj._34<sp/>-<sp/>viewProj._32;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[2].w<sp/>=<sp/>viewProj._44<sp/>-<sp/>viewProj._42;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bottom<sp/>Frustum<sp/>Plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>second<sp/>column<sp/>of<sp/>the<sp/>matrix<sp/>to<sp/>the<sp/>fourth<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[3].x<sp/>=<sp/>viewProj._14<sp/>+<sp/>viewProj._12;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[3].y<sp/>=<sp/>viewProj._24<sp/>+<sp/>viewProj._22;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[3].z<sp/>=<sp/>viewProj._34<sp/>+<sp/>viewProj._32;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[3].w<sp/>=<sp/>viewProj._44<sp/>+<sp/>viewProj._42;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Near<sp/>Frustum<sp/>Plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>could<sp/>add<sp/>the<sp/>third<sp/>column<sp/>to<sp/>the<sp/>fourth<sp/>column<sp/>to<sp/>get<sp/>the<sp/>near<sp/>plane,<sp/>but<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>do<sp/>this<sp/>because<sp/>the<sp/>third<sp/>column<sp/>IS<sp/>the<sp/>near<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[4].x<sp/>=<sp/>viewProj._13;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[4].y<sp/>=<sp/>viewProj._23;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[4].z<sp/>=<sp/>viewProj._33;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[4].w<sp/>=<sp/>viewProj._43;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Far<sp/>Frustum<sp/>Plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>subtract<sp/>third<sp/>column<sp/>of<sp/>matrix<sp/>from<sp/>the<sp/>fourth<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[5].x<sp/>=<sp/>viewProj._14<sp/>-<sp/>viewProj._13;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[5].y<sp/>=<sp/>viewProj._24<sp/>-<sp/>viewProj._23;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[5].z<sp/>=<sp/>viewProj._34<sp/>-<sp/>viewProj._33;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumPlanes[5].w<sp/>=<sp/>viewProj._44<sp/>-<sp/>viewProj._43;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>plane<sp/>normals<sp/>(A,<sp/>B<sp/>and<sp/>C<sp/>(xyz))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>note<sp/>that<sp/>the<sp/>planes<sp/>face<sp/>inward<sp/>the<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>planeNormalLength<sp/>=<sp/>sqrt(<sp/>(<sp/>frustumPlanes[i].x<sp/>*<sp/>frustumPlanes[i].x<sp/>)<sp/>+<sp/>(<sp/>frustumPlanes[i].y<sp/>*<sp/>frustumPlanes[i].y<sp/>)<sp/>+<sp/>(<sp/>frustumPlanes[i].z<sp/>*<sp/>frustumPlanes[i].z<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustumPlanes[i].x<sp/>/=<sp/>planeNormalLength;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustumPlanes[i].y<sp/>/=<sp/>planeNormalLength;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustumPlanes[i].z<sp/>/=<sp/>planeNormalLength;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustumPlanes[i].w<sp/>/=<sp/>planeNormalLength;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frustumPlanes;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classCamera_a337eecc6a2570af8101a660be59f429d_1a337eecc6a2570af8101a660be59f429d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_a337eecc6a2570af8101a660be59f429d_1a337eecc6a2570af8101a660be59f429d" kindref="member">Camera::displayImguiWidgets</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FINAL_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>projDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rotDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>posDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dirtyCheck<sp/>=<sp/>[](<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;flag<sp/>)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>flag<sp/>||<sp/>d;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::Text(<sp/></highlight><highlight class="stringliteral">&quot;Projection&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>dirtyCheck(<sp/>ImGui::SliderFloat(<sp/></highlight><highlight class="stringliteral">&quot;Width&quot;</highlight><highlight class="normal">,<sp/>&amp;m_width,<sp/>0.01f,<sp/>4.0f,<sp/></highlight><highlight class="stringliteral">&quot;%.2f&quot;</highlight><highlight class="normal">,<sp/>1.5f<sp/>),<sp/>projDirty<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>dirtyCheck(<sp/>ImGui::SliderFloat(<sp/></highlight><highlight class="stringliteral">&quot;Height&quot;</highlight><highlight class="normal">,<sp/>&amp;m_height,<sp/>0.01f,<sp/>4.0f,<sp/></highlight><highlight class="stringliteral">&quot;%.2f&quot;</highlight><highlight class="normal">,<sp/>1.5f<sp/>),<sp/>projDirty<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>dirtyCheck(<sp/>ImGui::SliderFloat(<sp/></highlight><highlight class="stringliteral">&quot;Near<sp/>Z&quot;</highlight><highlight class="normal">,<sp/>&amp;m_nearZ,<sp/>0.01f,<sp/>m_farZ<sp/>-<sp/>0.01f,<sp/></highlight><highlight class="stringliteral">&quot;%.2f&quot;</highlight><highlight class="normal">,<sp/>4.0f<sp/>),<sp/>projDirty<sp/>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>dirtyCheck(<sp/>ImGui::SliderFloat(<sp/></highlight><highlight class="stringliteral">&quot;Far<sp/>Z&quot;</highlight><highlight class="normal">,<sp/>&amp;m_farZ,<sp/>m_nearZ<sp/>+<sp/>0.01f,<sp/>1000.0f,<sp/></highlight><highlight class="stringliteral">&quot;%.2f&quot;</highlight><highlight class="normal">,<sp/>4.0f<sp/>),<sp/>projDirty<sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::Text(<sp/></highlight><highlight class="stringliteral">&quot;Rotation&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>m_pitch<sp/>to<sp/>99.5%<sp/>of<sp/>+-90<sp/>degrees<sp/>max<sp/>to<sp/>prevent<sp/>euler<sp/>angle<sp/>gimbal<sp/>lock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>dirtyCheck(<sp/>ImGui::SliderAngle(<sp/></highlight><highlight class="stringliteral">&quot;Pitch&quot;</highlight><highlight class="normal">,<sp/>&amp;m_pitch,<sp/>0.995f<sp/>*<sp/>-90.0f,<sp/>0.995f<sp/>*<sp/>90.0f<sp/>),<sp/>rotDirty<sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>dirtyCheck(<sp/>ImGui::SliderAngle(<sp/></highlight><highlight class="stringliteral">&quot;Yaw&quot;</highlight><highlight class="normal">,<sp/>&amp;m_yaw,<sp/>-180.0f,<sp/>180.0f<sp/>),<sp/>rotDirty<sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>camera<sp/>is<sp/>tethered<sp/>disable<sp/>its<sp/>imgui<sp/>position<sp/>controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!m_bTethered<sp/>)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Text(<sp/></highlight><highlight class="stringliteral">&quot;Position&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirtyCheck(<sp/>ImGui::SliderFloat(<sp/></highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">,<sp/>&amp;m_pos.x,<sp/>-80.0f,<sp/>80.0f,<sp/></highlight><highlight class="stringliteral">&quot;%.1f&quot;</highlight><highlight class="normal"><sp/>),<sp/>posDirty<sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirtyCheck(<sp/>ImGui::SliderFloat(<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">,<sp/>&amp;m_pos.y,<sp/>-80.0f,<sp/>80.0f,<sp/></highlight><highlight class="stringliteral">&quot;%.1f&quot;</highlight><highlight class="normal"><sp/>),<sp/>posDirty<sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirtyCheck(<sp/>ImGui::SliderFloat(<sp/></highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">,<sp/>&amp;m_pos.z,<sp/>-80.0f,<sp/>80.0f,<sp/></highlight><highlight class="stringliteral">&quot;%.1f&quot;</highlight><highlight class="normal"><sp/>),<sp/>posDirty<sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::Checkbox(<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Widget&quot;</highlight><highlight class="normal">,<sp/>&amp;m_bShowWidget<sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::Checkbox(<sp/></highlight><highlight class="stringliteral">&quot;Camera<sp/>Frustum&quot;</highlight><highlight class="normal">,<sp/>&amp;m_bShowFrustum<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ImGui::Button(<sp/></highlight><highlight class="stringliteral">&quot;Reset&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resetToDefault(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>projDirty<sp/>)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateCameraFrustum(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rotDirty<sp/>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMFLOAT3<sp/>angles{m_pitch,<sp/>m_yaw,<sp/>0.0f};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cameraWidget.setRotation(<sp/>angles<sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cameraFrustum.setRotation(<sp/>angles<sp/>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>posDirty<sp/>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cameraWidget.setTranslation(<sp/>m_pos<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cameraFrustum.setTranslation(<sp/>m_pos<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="classCamera_a15b29e049281475c4ab96bd311c965fc_1a15b29e049281475c4ab96bd311c965fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_a15b29e049281475c4ab96bd311c965fc_1a15b29e049281475c4ab96bd311c965fc" kindref="member">Camera::onWindowResize</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#TODO:<sp/>probably<sp/>not<sp/>needed<sp/>cause<sp/>camera<sp/>dimensions<sp/>are<sp/>not<sp/>necessarily<sp/>tied<sp/>to<sp/>gfx<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_width<sp/>=<sp/>static_cast&lt;float&gt;(<sp/>gfx.getClientWidth()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_height<sp/>=<sp/>static_cast&lt;float&gt;(<sp/>gfx.getClientHeight()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//updateCameraFrustum(<sp/>gfx<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="classCamera_a531fccf0eb0ea4af179305b20e6e3064_1a531fccf0eb0ea4af179305b20e6e3064" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_a531fccf0eb0ea4af179305b20e6e3064_1a531fccf0eb0ea4af179305b20e6e3064" kindref="member">Camera::setTethered</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTethered<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>m_bTethered<sp/>=<sp/>bTethered;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="classCamera_a5975e7d803be000783917babdedddc08_1a5975e7d803be000783917babdedddc08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_a5975e7d803be000783917babdedddc08_1a5975e7d803be000783917babdedddc08" kindref="member">Camera::setRotationSpeed</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rotationSpeed<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rotationSpeed<sp/>=<sp/>rotationSpeed;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="classCamera_a4aa0720c85d630f02b29c833254551a6_1a4aa0720c85d630f02b29c833254551a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classCamera_a4aa0720c85d630f02b29c833254551a6_1a4aa0720c85d630f02b29c833254551a6" kindref="member">Camera::getRotationSpeed</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCamera_a0b1c75781c142e6bb28761224d0b67ce_1a0b1c75781c142e6bb28761224d0b67ce" kindref="member">m_rotationSpeed</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="classCamera_a87848e679a7fc471cd020f3ae01299b1_1a87848e679a7fc471cd020f3ae01299b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_a87848e679a7fc471cd020f3ae01299b1_1a87848e679a7fc471cd020f3ae01299b1" kindref="member">Camera::setRotation</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DirectX::XMFLOAT3<sp/>&amp;rot<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pitch<sp/>=<sp/>rot.x;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>m_yaw<sp/>=<sp/>rot.y;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMFLOAT3<sp/>angles{m_pitch,<sp/>m_yaw,<sp/>0.0f};</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraWidget.setRotation(<sp/>angles<sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraFrustum.setRotation(<sp/>angles<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="classCamera_a6c7571eacc74a16f4ec5473afca8feaa_1a6c7571eacc74a16f4ec5473afca8feaa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_a6c7571eacc74a16f4ec5473afca8feaa_1a6c7571eacc74a16f4ec5473afca8feaa" kindref="member">Camera::rotateRel</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceDirectX" kindref="compound">dx</ref>,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bTethered<sp/>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pitch<sp/>=<sp/>std::clamp(<sp/>m_pitch<sp/>+<sp/>dy<sp/>*<sp/>m_rotationSpeed,<sp/>0.995f<sp/>*<sp/>-<ref refid="namespaceutil_a9cb19702de08e7aca317e7a795f37040_1a9cb19702de08e7aca317e7a795f37040" kindref="member">util::PI</ref><sp/>/<sp/>2.0f,<sp/>0.995f<sp/>*<sp/><ref refid="namespaceutil_a9cb19702de08e7aca317e7a795f37040_1a9cb19702de08e7aca317e7a795f37040" kindref="member">util::PI</ref><sp/>/<sp/>2.0f<sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>m_yaw<sp/>=<sp/><ref refid="namespaceutil_a4bb3661bd6981253daff0d4676749651_1a4bb3661bd6981253daff0d4676749651" kindref="member">util::wrapAngle</ref>(<sp/>m_yaw<sp/>+<sp/><ref refid="namespaceDirectX" kindref="compound">dx</ref><sp/>*<sp/>m_rotationSpeed<sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dx::XMFLOAT3<sp/>angles{m_pitch,<sp/>m_yaw,<sp/>0.0f};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraWidget.setRotation(<sp/>angles<sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraFrustum.setRotation(<sp/>angles<sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="classCamera_ac45d400a202f16e61708f7e1c71b7bf3_1ac45d400a202f16e61708f7e1c71b7bf3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_ac45d400a202f16e61708f7e1c71b7bf3_1ac45d400a202f16e61708f7e1c71b7bf3" kindref="member">Camera::translateRel</ref>(<sp/>DirectX::XMFLOAT3<sp/>translation<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bTethered<sp/>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>m_posPrev<sp/>=<sp/>m_pos;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>dx::XMStoreFloat3(<sp/>&amp;translation,<sp/>dx::XMVector3Transform(<sp/>dx::XMLoadFloat3(<sp/>&amp;translation<sp/>),<sp/>dx::XMMatrixScaling(<sp/>m_translationSpeed,<sp/>m_translationSpeed,<sp/>m_translationSpeed<sp/>)<sp/>*<sp/>getRotationMatrix()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pos<sp/>=<sp/>{m_pos.x<sp/>+<sp/>translation.x,<sp/>m_pos.y<sp/>+<sp/>translation.y,<sp/>m_pos.z<sp/>+<sp/>translation.z};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraWidget.setTranslation(<sp/>m_pos<sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraFrustum.setTranslation(<sp/>m_pos<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="classCamera_af7a1948acaa745a0689e8a754f4166a2_1af7a1948acaa745a0689e8a754f4166a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_af7a1948acaa745a0689e8a754f4166a2_1af7a1948acaa745a0689e8a754f4166a2" kindref="member">Camera::setTranslation</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DirectX::XMFLOAT3<sp/>&amp;pos<sp/>)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>m_bTethered<sp/>)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;m_pos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraWidget.setTranslation(<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cameraFrustum.setTranslation(<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classCamera_a5433d9b545d22abeecb3693cc832b99a_1a5433d9b545d22abeecb3693cc832b99a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DirectX::XMFLOAT3&amp;<sp/><ref refid="classCamera_a5433d9b545d22abeecb3693cc832b99a_1a5433d9b545d22abeecb3693cc832b99a" kindref="member">Camera::getPosition</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCamera_a3c4f56de45dec516c93157dfe9aa2448_1a3c4f56de45dec516c93157dfe9aa2448" kindref="member">m_pos</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="classCamera_a4e89fb4d7923b79a2ea9b6e892e2d3a7_1a4e89fb4d7923b79a2ea9b6e892e2d3a7" refkind="member"><highlight class="normal">DirectX::XMFLOAT3&amp;<sp/><ref refid="classCamera_a5433d9b545d22abeecb3693cc832b99a_1a5433d9b545d22abeecb3693cc832b99a" kindref="member">Camera::getPosition</ref>()</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCamera_a3c4f56de45dec516c93157dfe9aa2448_1a3c4f56de45dec516c93157dfe9aa2448" kindref="member">m_pos</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="classCamera_a976313569576c8595a5e15d1c169ca9d_1a976313569576c8595a5e15d1c169ca9d" refkind="member"><highlight class="normal">DirectX::XMFLOAT3<sp/><ref refid="classCamera_a976313569576c8595a5e15d1c169ca9d_1a976313569576c8595a5e15d1c169ca9d" kindref="member">Camera::getRotation</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMFLOAT3{<ref refid="classCamera_a2202e419e9440bbb26e6997248268b0b_1a2202e419e9440bbb26e6997248268b0b" kindref="member">m_pitch</ref>,<sp/><ref refid="classCamera_a0f8807da02d4a1bb695be51793279873_1a0f8807da02d4a1bb695be51793279873" kindref="member">m_yaw</ref>,<sp/>0};</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="classCamera_aefe6e69f3d7bbdb9e48ae91ce22f485b_1aefe6e69f3d7bbdb9e48ae91ce22f485b" refkind="member"><highlight class="normal">DirectX::XMMATRIX<sp/><ref refid="classCamera_aefe6e69f3d7bbdb9e48ae91ce22f485b_1aefe6e69f3d7bbdb9e48ae91ce22f485b" kindref="member">Camera::getPositionMatrix</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMMatrixTranslation(<sp/><ref refid="classCamera_a3c4f56de45dec516c93157dfe9aa2448_1a3c4f56de45dec516c93157dfe9aa2448" kindref="member">m_pos</ref>.x,<sp/><ref refid="classCamera_a3c4f56de45dec516c93157dfe9aa2448_1a3c4f56de45dec516c93157dfe9aa2448" kindref="member">m_pos</ref>.y,<sp/><ref refid="classCamera_a3c4f56de45dec516c93157dfe9aa2448_1a3c4f56de45dec516c93157dfe9aa2448" kindref="member">m_pos</ref>.z<sp/>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="classCamera_a1b8c041a2c04c520d64c73b8ab01b840_1a1b8c041a2c04c520d64c73b8ab01b840" refkind="member"><highlight class="normal">DirectX::XMMATRIX<sp/><ref refid="classCamera_a1b8c041a2c04c520d64c73b8ab01b840_1a1b8c041a2c04c520d64c73b8ab01b840" kindref="member">Camera::getRotationMatrix</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMMatrixRotationRollPitchYaw(<sp/><ref refid="classCamera_a2202e419e9440bbb26e6997248268b0b_1a2202e419e9440bbb26e6997248268b0b" kindref="member">m_pitch</ref>,<sp/><ref refid="classCamera_a0f8807da02d4a1bb695be51793279873_1a0f8807da02d4a1bb695be51793279873" kindref="member">m_yaw</ref>,<sp/>0.0f<sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="classCamera_ab5b2ede544f3c7b5b24191703f96f460_1ab5b2ede544f3c7b5b24191703f96f460" refkind="member"><highlight class="normal">DirectX::XMVECTOR<sp/><ref refid="classCamera_ab5b2ede544f3c7b5b24191703f96f460_1ab5b2ede544f3c7b5b24191703f96f460" kindref="member">Camera::getTarget</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>camPosition<sp/>=<sp/>dx::XMLoadFloat3(<sp/>&amp;<ref refid="classCamera_a3c4f56de45dec516c93157dfe9aa2448_1a3c4f56de45dec516c93157dfe9aa2448" kindref="member">m_pos</ref><sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lookVector<sp/>=<sp/><ref refid="classCamera_a7934bf160e8fbb077a85ae94563cd35f_1a7934bf160e8fbb077a85ae94563cd35f" kindref="member">getDirection</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMVectorAdd(<sp/>camPosition,<sp/>lookVector<sp/>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCamera_af22387b11c0559714e2c2681171f242d_1af22387b11c0559714e2c2681171f242d" kindref="member">Camera::updateCameraFrustum</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>=<sp/><ref refid="structGeometry_a026f26f5b340b8ded93d710b9ae82f47_1a026f26f5b340b8ded93d710b9ae82f47" kindref="member">Geometry::makeCameraFrustum</ref>(<sp/><ref refid="classCamera_a6d655887e5e87b12e19094ec89b74449_1a6d655887e5e87b12e19094ec89b74449" kindref="member">m_width</ref>,<sp/><ref refid="classCamera_ab78d1297dea3f67d7e59c1c1a2cf52ab_1ab78d1297dea3f67d7e59c1c1a2cf52ab" kindref="member">m_height</ref>,<sp/><ref refid="classCamera_ae34dba3ef8b4a73e680c86f1637432ba_1ae34dba3ef8b4a73e680c86f1637432ba" kindref="member">m_nearZ</ref>,<sp/><ref refid="classCamera_ad2f737fa9ac9e419c9dde738848cd9d4_1ad2f737fa9ac9e419c9dde738848cd9d4" kindref="member">m_farZ</ref><sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*frustumMesh<sp/>=<sp/><ref refid="classCamera_ac2e3499708cef07f0c53ac3549985c05_1ac2e3499708cef07f0c53ac3549985c05" kindref="member">m_cameraFrustum</ref>.<ref refid="classModel_aeaa2b630fba75a0b911db2f655301160_1aeaa2b630fba75a0b911db2f655301160" kindref="member">getMesh</ref>();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumMesh-&gt;<ref refid="classMesh_a8cb16fb21424f90eadf022d531d17d30_1a8cb16fb21424f90eadf022d531d17d30" kindref="member">getVertexBuffer</ref>()<sp/>=<sp/>std::make_shared&lt;VertexBuffer&gt;(<sp/>gfx,<sp/>g.m_vb<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>frustumMesh-&gt;createAabb(<sp/>g.m_vb<sp/>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCamera_a9a5b3abea53ca97854696258029ee6cd_1a9a5b3abea53ca97854696258029ee6cd" kindref="member">m_aspectRatio</ref><sp/>=<sp/><ref refid="classCamera_a6d655887e5e87b12e19094ec89b74449_1a6d655887e5e87b12e19094ec89b74449" kindref="member">m_width</ref><sp/>/<sp/><ref refid="classCamera_ab78d1297dea3f67d7e59c1c1a2cf52ab_1ab78d1297dea3f67d7e59c1c1a2cf52ab" kindref="member">m_height</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="classCamera_afc76c2b8fcc7d3feb23235a9fff0ee6d_1afc76c2b8fcc7d3feb23235a9fff0ee6d" refkind="member"><highlight class="normal">DirectX::XMMATRIX<sp/><ref refid="classCamera_afc76c2b8fcc7d3feb23235a9fff0ee6d_1afc76c2b8fcc7d3feb23235a9fff0ee6d" kindref="member">Camera::getOrthographicProjectionMatrix</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>width,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>height<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMMatrixOrthographicLH(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>width<sp/>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>height<sp/>),<sp/>m_nearZ,<sp/>m_farZ<sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="classCamera_a459c4094d26c1c4342563d8c57e5d57a_1a459c4094d26c1c4342563d8c57e5d57a" refkind="member"><highlight class="normal">DirectX::XMMATRIX<sp/><ref refid="classCamera_a459c4094d26c1c4342563d8c57e5d57a_1a459c4094d26c1c4342563d8c57e5d57a" kindref="member">Camera::getPerspectiveProjectionMatrix</ref>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx::XMMatrixPerspectiveFovLH(<sp/><ref refid="classCamera_a38e43d42c55982625419f60769cac43b_1a38e43d42c55982625419f60769cac43b" kindref="member">m_fovRadians</ref>,<sp/><ref refid="classCamera_a9a5b3abea53ca97854696258029ee6cd_1a9a5b3abea53ca97854696258029ee6cd" kindref="member">m_aspectRatio</ref>,<sp/><ref refid="classCamera_ae34dba3ef8b4a73e680c86f1637432ba_1ae34dba3ef8b4a73e680c86f1637432ba" kindref="member">m_nearZ</ref>,<sp/><ref refid="classCamera_ad2f737fa9ac9e419c9dde738848cd9d4_1ad2f737fa9ac9e419c9dde738848cd9d4" kindref="member">m_farZ</ref><sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/camera.cpp"/>
  </compounddef>
</doxygen>
