<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="structgui_1_1Point" kind="struct" language="C++" prot="public">
    <compoundname>gui::Point</compoundname>
    <includes refid="ui__component_8h" local="no">ui_component.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgui_1_1Point_a677fa630faa1316c95cd3a94977afd37_1a677fa630faa1316c95cd3a94977afd37" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int gui::Point::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>gui::Point::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="44" column="5" bodyfile="inc/ui_component.h" bodystart="44" bodyend="-1"/>
        <referencedby refid="classgui_1_1Component_a2a3301ec6a7bb715b8b9079220ed3b16_1a2a3301ec6a7bb715b8b9079220ed3b16" compoundref="ui__component_8cpp" startline="895" endline="900">gui::Component::move_relative</referencedby>
        <referencedby refid="classgui_1_1Component_a1ce262d68ca2217b57123b221ba373f8_1a1ce262d68ca2217b57123b221ba373f8" compoundref="ui__component_8cpp" startline="888" endline="893">gui::Component::move_to</referencedby>
        <referencedby refid="structgui_1_1Point_ae0e139e2ea1bc4f0188fcbff1f0fe4de_1ae0e139e2ea1bc4f0188fcbff1f0fe4de" compoundref="ui__component_8h" startline="54" endline="57">operator std::pair&lt; const int, const int &gt;</referencedby>
        <referencedby refid="structgui_1_1Point_a1b9e62ee0ec01f4ed7543cd2abc21589_1a1b9e62ee0ec01f4ed7543cd2abc21589" compoundref="ui__component_8h" startline="64" endline="67">operator std::pair&lt; int, int &gt;</referencedby>
        <referencedby refid="structgui_1_1Point_ad5a86b35fd67ff2381596edd8789dd9b_1ad5a86b35fd67ff2381596edd8789dd9b" compoundref="ui__component_8h" startline="59" endline="62">operator std::pair&lt; int, int &gt;</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structgui_1_1Point_aca01cee90109dda4fd8a0ed70b777fb9_1aca01cee90109dda4fd8a0ed70b777fb9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int gui::Point::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>gui::Point::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="45" column="5" bodyfile="inc/ui_component.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="classgui_1_1Component_a2a3301ec6a7bb715b8b9079220ed3b16_1a2a3301ec6a7bb715b8b9079220ed3b16" compoundref="ui__component_8cpp" startline="895" endline="900">gui::Component::move_relative</referencedby>
        <referencedby refid="classgui_1_1Component_a1ce262d68ca2217b57123b221ba373f8_1a1ce262d68ca2217b57123b221ba373f8" compoundref="ui__component_8cpp" startline="888" endline="893">gui::Component::move_to</referencedby>
        <referencedby refid="structgui_1_1Point_ae0e139e2ea1bc4f0188fcbff1f0fe4de_1ae0e139e2ea1bc4f0188fcbff1f0fe4de" compoundref="ui__component_8h" startline="54" endline="57">operator std::pair&lt; const int, const int &gt;</referencedby>
        <referencedby refid="structgui_1_1Point_a1b9e62ee0ec01f4ed7543cd2abc21589_1a1b9e62ee0ec01f4ed7543cd2abc21589" compoundref="ui__component_8h" startline="64" endline="67">operator std::pair&lt; int, int &gt;</referencedby>
        <referencedby refid="structgui_1_1Point_ad5a86b35fd67ff2381596edd8789dd9b_1ad5a86b35fd67ff2381596edd8789dd9b" compoundref="ui__component_8h" startline="59" endline="62">operator std::pair&lt; int, int &gt;</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structgui_1_1Point_af770488f0101d6f2b6776584af7ec950_1af770488f0101d6f2b6776584af7ec950" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gui::Point::Point</definition>
        <argsstring>(const int x, const int y)</argsstring>
        <name>Point</name>
        <qualifiedname>gui::Point::Point</qualifiedname>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="47" column="1" bodyfile="inc/ui_component.h" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structgui_1_1Point_ae0e139e2ea1bc4f0188fcbff1f0fe4de_1ae0e139e2ea1bc4f0188fcbff1f0fe4de" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>gui::Point::operator std::pair&lt; const int, const int &gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator std::pair&lt; const int, const int &gt;</name>
        <qualifiedname>gui::Point::pair&lt; const int, const int &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="54" column="1" bodyfile="inc/ui_component.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structgui_1_1Point_ad5a86b35fd67ff2381596edd8789dd9b_1ad5a86b35fd67ff2381596edd8789dd9b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>gui::Point::operator std::pair&lt; int, int &gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator std::pair&lt; int, int &gt;</name>
        <qualifiedname>gui::Point::pair&lt; int, int &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="59" column="1" bodyfile="inc/ui_component.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structgui_1_1Point_a1b9e62ee0ec01f4ed7543cd2abc21589_1a1b9e62ee0ec01f4ed7543cd2abc21589" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gui::Point::operator std::pair&lt; int, int &gt;</definition>
        <argsstring>()</argsstring>
        <name>operator std::pair&lt; int, int &gt;</name>
        <qualifiedname>gui::Point::pair&lt; int, int &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/ui_component.h" line="64" column="1" bodyfile="inc/ui_component.h" bodystart="64" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>UI code uses snake-case. </para>
    </briefdescription>
    <detaileddescription>
<para>non-UI code uses pascal-case </para>
    </detaileddescription>
    <location file="inc/ui_component.h" line="42" column="1" bodyfile="inc/ui_component.h" bodystart="43" bodyend="68"/>
    <listofallmembers>
      <member refid="structgui_1_1Point_ae0e139e2ea1bc4f0188fcbff1f0fe4de_1ae0e139e2ea1bc4f0188fcbff1f0fe4de" prot="public" virt="non-virtual"><scope>gui::Point</scope><name>operator std::pair&lt; const int, const int &gt;</name></member>
      <member refid="structgui_1_1Point_ad5a86b35fd67ff2381596edd8789dd9b_1ad5a86b35fd67ff2381596edd8789dd9b" prot="public" virt="non-virtual"><scope>gui::Point</scope><name>operator std::pair&lt; int, int &gt;</name></member>
      <member refid="structgui_1_1Point_a1b9e62ee0ec01f4ed7543cd2abc21589_1a1b9e62ee0ec01f4ed7543cd2abc21589" prot="public" virt="non-virtual"><scope>gui::Point</scope><name>operator std::pair&lt; int, int &gt;</name></member>
      <member refid="structgui_1_1Point_af770488f0101d6f2b6776584af7ec950_1af770488f0101d6f2b6776584af7ec950" prot="public" virt="non-virtual"><scope>gui::Point</scope><name>Point</name></member>
      <member refid="structgui_1_1Point_a677fa630faa1316c95cd3a94977afd37_1a677fa630faa1316c95cd3a94977afd37" prot="public" virt="non-virtual"><scope>gui::Point</scope><name>x</name></member>
      <member refid="structgui_1_1Point_aca01cee90109dda4fd8a0ed70b777fb9_1aca01cee90109dda4fd8a0ed70b777fb9" prot="public" virt="non-virtual"><scope>gui::Point</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
