<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classcon_1_1CookedLayout" kind="class" language="C++" prot="public" final="yes">
    <compoundname>con::CookedLayout</compoundname>
    <basecompoundref refid="classcon_1_1CBLayout" prot="public" virt="non-virtual">con::CBLayout</basecompoundref>
    <includes refid="dynamic__constant__buffer_8h" local="no">dynamic_constant_buffer.h</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classcon_1_1CookedLayout_a87b6f773d0354ee3da4e455c08002867_1a87b6f773d0354ee3da4e455c08002867" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class LayoutMap</definition>
        <argsstring></argsstring>
        <name>LayoutMap</name>
        <qualifiedname>con::CookedLayout::LayoutMap</qualifiedname>
        <param>
          <type><ref refid="classcon_1_1LayoutMap" kindref="compound">LayoutMap</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="319" column="14" bodyfile="inc/dynamic_constant_buffer.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classcon_1_1CookedLayout_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class CBuffer</definition>
        <argsstring></argsstring>
        <name>CBuffer</name>
        <qualifiedname>con::CookedLayout::CBuffer</qualifiedname>
        <param>
          <type><ref refid="classcon_1_1CBuffer" kindref="compound">CBuffer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="320" column="14" bodyfile="inc/dynamic_constant_buffer.h" bodystart="320" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcon_1_1CookedLayout_a90482e087f47f63b9192b95aa65708aa_1a90482e087f47f63b9192b95aa65708aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref> &amp;</type>
        <definition>const CBElement &amp; con::CookedLayout::operator[]</definition>
        <argsstring>(const std::string &amp;key) const cond_noex</argsstring>
        <name>operator[]</name>
        <qualifiedname>con::CookedLayout::operator[]</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>key into the root Struct (const to disable mutation of the layout) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="323" column="17" bodyfile="src/dynamic_constant_buffer.cpp" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classcon_1_1CookedLayout_a63181de6561e0352754e70caa846a317_1a63181de6561e0352754e70caa846a317" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref> &gt;</type>
        <definition>std::shared_ptr&lt; CBElement &gt; con::CookedLayout::shareRootElement</definition>
        <argsstring>() const noexcept</argsstring>
        <name>shareRootElement</name>
        <qualifiedname>con::CookedLayout::shareRootElement</qualifiedname>
        <briefdescription>
<para>get a share on layout tree root </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="325" column="17" bodyfile="src/dynamic_constant_buffer.cpp" bodystart="327" bodyend="330"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classcon_1_1CookedLayout_a9f8a9a44e6b46194f1d2f2f82183a40e_1a9f8a9a44e6b46194f1d2f2f82183a40e" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>con::CookedLayout::CookedLayout</definition>
        <argsstring>(std::shared_ptr&lt; CBElement &gt; pRoot) noexcept</argsstring>
        <name>CookedLayout</name>
        <qualifiedname>con::CookedLayout::CookedLayout</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref> &gt;</type>
          <declname>pRoot</declname>
        </param>
        <briefdescription>
<para>this ctor used by <ref refid="classBindableRegistry" kindref="compound">BindableRegistry</ref> to return cooked layouts </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="328" column="1" bodyfile="src/dynamic_constant_buffer.cpp" bodystart="315" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classcon_1_1CookedLayout_a2098dd9315a3d69a99cec5ff847f382c_1a2098dd9315a3d69a99cec5ff847f382c" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classcon_1_1CBElement" kindref="compound">CBElement</ref> &gt;</type>
        <definition>std::shared_ptr&lt; CBElement &gt; con::CookedLayout::relinquishRoot</definition>
        <argsstring>() noexcept</argsstring>
        <name>relinquishRoot</name>
        <qualifiedname>con::CookedLayout::relinquishRoot</qualifiedname>
        <briefdescription>
<para>use to pilfer the layout tree </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_constant_buffer.h" line="330" column="17" bodyfile="src/dynamic_constant_buffer.cpp" bodystart="322" bodyend="325"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="classcon_1_1CookedLayout" kindref="compound">CookedLayout</ref> represents a completed and registered <ref refid="classcon_1_1CBLayout" kindref="compound">CBLayout</ref> shell object. </para>
    </briefdescription>
    <detaileddescription>
<para>=============================================================</para>
<para><simplesect kind="author"><para>KeyC0de </para>
</simplesect>
<simplesect kind="date"><para>2022/08/21 19:51 <heading level="1">layout tree is fixed </heading>
</para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>con::CBLayout</label>
        <link refid="classcon_1_1CBLayout"/>
      </node>
      <node id="1">
        <label>con::CookedLayout</label>
        <link refid="classcon_1_1CookedLayout"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>con::CBLayout</label>
        <link refid="classcon_1_1CBLayout"/>
      </node>
      <node id="1">
        <label>con::CookedLayout</label>
        <link refid="classcon_1_1CookedLayout"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/dynamic_constant_buffer.h" line="316" column="1" bodyfile="inc/dynamic_constant_buffer.h" bodystart="318" bodyend="331"/>
    <listofallmembers>
      <member refid="classcon_1_1CBLayout_ad0f25a176e697cb4a7c8a2bc938ea909_1ad0f25a176e697cb4a7c8a2bc938ea909" prot="public" virt="non-virtual"><scope>con::CookedLayout</scope><name>calcSignature</name></member>
      <member refid="classcon_1_1CBLayout_a9b04357032146c78e74cce1e9843a788_1a9b04357032146c78e74cce1e9843a788" prot="protected" virt="non-virtual"><scope>con::CookedLayout</scope><name>CBLayout</name></member>
      <member refid="classcon_1_1CookedLayout_a7c5d2ec80c60f2e00fb000cbb6889351_1a7c5d2ec80c60f2e00fb000cbb6889351" prot="private" virt="non-virtual"><scope>con::CookedLayout</scope><name>CBuffer</name></member>
      <member refid="classcon_1_1CookedLayout_a9f8a9a44e6b46194f1d2f2f82183a40e_1a9f8a9a44e6b46194f1d2f2f82183a40e" prot="private" virt="non-virtual"><scope>con::CookedLayout</scope><name>CookedLayout</name></member>
      <member refid="classcon_1_1CBLayout_a38fe5d51ff565b2f6089861086125341_1a38fe5d51ff565b2f6089861086125341" prot="public" virt="non-virtual"><scope>con::CookedLayout</scope><name>getSizeInBytes</name></member>
      <member refid="classcon_1_1CookedLayout_a87b6f773d0354ee3da4e455c08002867_1a87b6f773d0354ee3da4e455c08002867" prot="private" virt="non-virtual"><scope>con::CookedLayout</scope><name>LayoutMap</name></member>
      <member refid="classcon_1_1CBLayout_a0b1d411cd40cd4aed65e330a385a03f2_1a0b1d411cd40cd4aed65e330a385a03f2" prot="protected" virt="non-virtual"><scope>con::CookedLayout</scope><name>m_pLayoutRoot</name></member>
      <member refid="classcon_1_1CookedLayout_a90482e087f47f63b9192b95aa65708aa_1a90482e087f47f63b9192b95aa65708aa" prot="public" virt="non-virtual"><scope>con::CookedLayout</scope><name>operator[]</name></member>
      <member refid="classcon_1_1CookedLayout_a2098dd9315a3d69a99cec5ff847f382c_1a2098dd9315a3d69a99cec5ff847f382c" prot="private" virt="non-virtual"><scope>con::CookedLayout</scope><name>relinquishRoot</name></member>
      <member refid="classcon_1_1CookedLayout_a63181de6561e0352754e70caa846a317_1a63181de6561e0352754e70caa846a317" prot="public" virt="non-virtual"><scope>con::CookedLayout</scope><name>shareRootElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
