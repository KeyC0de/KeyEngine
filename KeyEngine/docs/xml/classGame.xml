<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classGame" kind="class" language="C++" prot="public">
    <compoundname>Game</compoundname>
    <basecompoundref refid="classNonCopyableAndNonMovable" prot="public" virt="non-virtual">NonCopyableAndNonMovable</basecompoundref>
    <includes refid="game_8h" local="no">game.h</includes>
    <innerclass refid="classGame_1_1GameException" prot="private">Game::GameException</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classGame_aa2ff10aa0692ef22b70af2acebaa2888_1aa2ff10aa0692ef22b70af2acebaa2888" prot="protected" static="yes" mutable="no">
        <type>unsigned</type>
        <definition>unsigned Game&lt; T &gt;::s_nWindows</definition>
        <argsstring></argsstring>
        <name>s_nWindows</name>
        <qualifiedname>Game::s_nWindows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="60" column="24" bodyfile="inc/game.h" bodystart="60" bodyend="-1"/>
        <referencedby refid="classGame_ab829358e04b5eb1b8937db2a8683c3a0_1ab829358e04b5eb1b8937db2a8683c3a0" compoundref="game_8cpp" startline="35" endline="50">Game&lt; T &gt;::Game</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGame_a1c1d1b4e98b065c0f48922219c1a84e1_1a1c1d1b4e98b065c0f48922219c1a84e1" prot="protected" static="yes" mutable="no">
        <type><ref refid="classSettingsManager" kindref="compound">SettingsManager</ref> &amp;</type>
        <definition>SettingsManager&amp; Game&lt; T &gt;::s_settingsMan</definition>
        <argsstring></argsstring>
        <name>s_settingsMan</name>
        <qualifiedname>Game::s_settingsMan</qualifiedname>
        <initializer>= <ref refid="classSettingsManager_a92617e378ef941b075dd8343d283bd00_1a92617e378ef941b075dd8343d283bd00" kindref="member">SettingsManager::getInstance</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="61" column="31" bodyfile="inc/game.h" bodystart="61" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classGame_ac451f6e710b03424d58f2dba8cd4c74e_1ac451f6e710b03424d58f2dba8cd4c74e" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structImguiManager" kindref="compound">ImguiManager</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ImguiManager&gt; Game&lt; T &gt;::m_pImguiMan</definition>
        <argsstring></argsstring>
        <name>m_pImguiMan</name>
        <qualifiedname>Game::m_pImguiMan</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="63" column="17" bodyfile="inc/game.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_ab87c228ca9edcbc171aed5b0ffb2591a_1ab87c228ca9edcbc171aed5b0ffb2591a" prot="protected" static="no" mutable="no">
        <type><ref refid="classWindow" kindref="compound">Window</ref></type>
        <definition>Window Game&lt; T &gt;::m_mainWindow</definition>
        <argsstring></argsstring>
        <name>m_mainWindow</name>
        <qualifiedname>Game::m_mainWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="65" column="8" bodyfile="inc/game.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_aeaba4177ff106b819b2e02030a50a301_1aeaba4177ff106b819b2e02030a50a301" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classState" kindref="compound">State</ref> &gt;</type>
        <definition>std::unique_ptr&lt;State&gt; Game&lt; T &gt;::m_pCurrentState</definition>
        <argsstring></argsstring>
        <name>m_pCurrentState</name>
        <qualifiedname>Game::m_pCurrentState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="66" column="17" bodyfile="inc/game.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGame_a3953acd0d7eec863ee8f0cdda2e7a98d_1a3953acd0d7eec863ee8f0cdda2e7a98d" prot="protected" static="no" mutable="no">
        <type><ref refid="classKeyTimer" kindref="compound">KeyTimer</ref>&lt; std::chrono::milliseconds &gt;</type>
        <definition>KeyTimer&lt;std::chrono::milliseconds&gt; Game&lt; T &gt;::m_gameTimer</definition>
        <argsstring></argsstring>
        <name>m_gameTimer</name>
        <qualifiedname>Game::m_gameTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="67" column="10" bodyfile="inc/game.h" bodystart="67" bodyend="-1"/>
        <referencedby refid="classGame_ab829358e04b5eb1b8937db2a8683c3a0_1ab829358e04b5eb1b8937db2a8683c3a0" compoundref="game_8cpp" startline="35" endline="50">Game&lt; T &gt;::Game</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classGame_a547ff08a0fddf3db2a4ab881c2bc1915_1a547ff08a0fddf3db2a4ab881c2bc1915" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Game&lt; T &gt;::~Game</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~Game</name>
        <qualifiedname>Game::~Game</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="69" column="1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classGame_ab829358e04b5eb1b8937db2a8683c3a0_1ab829358e04b5eb1b8937db2a8683c3a0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Game&lt; T &gt;::Game</definition>
        <argsstring>(const int width, const int height, const std::string &amp;title, const int x, const int y, const unsigned nWindows=1)</argsstring>
        <name>Game</name>
        <qualifiedname>Game::Game</qualifiedname>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>nWindows</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="72" column="1" bodyfile="src/game.cpp" bodystart="35" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classGame_a5703dfb57ce49ecfc644b9be76a65fa2_1a5703dfb57ce49ecfc644b9be76a65fa2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game&lt; T &gt;::present</definition>
        <argsstring>(Graphics &amp;gfx)</argsstring>
        <name>present</name>
        <qualifiedname>Game::present</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <briefdescription>
<para>all child Games must run this function as the very last statement in their render function </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="75" column="6" bodyfile="src/game.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classGame_ad133bee3b79c89041c99b31c0110e9cc_1ad133bee3b79c89041c99b31c0110e9cc" prot="protected" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classWindow" kindref="compound">Window</ref> * &gt;</type>
        <definition>std::optional&lt; Window * &gt; Game&lt; T &gt;::getForegroundWindow</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getForegroundWindow</name>
        <qualifiedname>Game::getForegroundWindow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="76" column="15" bodyfile="src/game.cpp" bodystart="70" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classGame_a009cd108bf259503079139f647cec4d5_1a009cd108bf259503079139f647cec4d5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Game&lt; T &gt;::setState</definition>
        <argsstring>(std::unique_ptr&lt; State &gt; pNewState, Mouse &amp;mouse)</argsstring>
        <name>setState</name>
        <qualifiedname>Game::setState</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classState" kindref="compound">State</ref> &gt;</type>
          <declname>pNewState</declname>
        </param>
        <param>
          <type><ref refid="classMouse" kindref="compound">Mouse</ref> &amp;</type>
          <declname>mouse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="77" column="6" bodyfile="src/game.cpp" bodystart="86" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classGame_a497f6988307db84ef1445f662c0fb1cd_1a497f6988307db84ef1445f662c0fb1cd" prot="protected" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classState" kindref="compound">State</ref> *</type>
        <definition>const State * Game&lt; T &gt;::getState</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getState</name>
        <qualifiedname>Game::getState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="78" column="13" bodyfile="src/game.cpp" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classGame_aa09bb3f51206f2ef0f28453c43cd449a_1aa09bb3f51206f2ef0f28453c43cd449a" prot="protected" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classState" kindref="compound">State</ref> *</type>
        <definition>State * Game&lt; T &gt;::getState</definition>
        <argsstring>() noexcept</argsstring>
        <name>getState</name>
        <qualifiedname>Game::getState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="79" column="7" bodyfile="src/game.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classGame_a9716d4a268c77574e00b289827b46d65_1a9716d4a268c77574e00b289827b46d65" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="structImguiManager" kindref="compound">ImguiManager</ref> *</type>
        <definition>ImguiManager * Game&lt; T &gt;::createImguiManager</definition>
        <argsstring>() noexcept</argsstring>
        <name>createImguiManager</name>
        <qualifiedname>Game::createImguiManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/game.h" line="81" column="14" bodyfile="src/game.cpp" bodystart="53" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>contains the main game loop, the <ref refid="classWindow" kindref="compound">Window</ref> and the #TODO: Worlds - each <ref refid="classWorld" kindref="compound">World</ref> is a graphical scene/map to be loaded at a time  </para>
    </briefdescription>
    <detaileddescription>
<para>=============================================================</para>
<para><simplesect kind="author"><para>KeyC0de </para>
</simplesect>
<simplesect kind="date"><para>2020/01/21 14:25 <heading level="1"></heading>
</para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Game&lt; T &gt;</label>
        <link refid="classGame"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NonCopyableAndNonMovable</label>
        <link refid="classNonCopyableAndNonMovable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Game&lt; T &gt;</label>
        <link refid="classGame"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>s_settingsMan</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_mainWindow</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_gameTimer</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>KeyTimer&lt; std::chrono::milliseconds &gt;</label>
        <link refid="classKeyTimer"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Keyboard</label>
        <link refid="classKeyboard"/>
        <childnode refid="4" relation="private-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Mouse</label>
        <link refid="classMouse"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>NonCopyable</label>
        <link refid="classNonCopyable"/>
      </node>
      <node id="2">
        <label>NonCopyableAndNonMovable</label>
        <link refid="classNonCopyableAndNonMovable"/>
      </node>
      <node id="3">
        <label>SettingsManager</label>
        <link refid="classSettingsManager"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_settings</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>SettingsManager::Settings</label>
        <link refid="structSettingsManager_1_1Settings"/>
      </node>
      <node id="6">
        <label>Window</label>
        <link refid="classWindow"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>s_keyboard</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>s_mouse</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>s_pBoxLocalClip</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_windowClass</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>Window::WindowClass</label>
        <link refid="classWindow_1_1WindowClass"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>tagLABELBOX</label>
        <link refid="structtagLABELBOX"/>
      </node>
    </collaborationgraph>
    <location file="inc/game.h" line="47" column="1" bodyfile="inc/game.h" bodystart="49" bodyend="82"/>
    <listofallmembers>
      <member refid="classGame_a9716d4a268c77574e00b289827b46d65_1a9716d4a268c77574e00b289827b46d65" prot="private" virt="non-virtual"><scope>Game</scope><name>createImguiManager</name></member>
      <member refid="classGame_ab829358e04b5eb1b8937db2a8683c3a0_1ab829358e04b5eb1b8937db2a8683c3a0" prot="protected" virt="non-virtual"><scope>Game</scope><name>Game</name></member>
      <member refid="classGame_ad133bee3b79c89041c99b31c0110e9cc_1ad133bee3b79c89041c99b31c0110e9cc" prot="protected" virt="non-virtual"><scope>Game</scope><name>getForegroundWindow</name></member>
      <member refid="classGame_a497f6988307db84ef1445f662c0fb1cd_1a497f6988307db84ef1445f662c0fb1cd" prot="protected" virt="non-virtual"><scope>Game</scope><name>getState</name></member>
      <member refid="classGame_aa09bb3f51206f2ef0f28453c43cd449a_1aa09bb3f51206f2ef0f28453c43cd449a" prot="protected" virt="non-virtual"><scope>Game</scope><name>getState</name></member>
      <member refid="classGame_a3953acd0d7eec863ee8f0cdda2e7a98d_1a3953acd0d7eec863ee8f0cdda2e7a98d" prot="protected" virt="non-virtual"><scope>Game</scope><name>m_gameTimer</name></member>
      <member refid="classGame_ab87c228ca9edcbc171aed5b0ffb2591a_1ab87c228ca9edcbc171aed5b0ffb2591a" prot="protected" virt="non-virtual"><scope>Game</scope><name>m_mainWindow</name></member>
      <member refid="classGame_aeaba4177ff106b819b2e02030a50a301_1aeaba4177ff106b819b2e02030a50a301" prot="protected" virt="non-virtual"><scope>Game</scope><name>m_pCurrentState</name></member>
      <member refid="classGame_ac451f6e710b03424d58f2dba8cd4c74e_1ac451f6e710b03424d58f2dba8cd4c74e" prot="protected" virt="non-virtual"><scope>Game</scope><name>m_pImguiMan</name></member>
      <member refid="classNonCopyableAndNonMovable_a0f3fc95f2c582514d58832b7c14d2965_1a0f3fc95f2c582514d58832b7c14d2965" prot="public" virt="non-virtual"><scope>Game</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_a3502311a2435129e171eb36ba05f0b2f_1a3502311a2435129e171eb36ba05f0b2f" prot="public" virt="non-virtual"><scope>Game</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_a259655d15f1887d015c6d77a0f09f4ff_1a259655d15f1887d015c6d77a0f09f4ff" prot="public" virt="non-virtual"><scope>Game</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_acadc47621b689b1b95bef13a35f18572_1acadc47621b689b1b95bef13a35f18572" prot="public" virt="non-virtual"><scope>Game</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_a6541862f56b2fcaa89155f08b8adaf11_1a6541862f56b2fcaa89155f08b8adaf11" prot="public" virt="non-virtual"><scope>Game</scope><name>operator=</name></member>
      <member refid="classNonCopyableAndNonMovable_aa3af41edbd14c886cdec335b22254829_1aa3af41edbd14c886cdec335b22254829" prot="public" virt="non-virtual"><scope>Game</scope><name>operator=</name></member>
      <member refid="classNonCopyableAndNonMovable_a972632a389e0f2370de9604df60ea9d6_1a972632a389e0f2370de9604df60ea9d6" prot="public" virt="non-virtual"><scope>Game</scope><name>operator=</name></member>
      <member refid="classGame_a5703dfb57ce49ecfc644b9be76a65fa2_1a5703dfb57ce49ecfc644b9be76a65fa2" prot="protected" virt="non-virtual"><scope>Game</scope><name>present</name></member>
      <member refid="classGame_aa2ff10aa0692ef22b70af2acebaa2888_1aa2ff10aa0692ef22b70af2acebaa2888" prot="protected" virt="non-virtual"><scope>Game</scope><name>s_nWindows</name></member>
      <member refid="classGame_a1c1d1b4e98b065c0f48922219c1a84e1_1a1c1d1b4e98b065c0f48922219c1a84e1" prot="protected" virt="non-virtual"><scope>Game</scope><name>s_settingsMan</name></member>
      <member refid="classGame_a009cd108bf259503079139f647cec4d5_1a009cd108bf259503079139f647cec4d5" prot="protected" virt="non-virtual"><scope>Game</scope><name>setState</name></member>
      <member refid="classGame_a547ff08a0fddf3db2a4ab881c2bc1915_1a547ff08a0fddf3db2a4ab881c2bc1915" prot="public" virt="non-virtual"><scope>Game</scope><name>~Game</name></member>
      <member refid="classNonCopyableAndNonMovable_aa6874bb9a99fe151e8c2eda429fe5867_1aa6874bb9a99fe151e8c2eda429fe5867" prot="protected" virt="non-virtual"><scope>Game</scope><name>~NonCopyableAndNonMovable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
