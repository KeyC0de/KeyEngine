<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="SHADOW__PASS_8CPP" kind="file" language="C++">
    <compoundname>SHADOW_PASS.CPP</compoundname>
    <includes refid="shadow__pass_8h" local="yes">shadow_pass.h</includes>
    <includes refid="graphics_8h" local="yes">graphics.h</includes>
    <includes refid="linker_8h" local="yes">linker.h</includes>
    <includes refid="vertex__shader_8h" local="yes">vertex_shader.h</includes>
    <includes refid="pixel__shader_8h" local="yes">pixel_shader.h</includes>
    <includes refid="depth__stencil__state_8h" local="yes">depth_stencil_state.h</includes>
    <includes refid="rasterizer__state_8h" local="yes">rasterizer_state.h</includes>
    <includes refid="texture_8h" local="yes">texture.h</includes>
    <includes refid="cube__texture_8h" local="yes">cube_texture.h</includes>
    <includes refid="camera_8h" local="yes">camera.h</includes>
    <includes refid="math__utils_8h" local="yes">math_utils.h</includes>
    <includes refid="texture__desc_8h" local="yes">texture_desc.h</includes>
    <includes refid="texture__sampler__state_8h" local="yes">texture_sampler_state.h</includes>
    <includes refid="blend__state_8h" local="yes">blend_state.h</includes>
    <includes refid="settings__manager_8h" local="yes">settings_manager.h</includes>
    <includes refid="global__constants_8h" local="yes">global_constants.h</includes>
    <includes refid="renderer__exception_8h" local="yes">renderer_exception.h</includes>
    <incdepgraph>
      <node id="22">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>bindable.h</label>
        <link refid="bindable_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>bindable_pass.h</label>
        <link refid="bindable__pass_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>bindable_registry.h</label>
        <link refid="bindable__registry_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>binder.h</label>
        <link refid="binder_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>bitmap.h</label>
        <link refid="bitmap_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>blend_state.h</label>
        <link refid="blend__state_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="47">
        <label>console.h</label>
        <link refid="console_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>constant_buffer.h</label>
        <link refid="constant__buffer_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>cube_texture.h</label>
        <link refid="cube__texture_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>depth_stencil_state.h</label>
        <link refid="depth__stencil__state_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>depth_stencil_view.h</label>
        <link refid="depth__stencil__view_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>dxgi_info_queue.h</label>
        <link refid="dxgi__info__queue_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>global_constants.h</label>
        <link refid="global__constants_8h"/>
      </node>
      <node id="41">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>graphics_friend.h</label>
        <link refid="graphics__friend_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>imgui_visitors.h</label>
        <link refid="imgui__visitors_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>job.h</label>
        <link refid="job_8h"/>
      </node>
      <node id="17">
        <label>key_exception.h</label>
        <link refid="key__exception_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>key_timer.h</label>
        <link refid="key__timer_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>key_type_traits.h</label>
        <link refid="key__type__traits_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>key_wrl.h</label>
        <link refid="key__wrl_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>light_source.h</label>
        <link refid="light__source_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>linker.h</label>
        <link refid="linker_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>math_utils.h</label>
        <link refid="math__utils_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="68">
        <label>os_utils.h</label>
        <link refid="os__utils_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>pass.h</label>
        <link refid="pass_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>pixel_shader.h</label>
        <link refid="pixel__shader_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>rasterizer_state.h</label>
        <link refid="rasterizer__state_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>render_queue_pass.h</label>
        <link refid="render__queue__pass_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>render_surface.h</label>
        <link refid="render__surface_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>render_target.h</label>
        <link refid="render__target_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>renderer_exception.h</label>
        <link refid="renderer__exception_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>rendering_channel.h</label>
        <link refid="rendering__channel_8h"/>
      </node>
      <node id="92">
        <label>settings_manager.h</label>
        <link refid="settings__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>shadow_pass.h</label>
        <link refid="shadow__pass_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>texture.h</label>
        <link refid="texture_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>texture_desc.h</label>
        <link refid="texture__desc_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>texture_sampler_state.h</label>
        <link refid="texture__sampler__state_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>utils_global.h</label>
        <link refid="utils__global_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>vertex_shader.h</label>
        <link refid="vertex__shader_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/SHADOW_PASS.CPP</label>
        <link refid="SHADOW__PASS_8CPP"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>DirectXMath.h</label>
      </node>
      <node id="35">
        <label>DirectxMath.h</label>
      </node>
      <node id="73">
        <label>ShlObj.h</label>
      </node>
      <node id="34">
        <label>Windows.h</label>
      </node>
      <node id="59">
        <label>algorithm</label>
      </node>
      <node id="10">
        <label>array</label>
      </node>
      <node id="55">
        <label>bitset</label>
      </node>
      <node id="46">
        <label>chrono</label>
      </node>
      <node id="57">
        <label>cinttypes</label>
      </node>
      <node id="49">
        <label>cmath</label>
      </node>
      <node id="70">
        <label>comdef.h</label>
      </node>
      <node id="56">
        <label>cstddef</label>
      </node>
      <node id="50">
        <label>cstdint</label>
      </node>
      <node id="21">
        <label>d3d11.h</label>
      </node>
      <node id="43">
        <label>d3dcompiler.h</label>
      </node>
      <node id="42">
        <label>dxgi1_4.h</label>
      </node>
      <node id="76">
        <label>dxgidebug.h</label>
      </node>
      <node id="36">
        <label>dxtex/DirectXTex.h</label>
      </node>
      <node id="63">
        <label>execution</label>
      </node>
      <node id="80">
        <label>filesystem</label>
      </node>
      <node id="72">
        <label>functional</label>
      </node>
      <node id="58">
        <label>future</label>
      </node>
      <node id="51">
        <label>iomanip</label>
      </node>
      <node id="23">
        <label>iostream</label>
      </node>
      <node id="61">
        <label>iterator</label>
      </node>
      <node id="52">
        <label>limits</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="60">
        <label>numeric</label>
      </node>
      <node id="26">
        <label>optional</label>
      </node>
      <node id="62">
        <label>regex</label>
      </node>
      <node id="33">
        <label>sdkddkver.h</label>
      </node>
      <node id="54">
        <label>set</label>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="18">
        <label>stdexcept</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="93">
        <label>string_view</label>
      </node>
      <node id="45">
        <label>thread</label>
      </node>
      <node id="71">
        <label>tlhelp32.h</label>
      </node>
      <node id="13">
        <label>type_traits</label>
      </node>
      <node id="12">
        <label>typeinfo</label>
      </node>
      <node id="67">
        <label>unordered_map</label>
      </node>
      <node id="78">
        <label>variant</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="74">
        <label>wincred.h</label>
      </node>
      <node id="69">
        <label>winternl.h</label>
      </node>
      <node id="28">
        <label>wrl.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceren">ren</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shadow__pass_8h" kindref="compound">shadow_pass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graphics_8h" kindref="compound">graphics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linker_8h" kindref="compound">linker.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vertex__shader_8h" kindref="compound">vertex_shader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pixel__shader_8h" kindref="compound">pixel_shader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="depth__stencil__state_8h" kindref="compound">depth_stencil_state.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rasterizer__state_8h" kindref="compound">rasterizer_state.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texture_8h" kindref="compound">texture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cube__texture_8h" kindref="compound">cube_texture.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="camera_8h" kindref="compound">camera.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="math__utils_8h" kindref="compound">math_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texture__desc_8h" kindref="compound">texture_desc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="texture__sampler__state_8h" kindref="compound">texture_sampler_state.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blend__state_8h" kindref="compound">blend_state.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="settings__manager_8h" kindref="compound">settings_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="global__constants_8h" kindref="compound">global_constants.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="renderer__exception_8h" kindref="compound">renderer_exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;<ref refid="d3d__utils_8h" kindref="compound">d3d_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceren" kindref="compound">ren</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classren_1_1ShadowPass_abe2e960e1ee7226dc547ac67616aecc1_1abe2e960e1ee7226dc547ac67616aecc1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classren_1_1ShadowPass_abe2e960e1ee7226dc547ac67616aecc1_1abe2e960e1ee7226dc547ac67616aecc1" kindref="member">ren::ShadowPass::getResolution</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_shadowMapResolution;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classren_1_1ShadowPass_a89e7feb05baff9858c8b91edcb5a5d51_1a89e7feb05baff9858c8b91edcb5a5d51" refkind="member"><highlight class="normal"><ref refid="classren_1_1ShadowPass_a89e7feb05baff9858c8b91edcb5a5d51_1a89e7feb05baff9858c8b91edcb5a5d51" kindref="member">ShadowPass::ShadowPass</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>shadowMapRez<sp/>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1RenderQueuePass" kindref="compound">RenderQueuePass</ref>{name},</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>m_globalsVscb{gfx,<sp/>s_globalsVscbSlot},</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>m_globalsPscb{gfx,<sp/>s_globalsPscbSlot},</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vscb{gfx,<sp/>s_lightArrayVertexShaderCBSlot},</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pscb{gfx,<sp/>s_lightArrayPixelShaderCBSlot}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref><sp/>=<sp/>shadowMapRez;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IBindablePass_af7205f7049013c5d02ec74952f5a0d05_1af7205f7049013c5d02ec74952f5a0d05" kindref="member">addBindable</ref>(<sp/><ref refid="classBlendState_aa27898f671e468ccc0c397dc297f6891_1aa27898f671e468ccc0c397dc297f6891" kindref="member">BlendState::fetch</ref>(<sp/>gfx,<sp/><ref refid="classBlendState_a97c6194868baa55cdcf8e6440357936e_1a97c6194868baa55cdcf8e6440357936ea88d24e12f11fcf30e7645cd90307ae76" kindref="member">BlendState::Mode::NoBlend</ref>,<sp/>0u<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IBindablePass_af7205f7049013c5d02ec74952f5a0d05_1af7205f7049013c5d02ec74952f5a0d05" kindref="member">addBindable</ref>(<sp/><ref refid="classTextureSamplerState_a6377e3c13f22788c7df198a89776f233_1a6377e3c13f22788c7df198a89776f233" kindref="member">TextureSamplerState::fetch</ref>(<sp/>gfx,<sp/><ref refid="classTextureSamplerState_a09f125be8b09c0e4562055300b70c101_1a09f125be8b09c0e4562055300b70c101adb49d15ec9d8117b4164b0e3b6aebfe4" kindref="member">TextureSamplerState::TextureSamplerMode::ShadowTS</ref>,<sp/><ref refid="classTextureSamplerState_a522727e53ff60ae76a59306e75441049_1a522727e53ff60ae76a59306e75441049a39340849752ada4c8bf6d6e20470759b" kindref="member">TextureSamplerState::FilterMode::Trilinear</ref>,<sp/><ref refid="classTextureSamplerState_a04b3655d1fd4f84a73017e3f3fb17ba9_1a04b3655d1fd4f84a73017e3f3fb17ba9ac65b84de2c7efb43ce1457d5d5c2e18a" kindref="member">TextureSamplerState::AddressMode::Border</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IBindablePass_af7205f7049013c5d02ec74952f5a0d05_1af7205f7049013c5d02ec74952f5a0d05" kindref="member">addBindable</ref>(<sp/><ref refid="classVertexShader_ad90bf6654d053a4fe7a3c699acf6f4ff_1ad90bf6654d053a4fe7a3c699acf6f4ff" kindref="member">VertexShader::fetch</ref>(<sp/>gfx,<sp/></highlight><highlight class="stringliteral">&quot;shadow_vs.cso&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IBindablePass_af7205f7049013c5d02ec74952f5a0d05_1af7205f7049013c5d02ec74952f5a0d05" kindref="member">addBindable</ref>(<sp/><ref refid="classPixelShaderNull_a650873d59b5c1949727cd74e80c152ad_1a650873d59b5c1949727cd74e80c152ad" kindref="member">PixelShaderNull::fetch</ref>(<sp/>gfx<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IBindablePass_af7205f7049013c5d02ec74952f5a0d05_1af7205f7049013c5d02ec74952f5a0d05" kindref="member">addBindable</ref>(<sp/><ref refid="classDepthStencilState_af67a7f1edf6b2e62b08f5459347ecbda_1af67a7f1edf6b2e62b08f5459347ecbda" kindref="member">DepthStencilState::fetch</ref>(<sp/>gfx,<sp/><ref refid="classDepthStencilState_ae3acfd2942753b3352070caacb8a4bb6_1ae3acfd2942753b3352070caacb8a4bb6ac906ea2d19d25943d1b57f18b35f6e11" kindref="member">DepthStencilState::Mode::Default</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IBindablePass_af7205f7049013c5d02ec74952f5a0d05_1af7205f7049013c5d02ec74952f5a0d05" kindref="member">addBindable</ref>(<sp/><ref refid="classRasterizerState_ae33cba5eb6c008f927cb16e8c3c226f1_1ae33cba5eb6c008f927cb16e8c3c226f1" kindref="member">RasterizerState::fetch</ref>(<sp/>gfx,<sp/><ref refid="classRasterizerState_a3151107239aadcbe3426db7cce10f08e_1a3151107239aadcbe3426db7cce10f08ea5a676c4d329ae5a58522a88367522633" kindref="member">RasterizerState::RasterizerMode::ShadowRS</ref>,<sp/><ref refid="classRasterizerState_ab64eb708d2b58194806f2bee4f93dd65_1ab64eb708d2b58194806f2bee4f93dd65a816d9b64ac288103c37d263f3b2113cf" kindref="member">RasterizerState::FillMode::Solid</ref>,<sp/><ref refid="classRasterizerState_aeaf96eb61bdc4f7e17fe5c351a090891_1aeaf96eb61bdc4f7e17fe5c351a090891ac3b808e9b6b703082096f4da97d5d401" kindref="member">RasterizerState::FaceMode::Front</ref>,<sp/>50,<sp/>2.0f,<sp/>0.1f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IPass_aa9c50563c1bd98e1c377d819d9e2dc09_1aa9c50563c1bd98e1c377d819d9e2dc09" kindref="member">addLinker</ref>(<sp/><ref refid="classren_1_1BindableLinker" kindref="compound">BindableLinker&lt;TextureArrayOffscreenDS&gt;::make</ref>(<sp/></highlight><highlight class="stringliteral">&quot;offscreenShadowmapOut&quot;</highlight><highlight class="normal">,<sp/><ref refid="classren_1_1ShadowPass_af4f3a07a55a116c015e4d5cf7b704343_1af4f3a07a55a116c015e4d5cf7b704343" kindref="member">m_pOffscreenDsvMapArray</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1IPass_aa9c50563c1bd98e1c377d819d9e2dc09_1aa9c50563c1bd98e1c377d819d9e2dc09" kindref="member">addLinker</ref>(<sp/><ref refid="classren_1_1BindableLinker" kindref="compound">BindableLinker&lt;CubeTextureArrayOffscreenDS&gt;::make</ref>(<sp/></highlight><highlight class="stringliteral">&quot;offscreenShadowCubemapOut&quot;</highlight><highlight class="normal">,<sp/><ref refid="classren_1_1ShadowPass_a385c01dc0ae5345d932f14e54846a515_1a385c01dc0ae5345d932f14e54846a515" kindref="member">m_pOffscreenDsvCubemapArray</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>placeholder<sp/>shadow<sp/>maps<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_af4f3a07a55a116c015e4d5cf7b704343_1af4f3a07a55a116c015e4d5cf7b704343" kindref="member">m_pOffscreenDsvMapArray</ref><sp/>=<sp/>std::make_shared&lt;TextureArrayOffscreenDS&gt;(<sp/>gfx,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref>,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref>,<sp/><ref refid="classren_1_1ShadowPass_affb066b0b62365f2371369da5e7b164f_1affb066b0b62365f2371369da5e7b164f" kindref="member">s_shadowMapArraySlot</ref>,<sp/><ref refid="texture__desc_8h_a5aacc2000fea78d975de8fe06e3698f2_1a5aacc2000fea78d975de8fe06e3698f2aa3f0d1b560601f1a90fd3835cad4f1f1" kindref="member">DepthStencilViewMode::ShadowDepth</ref>,<sp/>2u<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a385c01dc0ae5345d932f14e54846a515_1a385c01dc0ae5345d932f14e54846a515" kindref="member">m_pOffscreenDsvCubemapArray</ref><sp/>=<sp/>std::make_shared&lt;CubeTextureArrayOffscreenDS&gt;(<sp/>gfx,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref>,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref>,<sp/><ref refid="classren_1_1ShadowPass_a57668a13b79c7b97a93535fc9f328e0e_1a57668a13b79c7b97a93535fc9f328e0e" kindref="member">s_shadowCubeMapArraySlot</ref>,<sp/><ref refid="texture__desc_8h_a5aacc2000fea78d975de8fe06e3698f2_1a5aacc2000fea78d975de8fe06e3698f2aa3f0d1b560601f1a90fd3835cad4f1f1" kindref="member">DepthStencilViewMode::ShadowDepth</ref>,<sp/>2u<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DirectX::XMFLOAT3&gt;<sp/>cameraDirections{6};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DirectX::XMFLOAT3&gt;<sp/>cameraUps{6};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraDirections[0],<sp/>DirectX::XMVectorSet(<sp/>1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a9352a3d27813950414fbed5a9ea476c7_1a9352a3d27813950414fbed5a9ea476c7" kindref="member">m_cameraDirections</ref>[0]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraDirections[0]<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraUps[0],<sp/>DirectX::XMVectorSet(<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a892a877625b3f74424b05cfe66c84603_1a892a877625b3f74424b05cfe66c84603" kindref="member">m_cameraUps</ref>[0]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraUps[0]<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraDirections[1],<sp/>DirectX::XMVectorSet(<sp/>-1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a9352a3d27813950414fbed5a9ea476c7_1a9352a3d27813950414fbed5a9ea476c7" kindref="member">m_cameraDirections</ref>[1]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraDirections[1]<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraUps[1],<sp/>DirectX::XMVectorSet(<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a892a877625b3f74424b05cfe66c84603_1a892a877625b3f74424b05cfe66c84603" kindref="member">m_cameraUps</ref>[1]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraUps[1]<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraDirections[2],<sp/>DirectX::XMVectorSet(<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a9352a3d27813950414fbed5a9ea476c7_1a9352a3d27813950414fbed5a9ea476c7" kindref="member">m_cameraDirections</ref>[2]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraDirections[2]<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraUps[2],<sp/>DirectX::XMVectorSet(<sp/>0.0f,<sp/>0.0f,<sp/>-1.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a892a877625b3f74424b05cfe66c84603_1a892a877625b3f74424b05cfe66c84603" kindref="member">m_cameraUps</ref>[2]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraUps[2]<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraDirections[3],<sp/>DirectX::XMVectorSet(<sp/>0.0f,<sp/>-1.0f,<sp/>0.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a9352a3d27813950414fbed5a9ea476c7_1a9352a3d27813950414fbed5a9ea476c7" kindref="member">m_cameraDirections</ref>[3]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraDirections[3]<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraUps[3],<sp/>DirectX::XMVectorSet(<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a892a877625b3f74424b05cfe66c84603_1a892a877625b3f74424b05cfe66c84603" kindref="member">m_cameraUps</ref>[3]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraUps[3]<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraDirections[4],<sp/>DirectX::XMVectorSet(<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a9352a3d27813950414fbed5a9ea476c7_1a9352a3d27813950414fbed5a9ea476c7" kindref="member">m_cameraDirections</ref>[4]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraDirections[4]<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraUps[4],<sp/>DirectX::XMVectorSet(<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a892a877625b3f74424b05cfe66c84603_1a892a877625b3f74424b05cfe66c84603" kindref="member">m_cameraUps</ref>[4]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraUps[4]<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraDirections[5],<sp/>DirectX::XMVectorSet(<sp/>0.0f,<sp/>0.0f,<sp/>-1.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a9352a3d27813950414fbed5a9ea476c7_1a9352a3d27813950414fbed5a9ea476c7" kindref="member">m_cameraDirections</ref>[5]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraDirections[5]<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>DirectX::XMStoreFloat3(<sp/>&amp;cameraUps[5],<sp/>DirectX::XMVectorSet(<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>0.0f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a892a877625b3f74424b05cfe66c84603_1a892a877625b3f74424b05cfe66c84603" kindref="member">m_cameraUps</ref>[5]<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;cameraUps[5]<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classren_1_1ShadowPass_a31a85426ffac3f700c0b3c187b0567af_1a31a85426ffac3f700c0b3c187b0567af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1ShadowPass_a31a85426ffac3f700c0b3c187b0567af_1a31a85426ffac3f700c0b3c187b0567af" kindref="member">ShadowPass::run</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cond_noex</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1ShadowPass" kindref="compound">ShadowPass</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>this<sp/>)-&gt;bindGlobalCBs(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(<sp/>util::modulus(<sp/>gfx.getFrameNum(),<sp/>g_nFramesPerShadowUpdate<sp/>)<sp/>==<sp/>1<sp/>)<sp/><sp/>//<sp/>#optimization:<sp/>no<sp/>need<sp/>to<sp/>update<sp/>shadows<sp/>every<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1ShadowPass" kindref="compound">ShadowPass</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>this<sp/>)-&gt;bindLightCBs(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nShadowCastingLights<sp/>=<sp/>m_shadowCastingLights.size();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lightIndex<sp/>=<sp/>0;<sp/>lightIndex<sp/>&lt;<sp/>nShadowCastingLights;<sp/>++lightIndex<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILightSource" kindref="compound">ILightSource</ref><sp/>*pLight<sp/>=<sp/>m_shadowCastingLights[lightIndex];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfx.setProjectionMatrix(<sp/>pLight-&gt;<ref refid="classILightSource_a10dcb51eb6c7dc15ff6b7ffe442a8245_1a10dcb51eb6c7dc15ff6b7ffe442a8245" kindref="member">getShadowCamera</ref>()-&gt;<ref refid="classCamera_aa79555b2e77e07c0f070016498185caa_1aa79555b2e77e07c0f070016498185caa" kindref="member">getProjectionMatrix</ref>(gfx,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>pLight-&gt;<ref refid="classILightSource_af0a72727cb5a6ee05dde5ea17c222b81_1af0a72727cb5a6ee05dde5ea17c222b81" kindref="member">m_shadowCamFarZ</ref>)<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;pos<sp/>=<sp/>pLight-&gt;<ref refid="classILightSource_a39174369af77a807c727dd8b8b41afec_1a39174369af77a807c727dd8b8b41afec" kindref="member">getPosition</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;shadowCamPos<sp/>=<sp/>pLight-&gt;<ref refid="classILightSource_a10dcb51eb6c7dc15ff6b7ffe442a8245_1a10dcb51eb6c7dc15ff6b7ffe442a8245" kindref="member">getShadowCamera</ref>()-&gt;<ref refid="classCamera_a5433d9b545d22abeecb3693cc832b99a_1a5433d9b545d22abeecb3693cc832b99a" kindref="member">getPosition</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>util::operator==(pos,<sp/>shadowCamPos),<sp/></highlight><highlight class="stringliteral">&quot;Inconsistent<sp/>light<sp/>and<sp/>shadow<sp/>camera<sp/>positions!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>posVec<sp/>=<sp/>DirectX::XMLoadFloat3(<sp/>&amp;pos<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="light__source_8h_a621d578de257cbce447d8aaada5b8332_1a621d578de257cbce447d8aaada5b8332" kindref="member">LightSourceType</ref><sp/>lightType<sp/>=<sp/>pLight-&gt;<ref refid="classILightSource_a7c9863add04adffa68a99aacc239a64d_1a7c9863add04adffa68a99aacc239a64d" kindref="member">getType</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lightType<sp/>==<sp/><ref refid="light__source_8h_a621d578de257cbce447d8aaada5b8332_1a621d578de257cbce447d8aaada5b8332a5587f9acd040804638ac6fb1bc87bbd3" kindref="member">LightSourceType::Directional</ref><sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1ShadowPass" kindref="compound">ShadowPass</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>this<sp/>)-&gt;m_pDsv<sp/>=<sp/>m_pOffscreenDsvMapArray-&gt;shareDepthBuffer(<sp/>lightIndex<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pDsv-&gt;clear(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lightType<sp/>==<sp/><ref refid="light__source_8h_a621d578de257cbce447d8aaada5b8332_1a621d578de257cbce447d8aaada5b8332a395dea9a8704c1a1ed0224f6fb4e88b1" kindref="member">LightSourceType::Spot</ref><sp/>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1ShadowPass" kindref="compound">ShadowPass</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>this<sp/>)-&gt;m_pDsv<sp/>=<sp/>m_pOffscreenDsvMapArray-&gt;shareDepthBuffer(<sp/>lightIndex<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pDsv-&gt;clear(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lightType<sp/>==<sp/><ref refid="light__source_8h_a621d578de257cbce447d8aaada5b8332_1a621d578de257cbce447d8aaada5b8332a5b577e188dc4657a3e573fb2dae1a924" kindref="member">LightSourceType::Point</ref><sp/>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face<sp/>=<sp/>0;<sp/>face<sp/>&lt;<sp/>6;<sp/>++face<sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bind<sp/>the<sp/>DSV<sp/>from<sp/>the<sp/>offscreen<sp/>cube<sp/>map<sp/>ds<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classren_1_1ShadowPass" kindref="compound">ShadowPass</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>this<sp/>)-&gt;m_pDsv<sp/>=<sp/>m_pOffscreenDsvCubemapArray-&gt;shareDepthBuffer(<sp/>lightIndex,<sp/>face<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pDsv-&gt;clear(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lookAt<sp/>=<sp/>DirectX::XMVectorAdd(<sp/>posVec,<sp/>m_cameraDirections[face]<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gfx.setViewMatrix(<sp/>DirectX::XMMatrixLookAtLH(<sp/>posVec,<sp/>lookAt,<sp/>m_cameraUps[face]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1RenderQueuePass_a8c01bb14c9e11b7e9c328ddf6cc39af2_1a8c01bb14c9e11b7e9c328ddf6cc39af2" kindref="member">RenderQueuePass::run</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classren_1_1ShadowPass_a90d4ac05ba7d7f2cb3ae06ce0ffae448_1a90d4ac05ba7d7f2cb3ae06ce0ffae448" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1ShadowPass_a90d4ac05ba7d7f2cb3ae06ce0ffae448_1a90d4ac05ba7d7f2cb3ae06ce0ffae448" kindref="member">ShadowPass::bindShadowCastingLights</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ILightSource*&gt;<sp/>&amp;shadowCastingLights<sp/>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nShadowCastingLights<sp/>=<sp/>shadowCastingLights.size();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;settings<sp/>=<sp/><ref refid="classSettingsManager_a92617e378ef941b075dd8343d283bd00_1a92617e378ef941b075dd8343d283bd00" kindref="member">SettingsManager::getInstance</ref>().<ref refid="classSettingsManager_a2634a5f2822112f9bf7cd42dcf440288_1a2634a5f2822112f9bf7cd42dcf440288" kindref="member">getSettings</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nShadowCastingLights<sp/>&gt;<sp/>settings.iMaxShadowCastingDynamicLights<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="renderer__exception_8h_aa44af0d97aee41f6d2d530c50166b864_1aa44af0d97aee41f6d2d530c50166b864" kindref="member">THROW_RENDERER_EXCEPTION</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>create<sp/>more<sp/>shadow<sp/>casting<sp/>lights<sp/>than<sp/>the<sp/>current<sp/>limit<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<sp/>settings.iMaxShadowCastingDynamicLights<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_ad8703170561e0605426d5e43ecc96324_1ad8703170561e0605426d5e43ecc96324" kindref="member">m_shadowCastingLights</ref>.clear();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_ad8703170561e0605426d5e43ecc96324_1ad8703170561e0605426d5e43ecc96324" kindref="member">m_shadowCastingLights</ref>.reserve(<sp/>nShadowCastingLights<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classILightSource" kindref="compound">ILightSource</ref><sp/>*pLight<sp/>:<sp/>shadowCastingLights<sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_ad8703170561e0605426d5e43ecc96324_1ad8703170561e0605426d5e43ecc96324" kindref="member">m_shadowCastingLights</ref>.push_back(<sp/>pLight<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>Texture<sp/>Arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nShadowCastingNonPointLights<sp/>=<sp/>std::count_if(<sp/><ref refid="classren_1_1ShadowPass_ad8703170561e0605426d5e43ecc96324_1ad8703170561e0605426d5e43ecc96324" kindref="member">m_shadowCastingLights</ref>.begin(),<sp/><ref refid="classren_1_1ShadowPass_ad8703170561e0605426d5e43ecc96324_1ad8703170561e0605426d5e43ecc96324" kindref="member">m_shadowCastingLights</ref>.end(),<sp/>[]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classILightSource" kindref="compound">ILightSource</ref><sp/>*pLight)<sp/>{<sp/>return<sp/>pLight-&gt;getType()<sp/>!=<sp/>LightSourceType::Point;<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nShadowCastingNonPointLights<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;TextureArrayOffscreenDS&gt;<sp/>temp_pOffscreenDsvMapArray<sp/>=<sp/>std::make_shared&lt;TextureArrayOffscreenDS&gt;(<sp/>gfx,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref>,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref>,<sp/><ref refid="classren_1_1ShadowPass_affb066b0b62365f2371369da5e7b164f_1affb066b0b62365f2371369da5e7b164f" kindref="member">s_shadowMapArraySlot</ref>,<sp/><ref refid="texture__desc_8h_a5aacc2000fea78d975de8fe06e3698f2_1a5aacc2000fea78d975de8fe06e3698f2aa3f0d1b560601f1a90fd3835cad4f1f1" kindref="member">DepthStencilViewMode::ShadowDepth</ref>,<sp/>nShadowCastingNonPointLights<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classren_1_1ShadowPass_af4f3a07a55a116c015e4d5cf7b704343_1af4f3a07a55a116c015e4d5cf7b704343" kindref="member">m_pOffscreenDsvMapArray</ref><sp/>=<sp/>*temp_pOffscreenDsvMapArray;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nShadowCastingPointLights<sp/>=<sp/>std::count_if(<sp/><ref refid="classren_1_1ShadowPass_ad8703170561e0605426d5e43ecc96324_1ad8703170561e0605426d5e43ecc96324" kindref="member">m_shadowCastingLights</ref>.begin(),<sp/><ref refid="classren_1_1ShadowPass_ad8703170561e0605426d5e43ecc96324_1ad8703170561e0605426d5e43ecc96324" kindref="member">m_shadowCastingLights</ref>.end(),<sp/>[]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classILightSource" kindref="compound">ILightSource</ref><sp/>*pLight)<sp/>{<sp/>return<sp/>pLight-&gt;getType()<sp/>==<sp/>LightSourceType::Point;<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nShadowCastingPointLights<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;CubeTextureArrayOffscreenDS&gt;<sp/>temp_pOffscreenDsvCubemapArray<sp/>=<sp/>std::make_shared&lt;CubeTextureArrayOffscreenDS&gt;(<sp/>gfx,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref>,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref>,<sp/><ref refid="classren_1_1ShadowPass_a57668a13b79c7b97a93535fc9f328e0e_1a57668a13b79c7b97a93535fc9f328e0e" kindref="member">s_shadowCubeMapArraySlot</ref>,<sp/><ref refid="texture__desc_8h_a5aacc2000fea78d975de8fe06e3698f2_1a5aacc2000fea78d975de8fe06e3698f2aa3f0d1b560601f1a90fd3835cad4f1f1" kindref="member">DepthStencilViewMode::ShadowDepth</ref>,<sp/>nShadowCastingPointLights<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classren_1_1ShadowPass_a385c01dc0ae5345d932f14e54846a515_1a385c01dc0ae5345d932f14e54846a515" kindref="member">m_pOffscreenDsvCubemapArray</ref><sp/>=<sp/>*temp_pOffscreenDsvCubemapArray;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>_DEBUG<sp/>&amp;&amp;<sp/>!defined<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>lightIndex<sp/>=<sp/>0;<sp/>lightIndex<sp/>&lt;<sp/>nShadowCastingNonPointLights;<sp/>++lightIndex<sp/>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_af4f3a07a55a116c015e4d5cf7b704343_1af4f3a07a55a116c015e4d5cf7b704343" kindref="member">m_pOffscreenDsvMapArray</ref>-&gt;accessDepthBuffer(<sp/>lightIndex<sp/>)-&gt;setDebugObjectName(<sp/>std::string{</highlight><highlight class="stringliteral">&quot;ShadowPassDsv#&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<sp/>lightIndex<sp/>)}.c_str()<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>lightIndex<sp/>=<sp/>0;<sp/>lightIndex<sp/>&lt;<sp/>nShadowCastingPointLights;<sp/>++lightIndex<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>face<sp/>=<sp/>0;<sp/>face<sp/>&lt;<sp/>6;<sp/>++face<sp/>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a385c01dc0ae5345d932f14e54846a515_1a385c01dc0ae5345d932f14e54846a515" kindref="member">m_pOffscreenDsvCubemapArray</ref>-&gt;accessDepthBuffer(<sp/>lightIndex,<sp/>face<sp/>)-&gt;setDebugObjectName(<sp/>std::string{</highlight><highlight class="stringliteral">&quot;ShadowPassDsv_cube#&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<sp/>lightIndex<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<sp/>face<sp/>)}.c_str()<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classren_1_1ShadowPass_abfd441eaa17f14d2f82fea433806a4f4_1abfd441eaa17f14d2f82fea433806a4f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1ShadowPass_abfd441eaa17f14d2f82fea433806a4f4_1abfd441eaa17f14d2f82fea433806a4f4" kindref="member">ShadowPass::dumpShadowMap</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;path<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="198"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pDsvShadowMap<sp/>=<sp/><ref refid="classren_1_1ShadowPass_af4f3a07a55a116c015e4d5cf7b704343_1af4f3a07a55a116c015e4d5cf7b704343" kindref="member">m_pOffscreenDsvMapArray</ref>-&gt;shareDepthBuffer(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>pDsvShadowMap-&gt;convertToBitmap(<sp/>gfx,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref>,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref><sp/>).save(<sp/>path<sp/>+<sp/><sp/></highlight><highlight class="stringliteral">&quot;map_array_0.png&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classren_1_1ShadowPass_a88f8d3b07f57c1d6a98a78fec2e68b5f_1a88f8d3b07f57c1d6a98a78fec2e68b5f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1ShadowPass_a88f8d3b07f57c1d6a98a78fec2e68b5f_1a88f8d3b07f57c1d6a98a78fec2e68b5f" kindref="member">ShadowPass::dumpShadowCubeMap</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;path<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="205"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pDsvShadowCubeMap<sp/>=<sp/><ref refid="classren_1_1ShadowPass_a385c01dc0ae5345d932f14e54846a515_1a385c01dc0ae5345d932f14e54846a515" kindref="member">m_pOffscreenDsvCubemapArray</ref>-&gt;shareDepthBuffer(<sp/>0,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDsvShadowCubeMap-&gt;convertToBitmap(<sp/>gfx,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref>,<sp/><ref refid="classren_1_1ShadowPass_a7f7b6d1fa45f819dd55562fc55886bdc_1a7f7b6d1fa45f819dd55562fc55886bdc" kindref="member">s_shadowMapResolution</ref><sp/>).save(<sp/>path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;cube_map_array_0_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<sp/>i<sp/>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.png&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="classren_1_1ShadowPass_a2dcba5ef918addeb7a105cce0fe45fe0_1a2dcba5ef918addeb7a105cce0fe45fe0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1ShadowPass_a2dcba5ef918addeb7a105cce0fe45fe0_1a2dcba5ef918addeb7a105cce0fe45fe0" kindref="member">ShadowPass::bindGlobalCBs</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nShadowCastingLights<sp/>=<sp/>m_shadowCastingLights.size();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nShadowCastingPointLights<sp/>=<sp/>std::count_if(<sp/>m_shadowCastingLights.begin(),<sp/>m_shadowCastingLights.end(),<sp/>[]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classILightSource" kindref="compound">ILightSource</ref><sp/>*pLight)<sp/>{<sp/>return<sp/>pLight-&gt;getType()<sp/>==<sp/>LightSourceType::Point;<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>seconds<sp/>=<sp/>gfx.getRealTimer().getSecondsFromStart();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structren_1_1ShadowPass_1_1GlobalsVSCB" kindref="compound">GlobalsVSCB</ref><sp/>vscb{seconds,<sp/>nShadowCastingLights,<sp/>nShadowCastingPointLights,<sp/>0.0f};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>m_globalsVscb.update(<sp/>gfx,<sp/>vscb<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>m_globalsVscb.bind(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structren_1_1ShadowPass_1_1GlobalsPSCB" kindref="compound">GlobalsPSCB</ref><sp/>pscb{seconds,<sp/>nShadowCastingLights,<sp/>nShadowCastingPointLights,<sp/>0.0f};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>m_globalsPscb.update(<sp/>gfx,<sp/>pscb<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>m_globalsPscb.bind(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classren_1_1ShadowPass_a3dfc4bceb738b9e479457502373f6b38_1a3dfc4bceb738b9e479457502373f6b38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classren_1_1ShadowPass_a3dfc4bceb738b9e479457502373f6b38_1a3dfc4bceb738b9e479457502373f6b38" kindref="member">ShadowPass::bindLightCBs</ref>(<sp/><ref refid="classGraphics" kindref="compound">Graphics</ref><sp/>&amp;gfx<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nShadowCastingLights<sp/>=<sp/>m_shadowCastingLights.size();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_a09354ae41187122545fb29cf0d7794fd_1a09354ae41187122545fb29cf0d7794fd" kindref="member">LightsVSCB</ref><sp/>vscbLightData{};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classren_1_1ShadowPass_afd94955d277d6d9df9571863056cbe55_1afd94955d277d6d9df9571863056cbe55" kindref="member">LightsPSCB</ref><sp/>pscbLightData{};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>populate<sp/>CB<sp/>Lights<sp/>Data,<sp/>then<sp/>update<sp/>&amp;<sp/>Bind<sp/>the<sp/>CBs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nShadowCastingLights;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classILightSource" kindref="compound">ILightSource</ref><sp/>*pLight<sp/>=<sp/>m_shadowCastingLights[i];</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pLight-&gt;<ref refid="classILightSource_a52f8aa3d9b871f416990e363bd9c09e3_1a52f8aa3d9b871f416990e363bd9c09e3" kindref="member">populateCBData</ref>(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vscbLightData[i]<sp/>=<sp/>pLight-&gt;<ref refid="classILightSource_ae74ea4b3c8c575ecbac3156d4a9ee699_1ae74ea4b3c8c575ecbac3156d4a9ee699" kindref="member">getVscbData</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pscbLightData[i]<sp/>=<sp/>pLight-&gt;<ref refid="classILightSource_a17577069622792755b3aa3e1867dd77e_1a17577069622792755b3aa3e1867dd77e" kindref="member">getPscbData</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vscb.update(<sp/>gfx,<sp/>vscbLightData<sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vscb.bind(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pscb.update(<sp/>gfx,<sp/>pscbLightData<sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pscb.bind(<sp/>gfx<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>ren</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/SHADOW_PASS.CPP"/>
  </compounddef>
</doxygen>
