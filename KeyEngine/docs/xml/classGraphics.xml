<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classGraphics" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Graphics</compoundname>
    <basecompoundref refid="classNonCopyableAndNonMovable" prot="private" virt="non-virtual">NonCopyableAndNonMovable</basecompoundref>
    <includes refid="graphics_8h" local="no">graphics.h</includes>
    <innerclass refid="classGraphics_1_1Adapter" prot="private">Graphics::Adapter</innerclass>
    <innerclass refid="classGraphics_1_1GraphicsException" prot="private">Graphics::GraphicsException</innerclass>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classGraphics_ae895ca46466a7d73fa1d852bc5a89c2f_1ae895ca46466a7d73fa1d852bc5a89c2f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class GraphicsFriend</definition>
        <argsstring></argsstring>
        <name>GraphicsFriend</name>
        <qualifiedname>Graphics::GraphicsFriend</qualifiedname>
        <param>
          <type><ref refid="classGraphicsFriend" kindref="compound">GraphicsFriend</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="58" column="14" bodyfile="inc/graphics.h" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classGraphics_aed265fd9f7b2e9eeb65f184260037e3d_1aed265fd9f7b2e9eeb65f184260037e3d" prot="private" static="yes" mutable="no">
        <type>D3D_FEATURE_LEVEL</type>
        <definition>D3D_FEATURE_LEVEL Graphics::s_featureLevel</definition>
        <argsstring></argsstring>
        <name>s_featureLevel</name>
        <qualifiedname>Graphics::s_featureLevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="81" column="33" bodyfile="inc/graphics.h" bodystart="81" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_1_1Adapter_ad40a2841488cf71cbee71eb9eeb12c72_1ad40a2841488cf71cbee71eb9eeb12c72" compoundref="graphics_8cpp" startline="69" endline="88">Graphics::Adapter::getVRamDetails</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a0b498c6167c3a63bf4539d04110ca63f_1a0b498c6167c3a63bf4539d04110ca63f" prot="private" static="yes" mutable="no">
        <type>std::vector&lt; <ref refid="classGraphics_1_1Adapter" kindref="compound">Adapter</ref> &gt;</type>
        <definition>std::vector&lt;Adapter&gt; Graphics::s_adapters</definition>
        <argsstring></argsstring>
        <name>s_adapters</name>
        <qualifiedname>Graphics::s_adapters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="82" column="27" bodyfile="inc/graphics.h" bodystart="82" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_a80cc8527cd2fab207205fc3962fba585_1a80cc8527cd2fab207205fc3962fba585" compoundref="graphics_8cpp" startline="816" endline="826">createAdapters</referencedby>
        <referencedby refid="classGraphics_a7dce5b31ab15931acd9812956a118ab2_1a7dce5b31ab15931acd9812956a118ab2" compoundref="graphics_8cpp" startline="363" endline="394">setupMonitors</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned Graphics::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <qualifiedname>Graphics::m_width</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="84" column="10" bodyfile="inc/graphics.h" bodystart="84" bodyend="-1"/>
        <referencedby refid="classGraphics_ac25c31fbc763dc6970ae9c730b441129_1ac25c31fbc763dc6970ae9c730b441129" compoundref="graphics_8cpp" startline="504" endline="527">beginFrame</referencedby>
        <referencedby refid="classGraphics_a0cd69139e91c30dcf1db018d3093dcf9_1a0cd69139e91c30dcf1db018d3093dcf9" compoundref="graphics_8cpp" startline="938" endline="989">drawLine</referencedby>
        <referencedby refid="classGraphics_af1489a7a2f0b6cf0f94f31ccb03943fa_1af1489a7a2f0b6cf0f94f31ccb03943fa" compoundref="graphics_8cpp" startline="653" endline="656">getClientWidth</referencedby>
        <referencedby refid="classGraphics_a084646abddc266bd1098f7fec6fc6d93_1a084646abddc266bd1098f7fec6fc6d93" compoundref="graphics_8cpp" startline="705" endline="717">getDepthBufferOffscreen</referencedby>
        <referencedby refid="classGraphics_a506691019858e4dbe5c5b4477f73f38f_1a506691019858e4dbe5c5b4477f73f38f" compoundref="graphics_8cpp" startline="691" endline="703">getRenderTargetOffscreen</referencedby>
        <referencedby refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" compoundref="graphics_8cpp" startline="918" endline="927">putPixel</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_abeb2d8d4b81e71ad34102c1526ef28b6_1abeb2d8d4b81e71ad34102c1526ef28b6" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned Graphics::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <qualifiedname>Graphics::m_height</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="85" column="10" bodyfile="inc/graphics.h" bodystart="85" bodyend="-1"/>
        <referencedby refid="classGraphics_ac25c31fbc763dc6970ae9c730b441129_1ac25c31fbc763dc6970ae9c730b441129" compoundref="graphics_8cpp" startline="504" endline="527">beginFrame</referencedby>
        <referencedby refid="classGraphics_a0cd69139e91c30dcf1db018d3093dcf9_1a0cd69139e91c30dcf1db018d3093dcf9" compoundref="graphics_8cpp" startline="938" endline="989">drawLine</referencedby>
        <referencedby refid="classGraphics_a6b1ed076f5063af9f5814d23df30dc24_1a6b1ed076f5063af9f5814d23df30dc24" compoundref="graphics_8cpp" startline="658" endline="661">getClientHeight</referencedby>
        <referencedby refid="classGraphics_a084646abddc266bd1098f7fec6fc6d93_1a084646abddc266bd1098f7fec6fc6d93" compoundref="graphics_8cpp" startline="705" endline="717">getDepthBufferOffscreen</referencedby>
        <referencedby refid="classGraphics_a506691019858e4dbe5c5b4477f73f38f_1a506691019858e4dbe5c5b4477f73f38f" compoundref="graphics_8cpp" startline="691" endline="703">getRenderTargetOffscreen</referencedby>
        <referencedby refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" compoundref="graphics_8cpp" startline="918" endline="927">putPixel</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a0082e76df00907ea297d37abccd21d8f_1a0082e76df00907ea297d37abccd21d8f" prot="private" static="no" mutable="no">
        <type>HWND</type>
        <definition>HWND Graphics::m_hParentWnd</definition>
        <argsstring></argsstring>
        <name>m_hParentWnd</name>
        <qualifiedname>Graphics::m_hParentWnd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="86" column="6" bodyfile="inc/graphics.h" bodystart="86" bodyend="-1"/>
        <referencedby refid="classGraphics_a5cc0d3b4dd8e0c60c55a67c31b3b64f9_1a5cc0d3b4dd8e0c60c55a67c31b3b64f9" compoundref="graphics_8cpp" startline="828" endline="868">interrogateDirectxFeatures</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a691874fb352051093a2ec88f3c5a3d11_1a691874fb352051093a2ec88f3c5a3d11" prot="private" static="no" mutable="no">
        <type>UINT</type>
        <definition>UINT Graphics::m_swapChainFlags</definition>
        <argsstring></argsstring>
        <name>m_swapChainFlags</name>
        <qualifiedname>Graphics::m_swapChainFlags</qualifiedname>
        <initializer>= 0u</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="87" column="6" bodyfile="inc/graphics.h" bodystart="87" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_ad5ab15e2a2efd332ba0a1a67ba232c83_1ad5ab15e2a2efd332ba0a1a67ba232c83" prot="private" static="no" mutable="no">
        <type>Microsoft::WRL::ComPtr&lt; IDXGIFactory1 &gt;</type>
        <definition>Microsoft::WRL::ComPtr&lt;IDXGIFactory1&gt; Graphics::m_pDxgiFactory</definition>
        <argsstring></argsstring>
        <name>m_pDxgiFactory</name>
        <qualifiedname>Graphics::m_pDxgiFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="93" column="24" bodyfile="inc/graphics.h" bodystart="93" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_a4d2ce74d9116c803e4f5514fa9a8e51f_1a4d2ce74d9116c803e4f5514fa9a8e51f" compoundref="graphics_8cpp" startline="870" endline="885">checkTearingSupport</referencedby>
        <referencedby refid="classGraphics_a80cc8527cd2fab207205fc3962fba585_1a80cc8527cd2fab207205fc3962fba585" compoundref="graphics_8cpp" startline="816" endline="826">createAdapters</referencedby>
        <referencedby refid="classGraphics_a355c17321d44862d7ef0f93416492d6a_1a355c17321d44862d7ef0f93416492d6a" compoundref="graphics_8cpp" startline="795" endline="814">createFactory</referencedby>
        <referencedby refid="classGraphics_a9901788d977a1cb176ffc589bc7a9488_1a9901788d977a1cb176ffc589bc7a9488" compoundref="graphics_8cpp" startline="90" endline="97">makeWindowAssociationWithFactory</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" prot="private" static="no" mutable="no">
        <type>Microsoft::WRL::ComPtr&lt; IDXGISwapChain &gt;</type>
        <definition>Microsoft::WRL::ComPtr&lt;IDXGISwapChain&gt; Graphics::m_pSwapChain</definition>
        <argsstring></argsstring>
        <name>m_pSwapChain</name>
        <qualifiedname>Graphics::m_pSwapChain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="94" column="24" bodyfile="inc/graphics.h" bodystart="94" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_a9a6ad2b28b7f765c6c7ed63b664754d8_1a9a6ad2b28b7f765c6c7ed63b664754d8" compoundref="graphics_8cpp" startline="719" endline="746">bindBackBufferAsInput</referencedby>
        <referencedby refid="classGraphics_a937fe925bd73dc37c24c0b728fabacee_1a937fe925bd73dc37c24c0b728fabacee" compoundref="graphics_8cpp" startline="663" endline="677">getRenderTargetFromBackBuffer</referencedby>
        <referencedby refid="classGraphics_aefe40c94ce078f84342864b959543c99_1aefe40c94ce078f84342864b959543c99" compoundref="graphics_8cpp" startline="548" endline="586">present</referencedby>
        <referencedby refid="classGraphics_a9c3fa6f796b990c8d62a77bb2146740c_1a9c3fa6f796b990c8d62a77bb2146740c" compoundref="graphics_8cpp" startline="434" endline="452">profile</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
        <referencedby refid="classGraphics_a7dce5b31ab15931acd9812956a118ab2_1a7dce5b31ab15931acd9812956a118ab2" compoundref="graphics_8cpp" startline="363" endline="394">setupMonitors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" prot="private" static="no" mutable="no">
        <type>Microsoft::WRL::ComPtr&lt; ID3D11Device &gt;</type>
        <definition>Microsoft::WRL::ComPtr&lt;ID3D11Device&gt; Graphics::m_pDevice</definition>
        <argsstring></argsstring>
        <name>m_pDevice</name>
        <qualifiedname>Graphics::m_pDevice</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="96" column="24" bodyfile="inc/graphics.h" bodystart="96" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_a9a6ad2b28b7f765c6c7ed63b664754d8_1a9a6ad2b28b7f765c6c7ed63b664754d8" compoundref="graphics_8cpp" startline="719" endline="746">bindBackBufferAsInput</referencedby>
        <referencedby refid="classGraphics_ac24292486c6316265844e447ecf3fe6d_1ac24292486c6316265844e447ecf3fe6d" compoundref="graphics_8cpp" startline="396" endline="405">getRefreshRate</referencedby>
        <referencedby refid="classGraphics_a5cc0d3b4dd8e0c60c55a67c31b3b64f9_1a5cc0d3b4dd8e0c60c55a67c31b3b64f9" compoundref="graphics_8cpp" startline="828" endline="868">interrogateDirectxFeatures</referencedby>
        <referencedby refid="classGraphics_aefe40c94ce078f84342864b959543c99_1aefe40c94ce078f84342864b959543c99" compoundref="graphics_8cpp" startline="548" endline="586">present</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" prot="private" static="no" mutable="no">
        <type>Microsoft::WRL::ComPtr&lt; ID3D11DeviceContext &gt;</type>
        <definition>Microsoft::WRL::ComPtr&lt;ID3D11DeviceContext&gt; Graphics::m_pImmediateContext</definition>
        <argsstring></argsstring>
        <name>m_pImmediateContext</name>
        <qualifiedname>Graphics::m_pImmediateContext</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="97" column="24" bodyfile="inc/graphics.h" bodystart="97" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_a9a6ad2b28b7f765c6c7ed63b664754d8_1a9a6ad2b28b7f765c6c7ed63b664754d8" compoundref="graphics_8cpp" startline="719" endline="746">bindBackBufferAsInput</referencedby>
        <referencedby refid="classGraphics_aa810ea01a036c99e63ca86974ff85d13_1aa810ea01a036c99e63ca86974ff85d13" compoundref="graphics_8cpp" startline="480" endline="502">cleanState</referencedby>
        <referencedby refid="classGraphics_a658256d93cbb6e78b8b0ecb319e38ad5_1a658256d93cbb6e78b8b0ecb319e38ad5" compoundref="graphics_8cpp" startline="454" endline="478">clearShaderSlots</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a6305d6fcb9798d15ed15dead4c3fc3a5_1a6305d6fcb9798d15ed15dead4c3fc3a5" prot="private" static="no" mutable="no">
        <type>Microsoft::WRL::ComPtr&lt; IDXGIOutput1 &gt;</type>
        <definition>Microsoft::WRL::ComPtr&lt;IDXGIOutput1&gt; Graphics::m_pDxgiOutput</definition>
        <argsstring></argsstring>
        <name>m_pDxgiOutput</name>
        <qualifiedname>Graphics::m_pDxgiOutput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="98" column="24" bodyfile="inc/graphics.h" bodystart="98" bodyend="-1"/>
        <referencedby refid="classGraphics_ac24292486c6316265844e447ecf3fe6d_1ac24292486c6316265844e447ecf3fe6d" compoundref="graphics_8cpp" startline="396" endline="405">getRefreshRate</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
        <referencedby refid="classGraphics_a7dce5b31ab15931acd9812956a118ab2_1a7dce5b31ab15931acd9812956a118ab2" compoundref="graphics_8cpp" startline="363" endline="394">setupMonitors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a02e3b57e9a06dca3b04e368cae000820_1a02e3b57e9a06dca3b04e368cae000820" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classRenderTargetOutput" kindref="compound">RenderTargetOutput</ref> &gt;</type>
        <definition>std::shared_ptr&lt;RenderTargetOutput&gt; Graphics::m_pBackBufferRtv</definition>
        <argsstring></argsstring>
        <name>m_pBackBufferRtv</name>
        <qualifiedname>Graphics::m_pBackBufferRtv</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="99" column="17" bodyfile="inc/graphics.h" bodystart="99" bodyend="-1"/>
        <referencedby refid="classGraphics_a937fe925bd73dc37c24c0b728fabacee_1a937fe925bd73dc37c24c0b728fabacee" compoundref="graphics_8cpp" startline="663" endline="677">getRenderTargetFromBackBuffer</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a974483c4adc9f12211ca4916594f47f8_1a974483c4adc9f12211ca4916594f47f8" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classDepthStencilOutput" kindref="compound">DepthStencilOutput</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DepthStencilOutput&gt; Graphics::m_pBackBufferDsv</definition>
        <argsstring></argsstring>
        <name>m_pBackBufferDsv</name>
        <qualifiedname>Graphics::m_pBackBufferDsv</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="100" column="17" bodyfile="inc/graphics.h" bodystart="100" bodyend="-1"/>
        <referencedby refid="classGraphics_aecb2784a1b3b55dd7b1f90f52cd09297_1aecb2784a1b3b55dd7b1f90f52cd09297" compoundref="graphics_8cpp" startline="679" endline="689">getDepthBufferFromBackBuffer</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a38b40521639124e322cf9b63c1b6c26f_1a38b40521639124e322cf9b63c1b6c26f" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classTextureOffscreenRT" kindref="compound">TextureOffscreenRT</ref> &gt;</type>
        <definition>std::shared_ptr&lt;TextureOffscreenRT&gt; Graphics::m_pOffscreenRtv</definition>
        <argsstring></argsstring>
        <name>m_pOffscreenRtv</name>
        <qualifiedname>Graphics::m_pOffscreenRtv</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="101" column="17" bodyfile="inc/graphics.h" bodystart="101" bodyend="-1"/>
        <referencedby refid="classGraphics_a506691019858e4dbe5c5b4477f73f38f_1a506691019858e4dbe5c5b4477f73f38f" compoundref="graphics_8cpp" startline="691" endline="703">getRenderTargetOffscreen</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a22e51ce136cf34e39ac7745c4490de4d_1a22e51ce136cf34e39ac7745c4490de4d" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classTextureOffscreenDS" kindref="compound">TextureOffscreenDS</ref> &gt;</type>
        <definition>std::shared_ptr&lt;TextureOffscreenDS&gt; Graphics::m_pOffscreenDsv</definition>
        <argsstring></argsstring>
        <name>m_pOffscreenDsv</name>
        <qualifiedname>Graphics::m_pOffscreenDsv</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="102" column="17" bodyfile="inc/graphics.h" bodystart="102" bodyend="-1"/>
        <referencedby refid="classGraphics_a084646abddc266bd1098f7fec6fc6d93_1a084646abddc266bd1098f7fec6fc6d93" compoundref="graphics_8cpp" startline="705" endline="717">getDepthBufferOffscreen</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a6492e28efe827048fcf68db711c33e69_1a6492e28efe827048fcf68db711c33e69" prot="private" static="no" mutable="no">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Graphics::m_projection</definition>
        <argsstring></argsstring>
        <name>m_projection</name>
        <qualifiedname>Graphics::m_projection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="107" column="19" bodyfile="inc/graphics.h" bodystart="107" bodyend="-1"/>
        <referencedby refid="classGraphics_a89eb80f0fd26a04206c4654c9928ca57_1a89eb80f0fd26a04206c4654c9928ca57" compoundref="graphics_8cpp" startline="648" endline="651">getProjectionMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a953a1c18c19e3ff6a84e43ddab99da2a_1a953a1c18c19e3ff6a84e43ddab99da2a" prot="private" static="no" mutable="no">
        <type>DirectX::XMMATRIX</type>
        <definition>DirectX::XMMATRIX Graphics::m_view</definition>
        <argsstring></argsstring>
        <name>m_view</name>
        <qualifiedname>Graphics::m_view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="108" column="19" bodyfile="inc/graphics.h" bodystart="108" bodyend="-1"/>
        <referencedby refid="classGraphics_a51c3473e1b393df2a67432a10a8979cc_1a51c3473e1b393df2a67432a10a8979cc" compoundref="graphics_8cpp" startline="643" endline="646">getViewMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_ae0b5cbf6ca77fd072fbd23ad50c9336d_1ae0b5cbf6ca77fd072fbd23ad50c9336d" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Graphics::m_currentFrame</definition>
        <argsstring></argsstring>
        <name>m_currentFrame</name>
        <qualifiedname>Graphics::m_currentFrame</qualifiedname>
        <initializer>= 0u</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="109" column="8" bodyfile="inc/graphics.h" bodystart="109" bodyend="-1"/>
        <referencedby refid="classGraphics_ac25c31fbc763dc6970ae9c730b441129_1ac25c31fbc763dc6970ae9c730b441129" compoundref="graphics_8cpp" startline="504" endline="527">beginFrame</referencedby>
        <referencedby refid="classGraphics_a320484260cb43b55ed1c4e0a468a1fa2_1a320484260cb43b55ed1c4e0a468a1fa2" compoundref="graphics_8cpp" startline="407" endline="410">getFrameNum</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_ab66e3729912e3c267d200d7d1ee35af2_1ab66e3729912e3c267d200d7d1ee35af2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ID3D11DeviceContext * &gt;</type>
        <definition>std::vector&lt;ID3D11DeviceContext*&gt; Graphics::m_deferredContexts</definition>
        <argsstring></argsstring>
        <name>m_deferredContexts</name>
        <qualifiedname>Graphics::m_deferredContexts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="110" column="13" bodyfile="inc/graphics.h" bodystart="110" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a2e75ada04a8515bf3504a539112bba05_1a2e75ada04a8515bf3504a539112bba05" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ID3D11CommandList * &gt;</type>
        <definition>std::vector&lt;ID3D11CommandList*&gt; Graphics::m_commandLists</definition>
        <argsstring></argsstring>
        <name>m_commandLists</name>
        <qualifiedname>Graphics::m_commandLists</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="111" column="13" bodyfile="inc/graphics.h" bodystart="111" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_aa810ea01a036c99e63ca86974ff85d13_1aa810ea01a036c99e63ca86974ff85d13" compoundref="graphics_8cpp" startline="480" endline="502">cleanState</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classren_1_1Renderer" kindref="compound">ren::Renderer</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ren::Renderer&gt; Graphics::m_pRenderer</definition>
        <argsstring></argsstring>
        <name>m_pRenderer</name>
        <qualifiedname>Graphics::m_pRenderer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="112" column="17" bodyfile="inc/graphics.h" bodystart="112" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_a3db48982641ea1fb21947e1524af9648_1a3db48982641ea1fb21947e1524af9648" compoundref="graphics_8cpp" startline="529" endline="546">endFrame</referencedby>
        <referencedby refid="classGraphics_ad411222985a4f1db857bbd79a9d324db_1ad411222985a4f1db857bbd79a9d324db" compoundref="graphics_8cpp" startline="417" endline="420">getRenderer</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
        <referencedby refid="classGraphics_a48c55f80bdfdba34f8282ddc4c656e8a_1a48c55f80bdfdba34f8282ddc4c656e8a" compoundref="graphics_8cpp" startline="412" endline="415">runRenderer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a23f562aa7303bb49e73bb104a7d50271_1a23f562aa7303bb49e73bb104a7d50271" prot="private" static="no" mutable="no">
        <type><ref refid="classren_1_1Renderer3d" kindref="compound">ren::Renderer3d</ref> *</type>
        <definition>ren::Renderer3d* Graphics::m_pRenderer3d</definition>
        <argsstring></argsstring>
        <name>m_pRenderer3d</name>
        <qualifiedname>Graphics::m_pRenderer3d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="113" column="17" bodyfile="inc/graphics.h" bodystart="113" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_a2318eb0a55cbadf1eeeb7fe565b6b5cb_1a2318eb0a55cbadf1eeeb7fe565b6b5cb" compoundref="graphics_8cpp" startline="422" endline="426">getRenderer3d</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_ae24eda5d4c47a906eafa9555bf76c70e_1ae24eda5d4c47a906eafa9555bf76c70e" prot="private" static="no" mutable="no">
        <type><ref refid="classren_1_1Renderer2d" kindref="compound">ren::Renderer2d</ref> *</type>
        <definition>ren::Renderer2d* Graphics::m_pRenderer2d</definition>
        <argsstring></argsstring>
        <name>m_pRenderer2d</name>
        <qualifiedname>Graphics::m_pRenderer2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="114" column="17" bodyfile="inc/graphics.h" bodystart="114" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_ab1d1528c7a038c5ed47d392718603a7c_1ab1d1528c7a038c5ed47d392718603a7c" compoundref="graphics_8cpp" startline="428" endline="432">getRenderer2d</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_ad6709c3134a823fa8ef55de9542cf2f9_1ad6709c3134a823fa8ef55de9542cf2f9" prot="private" static="no" mutable="no">
        <type><ref refid="classKeyTimer" kindref="compound">KeyTimer</ref>&lt; std::chrono::microseconds &gt;</type>
        <definition>KeyTimer&lt;std::chrono::microseconds&gt; Graphics::m_fpsTimer</definition>
        <argsstring></argsstring>
        <name>m_fpsTimer</name>
        <qualifiedname>Graphics::m_fpsTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="115" column="10" bodyfile="inc/graphics.h" bodystart="115" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_ace65c05b562f91e3270dc6c12836e0d8_1ace65c05b562f91e3270dc6c12836e0d8" compoundref="graphics_8cpp" startline="755" endline="758">getFpsTimer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_ab51ca0bbae080a1912493a2ef70cdec1_1ab51ca0bbae080a1912493a2ef70cdec1" prot="private" static="no" mutable="no">
        <type><ref refid="classKeyTimer" kindref="compound">KeyTimer</ref>&lt; std::chrono::seconds &gt;</type>
        <definition>KeyTimer&lt;std::chrono::seconds&gt; Graphics::m_realTimer</definition>
        <argsstring></argsstring>
        <name>m_realTimer</name>
        <qualifiedname>Graphics::m_realTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="116" column="10" bodyfile="inc/graphics.h" bodystart="116" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_a537fbfc5679f9f4001cdaa53ac233bb7_1a537fbfc5679f9f4001cdaa53ac233bb7" compoundref="graphics_8cpp" startline="760" endline="763">getRealTimer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_ae0c36774c2093f5cfc1424187b0e1c31_1ae0c36774c2093f5cfc1424187b0e1c31" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Graphics::m_bFullscreenMode</definition>
        <argsstring></argsstring>
        <name>m_bFullscreenMode</name>
        <qualifiedname>Graphics::m_bFullscreenMode</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="117" column="6" bodyfile="inc/graphics.h" bodystart="117" bodyend="-1"/>
        <referencedby refid="classGraphics_a871f96e949cae3f78aeb35f441e4fe7a_1a871f96e949cae3f78aeb35f441e4fe7a" compoundref="graphics_8cpp" startline="770" endline="773">getDisplayMode</referencedby>
        <referencedby refid="classGraphics_a01fc5b831899ec962977d6e132575283_1a01fc5b831899ec962977d6e132575283" compoundref="graphics_8cpp" startline="765" endline="768">getDisplayMode</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classGraphics_a756515d158986ac14d289551b3531ed8_1a756515d158986ac14d289551b3531ed8" prot="private" static="no" mutable="no">
        <type><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref> *</type>
        <definition>ColorBGRA* Graphics::m_pCpuBuffer</definition>
        <argsstring></argsstring>
        <name>m_pCpuBuffer</name>
        <qualifiedname>Graphics::m_pCpuBuffer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>d2d via d3d Interoperability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="177" column="11" bodyfile="inc/graphics.h" bodystart="177" bodyend="-1"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
        <referencedby refid="classGraphics_a7841c9a961ac9bca33bd30ddf8066cdb_1a7841c9a961ac9bca33bd30ddf8066cdb" compoundref="graphics_8cpp" startline="254" endline="271">~Graphics</referencedby>
        <referencedby refid="classGraphics_ac25c31fbc763dc6970ae9c730b441129_1ac25c31fbc763dc6970ae9c730b441129" compoundref="graphics_8cpp" startline="504" endline="527">beginFrame</referencedby>
        <referencedby refid="classGraphics_a4d6cdd9c40b62e88ede5f063b3192d29_1a4d6cdd9c40b62e88ede5f063b3192d29" compoundref="graphics_8cpp" startline="628" endline="631">cpuBuffer</referencedby>
        <referencedby refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" compoundref="graphics_8cpp" startline="918" endline="927">putPixel</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Graphics::Graphics</definition>
        <argsstring>(const HWND hWnd, const int width, const int height, const MultisamplingMode multisamplingMode=MultisamplingMode::None)</argsstring>
        <name>Graphics</name>
        <qualifiedname>Graphics::Graphics</qualifiedname>
        <param>
          <type>const HWND</type>
          <declname>hWnd</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const <ref refid="texture__desc_8h_a5a6f50353d158fb3e2d2234fde1353a4_1a5a6f50353d158fb3e2d2234fde1353a4" kindref="member">MultisamplingMode</ref></type>
          <declname>multisamplingMode</declname>
          <defval><ref refid="texture__desc_8h_a5a6f50353d158fb3e2d2234fde1353a4_1a5a6f50353d158fb3e2d2234fde1353a4ac9d3e887722f2bc482bcca9d41c512af" kindref="member">MultisamplingMode::None</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="119" column="1" bodyfile="src/graphics.cpp" bodystart="99" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a7841c9a961ac9bca33bd30ddf8066cdb_1a7841c9a961ac9bca33bd30ddf8066cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Graphics::~Graphics</definition>
        <argsstring>()</argsstring>
        <name>~Graphics</name>
        <qualifiedname>Graphics::~Graphics</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="120" column="1" bodyfile="src/graphics.cpp" bodystart="254" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a9901788d977a1cb176ffc589bc7a9488_1a9901788d977a1cb176ffc589bc7a9488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::makeWindowAssociationWithFactory</definition>
        <argsstring>(HWND hWnd, const UINT flags)</argsstring>
        <name>makeWindowAssociationWithFactory</name>
        <qualifiedname>Graphics::makeWindowAssociationWithFactory</qualifiedname>
        <param>
          <type>HWND</type>
          <declname>hWnd</declname>
        </param>
        <param>
          <type>const UINT</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="122" column="6" bodyfile="src/graphics.cpp" bodystart="90" bodyend="97"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a9c3fa6f796b990c8d62a77bb2146740c_1a9c3fa6f796b990c8d62a77bb2146740c" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::profile</definition>
        <argsstring>() const noexcept</argsstring>
        <name>profile</name>
        <qualifiedname>Graphics::profile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="123" column="6" bodyfile="src/graphics.cpp" bodystart="434" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a658256d93cbb6e78b8b0ecb319e38ad5_1a658256d93cbb6e78b8b0ecb319e38ad5" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::clearShaderSlots</definition>
        <argsstring>() noexcept</argsstring>
        <name>clearShaderSlots</name>
        <qualifiedname>Graphics::clearShaderSlots</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="124" column="6" bodyfile="src/graphics.cpp" bodystart="454" bodyend="478"/>
        <referencedby refid="classGraphics_ac25c31fbc763dc6970ae9c730b441129_1ac25c31fbc763dc6970ae9c730b441129" compoundref="graphics_8cpp" startline="504" endline="527">beginFrame</referencedby>
        <referencedby refid="classGraphics_aa810ea01a036c99e63ca86974ff85d13_1aa810ea01a036c99e63ca86974ff85d13" compoundref="graphics_8cpp" startline="480" endline="502">cleanState</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_aa810ea01a036c99e63ca86974ff85d13_1aa810ea01a036c99e63ca86974ff85d13" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::cleanState</definition>
        <argsstring>() noexcept</argsstring>
        <name>cleanState</name>
        <qualifiedname>Graphics::cleanState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="125" column="6" bodyfile="src/graphics.cpp" bodystart="480" bodyend="502"/>
        <referencedby refid="classGraphics_a7841c9a961ac9bca33bd30ddf8066cdb_1a7841c9a961ac9bca33bd30ddf8066cdb" compoundref="graphics_8cpp" startline="254" endline="271">~Graphics</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_ac25c31fbc763dc6970ae9c730b441129_1ac25c31fbc763dc6970ae9c730b441129" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::beginFrame</definition>
        <argsstring>() noexcept</argsstring>
        <name>beginFrame</name>
        <qualifiedname>Graphics::beginFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="126" column="6" bodyfile="src/graphics.cpp" bodystart="504" bodyend="527"/>
        <referencedby refid="classArkanoid_a8f5ce76dfb2c9b342004ecb6754d0af9_1a8f5ce76dfb2c9b342004ecb6754d0af9" compoundref="game_8cpp" startline="739" endline="751">Arkanoid::render</referencedby>
        <referencedby refid="classSandbox3d_a824771f328f2073b51ad89687d826d05_1a824771f328f2073b51ad89687d826d05" compoundref="game_8cpp" startline="475" endline="512">Sandbox3d::render</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a3db48982641ea1fb21947e1524af9648_1a3db48982641ea1fb21947e1524af9648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::endFrame</definition>
        <argsstring>()</argsstring>
        <name>endFrame</name>
        <qualifiedname>Graphics::endFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="127" column="6" bodyfile="src/graphics.cpp" bodystart="529" bodyend="546"/>
        <referencedby refid="classGame_a5703dfb57ce49ecfc644b9be76a65fa2_1a5703dfb57ce49ecfc644b9be76a65fa2" compoundref="game_8cpp" startline="128" endline="131">Game&lt; T &gt;::present</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a3c4a1c6f6675b97cedf9a0f45901212d_1a3c4a1c6f6675b97cedf9a0f45901212d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::draw</definition>
        <argsstring>(const unsigned count) cond_noex</argsstring>
        <name>draw</name>
        <qualifiedname>Graphics::draw</qualifiedname>
        <param>
          <type>const unsigned</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="128" column="6" bodyfile="src/graphics.cpp" bodystart="588" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a29fa45ba5e44f5e574e4d0c0298bd02b_1a29fa45ba5e44f5e574e4d0c0298bd02b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::drawIndexed</definition>
        <argsstring>(const unsigned count) cond_noex</argsstring>
        <name>drawIndexed</name>
        <qualifiedname>Graphics::drawIndexed</qualifiedname>
        <param>
          <type>const unsigned</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="129" column="6" bodyfile="src/graphics.cpp" bodystart="594" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a1e53b789df983b36aedcc1357eae4bf8_1a1e53b789df983b36aedcc1357eae4bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::drawIndexedInstanced</definition>
        <argsstring>(const unsigned indexCount, const unsigned instanceCount) cond_noex</argsstring>
        <name>drawIndexedInstanced</name>
        <qualifiedname>Graphics::drawIndexedInstanced</qualifiedname>
        <param>
          <type>const unsigned</type>
          <declname>indexCount</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>instanceCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="130" column="6" bodyfile="src/graphics.cpp" bodystart="610" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a4d6cdd9c40b62e88ede5f063b3192d29_1a4d6cdd9c40b62e88ede5f063b3192d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref> *&amp;</type>
        <definition>ColorBGRA *&amp; Graphics::cpuBuffer</definition>
        <argsstring>()</argsstring>
        <name>cpuBuffer</name>
        <qualifiedname>Graphics::cpuBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="131" column="11" bodyfile="src/graphics.cpp" bodystart="628" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a1318c2c7f400f63a1b70391bebab4673_1a1318c2c7f400f63a1b70391bebab4673" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::setViewMatrix</definition>
        <argsstring>(const DirectX::XMMATRIX &amp;cam) noexcept</argsstring>
        <name>setViewMatrix</name>
        <qualifiedname>Graphics::setViewMatrix</qualifiedname>
        <param>
          <type>const DirectX::XMMATRIX &amp;</type>
          <declname>cam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="132" column="6" bodyfile="src/graphics.cpp" bodystart="633" bodyend="636"/>
        <referencedby refid="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" compoundref="camera_8cpp" startline="140" endline="147">Camera::makeActive</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a2ae47898ec3e6e2a64b3a8149a26ca6d_1a2ae47898ec3e6e2a64b3a8149a26ca6d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::setProjectionMatrix</definition>
        <argsstring>(const DirectX::XMMATRIX &amp;proj) noexcept</argsstring>
        <name>setProjectionMatrix</name>
        <qualifiedname>Graphics::setProjectionMatrix</qualifiedname>
        <param>
          <type>const DirectX::XMMATRIX &amp;</type>
          <declname>proj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="133" column="6" bodyfile="src/graphics.cpp" bodystart="638" bodyend="641"/>
        <referencedby refid="classCamera_afa376be968f4fbe01a9085749cbe42fa_1afa376be968f4fbe01a9085749cbe42fa" compoundref="camera_8cpp" startline="140" endline="147">Camera::makeActive</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a51c3473e1b393df2a67432a10a8979cc_1a51c3473e1b393df2a67432a10a8979cc" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const DirectX::XMMATRIX &amp;</type>
        <definition>const dx::XMMATRIX &amp; Graphics::getViewMatrix</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getViewMatrix</name>
        <qualifiedname>Graphics::getViewMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="134" column="25" bodyfile="src/graphics.cpp" bodystart="643" bodyend="646"/>
        <referencedby refid="classMousePicker_a789aea5c9a3de530f39d04afa03c5aaf_1a789aea5c9a3de530f39d04afa03c5aaf" compoundref="mouse__picker_8cpp" startline="76" endline="81">MousePicker::convertToWorldSpace</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a89eb80f0fd26a04206c4654c9928ca57_1a89eb80f0fd26a04206c4654c9928ca57" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const DirectX::XMMATRIX &amp;</type>
        <definition>const dx::XMMATRIX &amp; Graphics::getProjectionMatrix</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getProjectionMatrix</name>
        <qualifiedname>Graphics::getProjectionMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="135" column="25" bodyfile="src/graphics.cpp" bodystart="648" bodyend="651"/>
        <referencedby refid="classMousePicker_a2ff67bebeeb0eedb3bef5989f71b36c0_1a2ff67bebeeb0eedb3bef5989f71b36c0" compoundref="mouse__picker_8cpp" startline="53" endline="67">MousePicker::convertToClip</referencedby>
        <referencedby refid="classMousePicker_aee007eaa1b3acb26ee10e14680ddaa18_1aee007eaa1b3acb26ee10e14680ddaa18" compoundref="mouse__picker_8cpp" startline="69" endline="74">MousePicker::convertToViewSpace</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_af1489a7a2f0b6cf0f94f31ccb03943fa_1af1489a7a2f0b6cf0f94f31ccb03943fa" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Graphics::getClientWidth</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getClientWidth</name>
        <qualifiedname>Graphics::getClientWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="136" column="10" bodyfile="src/graphics.cpp" bodystart="653" bodyend="656"/>
        <referencedby refid="classren_1_1HorizontalBlurPass_a029eb9952ee3b7515e7734f46733d70c_1a029eb9952ee3b7515e7734f46733d70c" compoundref="horizontal__blur__pass_8cpp" startline="10" endline="35">ren::HorizontalBlurPass::HorizontalBlurPass</referencedby>
        <referencedby refid="classren_1_1Pass2D_adc44db26e4e8dce5aa8450b875541109_1adc44db26e4e8dce5aa8450b875541109" compoundref="pass__2d_8cpp" startline="28" endline="84">ren::Pass2D::Pass2D</referencedby>
        <referencedby refid="classPointLight_a3271b738b4de0a84538f382780aef19c_1a3271b738b4de0a84538f382780aef19c" compoundref="light__source_8cpp" startline="320" endline="337">PointLight::PointLight</referencedby>
        <referencedby refid="classMousePicker_abc6d3fb1003bc874fdfef2c18447fff3_1abc6d3fb1003bc874fdfef2c18447fff3" compoundref="mouse__picker_8cpp" startline="47" endline="51">MousePicker::convertToNdc</referencedby>
        <referencedby refid="classgui_1_1Component_aeb8cdab8db99b4a5e89c4d0d13a44536_1aeb8cdab8db99b4a5e89c4d0d13a44536" compoundref="ui__component_8cpp" startline="410" endline="413">gui::Component::notify</referencedby>
        <referencedby refid="classgui_1_1UIPass_a020ffc12ad8cc707ffa8e427361831ae_1a020ffc12ad8cc707ffa8e427361831ae" compoundref="ui__pass_8cpp" startline="29" endline="85">gui::UIPass::recreate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a6b1ed076f5063af9f5814d23df30dc24_1a6b1ed076f5063af9f5814d23df30dc24" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Graphics::getClientHeight</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getClientHeight</name>
        <qualifiedname>Graphics::getClientHeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="137" column="10" bodyfile="src/graphics.cpp" bodystart="658" bodyend="661"/>
        <referencedby refid="classren_1_1HorizontalBlurPass_a029eb9952ee3b7515e7734f46733d70c_1a029eb9952ee3b7515e7734f46733d70c" compoundref="horizontal__blur__pass_8cpp" startline="10" endline="35">ren::HorizontalBlurPass::HorizontalBlurPass</referencedby>
        <referencedby refid="classren_1_1Pass2D_adc44db26e4e8dce5aa8450b875541109_1adc44db26e4e8dce5aa8450b875541109" compoundref="pass__2d_8cpp" startline="28" endline="84">ren::Pass2D::Pass2D</referencedby>
        <referencedby refid="classPointLight_a3271b738b4de0a84538f382780aef19c_1a3271b738b4de0a84538f382780aef19c" compoundref="light__source_8cpp" startline="320" endline="337">PointLight::PointLight</referencedby>
        <referencedby refid="classMousePicker_abc6d3fb1003bc874fdfef2c18447fff3_1abc6d3fb1003bc874fdfef2c18447fff3" compoundref="mouse__picker_8cpp" startline="47" endline="51">MousePicker::convertToNdc</referencedby>
        <referencedby refid="classgui_1_1Component_aeb8cdab8db99b4a5e89c4d0d13a44536_1aeb8cdab8db99b4a5e89c4d0d13a44536" compoundref="ui__component_8cpp" startline="410" endline="413">gui::Component::notify</referencedby>
        <referencedby refid="classgui_1_1UIPass_a020ffc12ad8cc707ffa8e427361831ae_1a020ffc12ad8cc707ffa8e427361831ae" compoundref="ui__pass_8cpp" startline="29" endline="85">gui::UIPass::recreate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a937fe925bd73dc37c24c0b728fabacee_1a937fe925bd73dc37c24c0b728fabacee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classRenderTargetOutput" kindref="compound">RenderTargetOutput</ref> &gt;</type>
        <definition>std::shared_ptr&lt; RenderTargetOutput &gt; Graphics::getRenderTargetFromBackBuffer</definition>
        <argsstring>()</argsstring>
        <name>getRenderTargetFromBackBuffer</name>
        <qualifiedname>Graphics::getRenderTargetFromBackBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="138" column="17" bodyfile="src/graphics.cpp" bodystart="663" bodyend="677"/>
        <referencedby refid="classren_1_1Renderer_adcff6686a1d6685acee17ebc9b9677d3_1adcff6686a1d6685acee17ebc9b9677d3" compoundref="renderer_8cpp" startline="138" endline="142">ren::Renderer::offscreenToBackBufferSwap</referencedby>
        <referencedby refid="classren_1_1Renderer_ae20ba92f5c1d98a6bcb0a04e258991f4_1ae20ba92f5c1d98a6bcb0a04e258991f4" compoundref="renderer_8cpp" startline="50" endline="78">ren::Renderer::recreate</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_aecb2784a1b3b55dd7b1f90f52cd09297_1aecb2784a1b3b55dd7b1f90f52cd09297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classDepthStencilOutput" kindref="compound">DepthStencilOutput</ref> &gt;</type>
        <definition>std::shared_ptr&lt; DepthStencilOutput &gt; Graphics::getDepthBufferFromBackBuffer</definition>
        <argsstring>()</argsstring>
        <name>getDepthBufferFromBackBuffer</name>
        <qualifiedname>Graphics::getDepthBufferFromBackBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="139" column="17" bodyfile="src/graphics.cpp" bodystart="679" bodyend="689"/>
        <referencedby refid="classren_1_1Renderer_ae20ba92f5c1d98a6bcb0a04e258991f4_1ae20ba92f5c1d98a6bcb0a04e258991f4" compoundref="renderer_8cpp" startline="50" endline="78">ren::Renderer::recreate</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a506691019858e4dbe5c5b4477f73f38f_1a506691019858e4dbe5c5b4477f73f38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classTextureOffscreenRT" kindref="compound">TextureOffscreenRT</ref> &gt;</type>
        <definition>std::shared_ptr&lt; TextureOffscreenRT &gt; Graphics::getRenderTargetOffscreen</definition>
        <argsstring>(const unsigned slot, const RenderTargetViewMode rtvMode)</argsstring>
        <name>getRenderTargetOffscreen</name>
        <qualifiedname>Graphics::getRenderTargetOffscreen</qualifiedname>
        <param>
          <type>const unsigned</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>const <ref refid="texture__desc_8h_a6b4948cc0d12c93e6396540e02e2df58_1a6b4948cc0d12c93e6396540e02e2df58" kindref="member">RenderTargetViewMode</ref></type>
          <declname>rtvMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="140" column="17" bodyfile="src/graphics.cpp" bodystart="691" bodyend="703"/>
        <referencedby refid="classren_1_1Renderer_adcff6686a1d6685acee17ebc9b9677d3_1adcff6686a1d6685acee17ebc9b9677d3" compoundref="renderer_8cpp" startline="138" endline="142">ren::Renderer::offscreenToBackBufferSwap</referencedby>
        <referencedby refid="classren_1_1Renderer_ae20ba92f5c1d98a6bcb0a04e258991f4_1ae20ba92f5c1d98a6bcb0a04e258991f4" compoundref="renderer_8cpp" startline="50" endline="78">ren::Renderer::recreate</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a084646abddc266bd1098f7fec6fc6d93_1a084646abddc266bd1098f7fec6fc6d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classTextureOffscreenDS" kindref="compound">TextureOffscreenDS</ref> &gt;</type>
        <definition>std::shared_ptr&lt; TextureOffscreenDS &gt; Graphics::getDepthBufferOffscreen</definition>
        <argsstring>(const unsigned slot, const DepthStencilViewMode dsvMode)</argsstring>
        <name>getDepthBufferOffscreen</name>
        <qualifiedname>Graphics::getDepthBufferOffscreen</qualifiedname>
        <param>
          <type>const unsigned</type>
          <declname>slot</declname>
        </param>
        <param>
          <type>const <ref refid="texture__desc_8h_a5aacc2000fea78d975de8fe06e3698f2_1a5aacc2000fea78d975de8fe06e3698f2" kindref="member">DepthStencilViewMode</ref></type>
          <declname>dsvMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="141" column="17" bodyfile="src/graphics.cpp" bodystart="705" bodyend="717"/>
        <referencedby refid="classren_1_1Renderer_ae20ba92f5c1d98a6bcb0a04e258991f4_1ae20ba92f5c1d98a6bcb0a04e258991f4" compoundref="renderer_8cpp" startline="50" endline="78">ren::Renderer::recreate</referencedby>
        <referencedby refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" compoundref="graphics_8cpp" startline="273" endline="361">resize</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a9a6ad2b28b7f765c6c7ed63b664754d8_1a9a6ad2b28b7f765c6c7ed63b664754d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::bindBackBufferAsInput</definition>
        <argsstring>()</argsstring>
        <name>bindBackBufferAsInput</name>
        <qualifiedname>Graphics::bindBackBufferAsInput</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="142" column="6" bodyfile="src/graphics.cpp" bodystart="719" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a355c17321d44862d7ef0f93416492d6a_1a355c17321d44862d7ef0f93416492d6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::createFactory</definition>
        <argsstring>()</argsstring>
        <name>createFactory</name>
        <qualifiedname>Graphics::createFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="143" column="6" bodyfile="src/graphics.cpp" bodystart="795" bodyend="814"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a80cc8527cd2fab207205fc3962fba585_1a80cc8527cd2fab207205fc3962fba585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::createAdapters</definition>
        <argsstring>()</argsstring>
        <name>createAdapters</name>
        <qualifiedname>Graphics::createAdapters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="144" column="6" bodyfile="src/graphics.cpp" bodystart="816" bodyend="826"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::resize</definition>
        <argsstring>(unsigned newWidth, unsigned newHeight)</argsstring>
        <name>resize</name>
        <qualifiedname>Graphics::resize</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>newWidth</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>newHeight</declname>
        </param>
        <briefdescription>
<para>sets windowed mode or Fullscreen, supply width &amp; height of 0 to resize the buffers for fullscreen mode usage </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="146" column="6" bodyfile="src/graphics.cpp" bodystart="273" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a7dce5b31ab15931acd9812956a118ab2_1a7dce5b31ab15931acd9812956a118ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::setupMonitors</definition>
        <argsstring>()</argsstring>
        <name>setupMonitors</name>
        <qualifiedname>Graphics::setupMonitors</qualifiedname>
        <briefdescription>
<para>sets up the output monitor devices </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="148" column="6" bodyfile="src/graphics.cpp" bodystart="363" bodyend="394"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_ac24292486c6316265844e447ecf3fe6d_1ac24292486c6316265844e447ecf3fe6d" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Graphics::getRefreshRate</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getRefreshRate</name>
        <qualifiedname>Graphics::getRefreshRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="149" column="8" bodyfile="src/graphics.cpp" bodystart="396" bodyend="405"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a320484260cb43b55ed1c4e0a468a1fa2_1a320484260cb43b55ed1c4e0a468a1fa2" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Graphics::getFrameNum</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFrameNum</name>
        <qualifiedname>Graphics::getFrameNum</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="150" column="8" bodyfile="src/graphics.cpp" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a48c55f80bdfdba34f8282ddc4c656e8a_1a48c55f80bdfdba34f8282ddc4c656e8a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::runRenderer</definition>
        <argsstring>() noexcept</argsstring>
        <name>runRenderer</name>
        <qualifiedname>Graphics::runRenderer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="151" column="6" bodyfile="src/graphics.cpp" bodystart="412" bodyend="415"/>
        <referencedby refid="classArkanoid_a8f5ce76dfb2c9b342004ecb6754d0af9_1a8f5ce76dfb2c9b342004ecb6754d0af9" compoundref="game_8cpp" startline="739" endline="751">Arkanoid::render</referencedby>
        <referencedby refid="classSandbox3d_a824771f328f2073b51ad89687d826d05_1a824771f328f2073b51ad89687d826d05" compoundref="game_8cpp" startline="475" endline="512">Sandbox3d::render</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_ad411222985a4f1db857bbd79a9d324db_1ad411222985a4f1db857bbd79a9d324db" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classren_1_1Renderer" kindref="compound">ren::Renderer</ref> &amp;</type>
        <definition>ren::Renderer &amp; Graphics::getRenderer</definition>
        <argsstring>() noexcept</argsstring>
        <name>getRenderer</name>
        <qualifiedname>Graphics::getRenderer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="152" column="15" bodyfile="src/graphics.cpp" bodystart="417" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a2318eb0a55cbadf1eeeb7fe565b6b5cb_1a2318eb0a55cbadf1eeeb7fe565b6b5cb" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classren_1_1Renderer3d" kindref="compound">ren::Renderer3d</ref> &amp;</type>
        <definition>ren::Renderer3d &amp; Graphics::getRenderer3d</definition>
        <argsstring>() noexcept</argsstring>
        <name>getRenderer3d</name>
        <qualifiedname>Graphics::getRenderer3d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="153" column="17" bodyfile="src/graphics.cpp" bodystart="422" bodyend="426"/>
        <referencedby refid="classSandbox3d_a7ac896c9f33a49a24ae47cdf6007f5a1_1a7ac896c9f33a49a24ae47cdf6007f5a1" compoundref="game_8cpp" startline="289" endline="407">Sandbox3d::checkInput</referencedby>
        <referencedby refid="classSandbox3d_a824771f328f2073b51ad89687d826d05_1a824771f328f2073b51ad89687d826d05" compoundref="game_8cpp" startline="475" endline="512">Sandbox3d::render</referencedby>
        <referencedby refid="classSandbox3d_a4b7094621086a4d13d7b5f47e5432ed5_1a4b7094621086a4d13d7b5f47e5432ed5" compoundref="game_8cpp" startline="514" endline="556">Sandbox3d::test</referencedby>
        <referencedby refid="classSandbox3d_aac7b27aa253de8c2f127536da4249833_1aac7b27aa253de8c2f127536da4249833" compoundref="game_8cpp" startline="409" endline="466">Sandbox3d::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_ab1d1528c7a038c5ed47d392718603a7c_1ab1d1528c7a038c5ed47d392718603a7c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classren_1_1Renderer2d" kindref="compound">ren::Renderer2d</ref> &amp;</type>
        <definition>ren::Renderer2d &amp; Graphics::getRenderer2d</definition>
        <argsstring>() noexcept</argsstring>
        <name>getRenderer2d</name>
        <qualifiedname>Graphics::getRenderer2d</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="154" column="17" bodyfile="src/graphics.cpp" bodystart="428" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_ace65c05b562f91e3270dc6c12836e0d8_1ace65c05b562f91e3270dc6c12836e0d8" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classKeyTimer" kindref="compound">KeyTimer</ref>&lt; std::chrono::microseconds &gt; &amp;</type>
        <definition>KeyTimer&lt; std::chrono::microseconds &gt; &amp; Graphics::getFpsTimer</definition>
        <argsstring>() noexcept</argsstring>
        <name>getFpsTimer</name>
        <qualifiedname>Graphics::getFpsTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="158" column="10" bodyfile="src/graphics.cpp" bodystart="755" bodyend="758"/>
        <referencedby refid="structgui_1_1Component_1_1Component__State_a5093045ce8afda0f6b42a7ed54c33bdf_1a5093045ce8afda0f6b42a7ed54c33bdf" compoundref="ui__component_8cpp" startline="23" endline="87">gui::Component::Component_State::Component_State</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a537fbfc5679f9f4001cdaa53ac233bb7_1a537fbfc5679f9f4001cdaa53ac233bb7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classKeyTimer" kindref="compound">KeyTimer</ref>&lt; std::chrono::seconds &gt; &amp;</type>
        <definition>KeyTimer&lt; std::chrono::seconds &gt; &amp; Graphics::getRealTimer</definition>
        <argsstring>() noexcept</argsstring>
        <name>getRealTimer</name>
        <qualifiedname>Graphics::getRealTimer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="159" column="10" bodyfile="src/graphics.cpp" bodystart="760" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a01fc5b831899ec962977d6e132575283_1a01fc5b831899ec962977d6e132575283" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Graphics::getDisplayMode</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getDisplayMode</name>
        <qualifiedname>Graphics::getDisplayMode</qualifiedname>
        <briefdescription>
<para>returns true if fullscreen application, false otherwise </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="161" column="6" bodyfile="src/graphics.cpp" bodystart="765" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a871f96e949cae3f78aeb35f441e4fe7a_1a871f96e949cae3f78aeb35f441e4fe7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool &amp; Graphics::getDisplayMode</definition>
        <argsstring>()</argsstring>
        <name>getDisplayMode</name>
        <qualifiedname>Graphics::getDisplayMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="162" column="6" bodyfile="src/graphics.cpp" bodystart="770" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_ac0920b9480e1d140de868e7526d62074_1ac0920b9480e1d140de868e7526d62074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::recordDeferredCommandList</definition>
        <argsstring>()</argsstring>
        <name>recordDeferredCommandList</name>
        <qualifiedname>Graphics::recordDeferredCommandList</qualifiedname>
        <briefdescription>
<para>probably should call this when the <ref refid="classModel" kindref="compound">Model</ref> is being loaded not when pass-&gt;run() -&gt; Job-&gt;run() </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="164" column="6" bodyfile="src/graphics.cpp" bodystart="775" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_ada2873db798d493f4bb95d4ccb25c203_1ada2873db798d493f4bb95d4ccb25c203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::playbackDeferredCommandList</definition>
        <argsstring>()</argsstring>
        <name>playbackDeferredCommandList</name>
        <qualifiedname>Graphics::playbackDeferredCommandList</qualifiedname>
        <briefdescription>
<para>ExecuteCommandList must be executed on the immediate context for recorded commands to be run on the GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="166" column="6" bodyfile="src/graphics.cpp" bodystart="787" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a772e015f5d4e2838186d75f7fff38537_1a772e015f5d4e2838186d75f7fff38537" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref></type>
        <definition>ColorBGRA Graphics::getPixel</definition>
        <argsstring>(const int x, const int y) const noexcept</argsstring>
        <name>getPixel</name>
        <qualifiedname>Graphics::getPixel</qualifiedname>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>d2d via d3d Interoperability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="179" column="11" bodyfile="src/graphics.cpp" bodystart="908" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::putPixel</definition>
        <argsstring>(const int x, const int y, const ColorBGRA color)</argsstring>
        <name>putPixel</name>
        <qualifiedname>Graphics::putPixel</qualifiedname>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="180" column="6" bodyfile="src/graphics.cpp" bodystart="918" bodyend="927"/>
        <referencedby refid="classGraphics_ad6ed9684c70ad5a7c5bd5335a1776d17_1ad6ed9684c70ad5a7c5bd5335a1776d17" compoundref="graphics_8cpp" startline="1046" endline="1067">drawCircle</referencedby>
        <referencedby refid="classGraphics_a0cd69139e91c30dcf1db018d3093dcf9_1a0cd69139e91c30dcf1db018d3093dcf9" compoundref="graphics_8cpp" startline="938" endline="989">drawLine</referencedby>
        <referencedby refid="classGraphics_aa7d408ae4c83eac1858dafa707e84799_1aa7d408ae4c83eac1858dafa707e84799" compoundref="graphics_8cpp" startline="991" endline="1013">drawRectangle</referencedby>
        <referencedby refid="classGraphics_a679fdec87f220496e1e9a9fb96abb8ce_1a679fdec87f220496e1e9a9fb96abb8ce" compoundref="graphics_8cpp" startline="1069" endline="1090">drawStar</referencedby>
        <referencedby refid="classGraphics_ad425ade3dafccfc45cbd83ff960d34e9_1ad425ade3dafccfc45cbd83ff960d34e9" compoundref="graphics_8cpp" startline="929" endline="936">putPixel</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_ad425ade3dafccfc45cbd83ff960d34e9_1ad425ade3dafccfc45cbd83ff960d34e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::putPixel</definition>
        <argsstring>(const int x, const int y, const int r, const int g, const int b)</argsstring>
        <name>putPixel</name>
        <qualifiedname>Graphics::putPixel</qualifiedname>
        <param>
          <type>const int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="181" column="6" bodyfile="src/graphics.cpp" bodystart="929" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a0cd69139e91c30dcf1db018d3093dcf9_1a0cd69139e91c30dcf1db018d3093dcf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::drawLine</definition>
        <argsstring>(int x0, int x1, int y0, int y1, const ColorBGRA col)</argsstring>
        <name>drawLine</name>
        <qualifiedname>Graphics::drawLine</qualifiedname>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>const <ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref></type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>uses the Bresenham algorithm to draw lines, ie. connect 2d positions together by drawing straight lines between them </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="184" column="6" bodyfile="src/graphics.cpp" bodystart="938" bodyend="989"/>
        <referencedby refid="classGraphics_aed08b42d035efb0db4a31fa39acd28c0_1aed08b42d035efb0db4a31fa39acd28c0" compoundref="graphics_8cpp" startline="1030" endline="1044">drawTriangle</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_aa7d408ae4c83eac1858dafa707e84799_1aa7d408ae4c83eac1858dafa707e84799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::drawRectangle</definition>
        <argsstring>(int x0, int y0, int x1, int y1, const ColorBGRA col)</argsstring>
        <name>drawRectangle</name>
        <qualifiedname>Graphics::drawRectangle</qualifiedname>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>const <ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref></type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="185" column="6" bodyfile="src/graphics.cpp" bodystart="991" bodyend="1013"/>
        <referencedby refid="classGraphics_a3e92d46a1cf734a4916a45485775b5b0_1a3e92d46a1cf734a4916a45485775b5b0" compoundref="graphics_8cpp" startline="1015" endline="1019">drawRectangle</referencedby>
        <referencedby refid="classGraphics_ad2c624508f0ca102a2af94d107c7d697_1ad2c624508f0ca102a2af94d107c7d697" compoundref="graphics_8cpp" startline="1021" endline="1028">drawRectWH</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a3e92d46a1cf734a4916a45485775b5b0_1a3e92d46a1cf734a4916a45485775b5b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::drawRectangle</definition>
        <argsstring>(const RectangleF &amp;rect, const ColorBGRA col)</argsstring>
        <name>drawRectangle</name>
        <qualifiedname>Graphics::drawRectangle</qualifiedname>
        <param>
          <type>const <ref refid="classRectangleF" kindref="compound">RectangleF</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref></type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="186" column="6" bodyfile="src/graphics.cpp" bodystart="1015" bodyend="1019"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_ad2c624508f0ca102a2af94d107c7d697_1ad2c624508f0ca102a2af94d107c7d697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::drawRectWH</definition>
        <argsstring>(const int x0, const int y0, const int width, const int height, const ColorBGRA col)</argsstring>
        <name>drawRectWH</name>
        <qualifiedname>Graphics::drawRectWH</qualifiedname>
        <param>
          <type>const int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const <ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref></type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="187" column="6" bodyfile="src/graphics.cpp" bodystart="1021" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_aed08b42d035efb0db4a31fa39acd28c0_1aed08b42d035efb0db4a31fa39acd28c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::drawTriangle</definition>
        <argsstring>(int x0, int y0, int x1, int y1, int x2, int y2, const ColorBGRA col)</argsstring>
        <name>drawTriangle</name>
        <qualifiedname>Graphics::drawTriangle</qualifiedname>
        <param>
          <type>int</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>const <ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref></type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="188" column="6" bodyfile="src/graphics.cpp" bodystart="1030" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_ad6ed9684c70ad5a7c5bd5335a1776d17_1ad6ed9684c70ad5a7c5bd5335a1776d17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::drawCircle</definition>
        <argsstring>(const int centerX, const int centerY, const int radius, const ColorBGRA col)</argsstring>
        <name>drawCircle</name>
        <qualifiedname>Graphics::drawCircle</qualifiedname>
        <param>
          <type>const int</type>
          <declname>centerX</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>centerY</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref></type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="189" column="6" bodyfile="src/graphics.cpp" bodystart="1046" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a679fdec87f220496e1e9a9fb96abb8ce_1a679fdec87f220496e1e9a9fb96abb8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::drawStar</definition>
        <argsstring>(const float outerRadius, const float innerRadius, const ColorBGRA color, const int nFlares=5)</argsstring>
        <name>drawStar</name>
        <qualifiedname>Graphics::drawStar</qualifiedname>
        <param>
          <type>const float</type>
          <declname>outerRadius</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>innerRadius</declname>
        </param>
        <param>
          <type>const <ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nFlares</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="190" column="6" bodyfile="src/graphics.cpp" bodystart="1069" bodyend="1090"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classGraphics_aefe40c94ce078f84342864b959543c99_1aefe40c94ce078f84342864b959543c99" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::present</definition>
        <argsstring>()</argsstring>
        <name>present</name>
        <qualifiedname>Graphics::present</qualifiedname>
        <briefdescription>
<para>present the frame to DWM </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="169" column="6" bodyfile="src/graphics.cpp" bodystart="548" bodyend="586"/>
        <referencedby refid="classGraphics_a3db48982641ea1fb21947e1524af9648_1a3db48982641ea1fb21947e1524af9648" compoundref="graphics_8cpp" startline="529" endline="546">endFrame</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a5cc0d3b4dd8e0c60c55a67c31b3b64f9_1a5cc0d3b4dd8e0c60c55a67c31b3b64f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Graphics::interrogateDirectxFeatures</definition>
        <argsstring>()</argsstring>
        <name>interrogateDirectxFeatures</name>
        <qualifiedname>Graphics::interrogateDirectxFeatures</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="170" column="6" bodyfile="src/graphics.cpp" bodystart="828" bodyend="868"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
      </memberdef>
      <memberdef kind="function" id="classGraphics_a4d2ce74d9116c803e4f5514fa9a8e51f_1a4d2ce74d9116c803e4f5514fa9a8e51f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Graphics::checkTearingSupport</definition>
        <argsstring>()</argsstring>
        <name>checkTearingSupport</name>
        <qualifiedname>Graphics::checkTearingSupport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/graphics.h" line="171" column="6" bodyfile="src/graphics.cpp" bodystart="870" bodyend="885"/>
        <referencedby refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" compoundref="graphics_8cpp" startline="99" endline="252">Graphics</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="classGraphics" kindref="compound">Graphics</ref> API (d3d11) encapsulator. </para>
    </briefdescription>
    <detaileddescription>
<para>=============================================================</para>
<para><simplesect kind="author"><para>KeyC0de </para>
</simplesect>
<simplesect kind="date"><para>2022/09/13 22:51</para>
</simplesect>
provides classic blt presentation functionality <heading level="1">as well as upgraded DXGI 1.2 API with Flip enhanced presentation model (aiming for Independent Flip) </heading>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Graphics</label>
        <link refid="classGraphics"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NonCopyableAndNonMovable</label>
        <link refid="classNonCopyableAndNonMovable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>ColorBGRA</label>
        <link refid="structColorBGRA"/>
      </node>
      <node id="1">
        <label>Graphics</label>
        <link refid="classGraphics"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_pRenderer3d</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_pRenderer2d</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_fpsTimer</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_realTimer</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_pCpuBuffer</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>KeyTimer&lt; std::chrono::microseconds &gt;</label>
        <link refid="classKeyTimer"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>KeyTimer&lt; std::chrono::seconds &gt;</label>
        <link refid="classKeyTimer"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NonCopyableAndNonMovable</label>
        <link refid="classNonCopyableAndNonMovable"/>
      </node>
      <node id="4">
        <label>ren::Renderer</label>
        <link refid="classren_1_1Renderer"/>
      </node>
      <node id="5">
        <label>ren::Renderer2d</label>
        <link refid="classren_1_1Renderer2d"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ren::Renderer3d</label>
        <link refid="classren_1_1Renderer3d"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/graphics.h" line="55" column="1" bodyfile="inc/graphics.h" bodystart="57" bodyend="218"/>
    <listofallmembers>
      <member refid="classGraphics_ac25c31fbc763dc6970ae9c730b441129_1ac25c31fbc763dc6970ae9c730b441129" prot="public" virt="non-virtual"><scope>Graphics</scope><name>beginFrame</name></member>
      <member refid="classGraphics_a9a6ad2b28b7f765c6c7ed63b664754d8_1a9a6ad2b28b7f765c6c7ed63b664754d8" prot="public" virt="non-virtual"><scope>Graphics</scope><name>bindBackBufferAsInput</name></member>
      <member refid="classGraphics_a4d2ce74d9116c803e4f5514fa9a8e51f_1a4d2ce74d9116c803e4f5514fa9a8e51f" prot="private" virt="non-virtual"><scope>Graphics</scope><name>checkTearingSupport</name></member>
      <member refid="classGraphics_aa810ea01a036c99e63ca86974ff85d13_1aa810ea01a036c99e63ca86974ff85d13" prot="public" virt="non-virtual"><scope>Graphics</scope><name>cleanState</name></member>
      <member refid="classGraphics_a658256d93cbb6e78b8b0ecb319e38ad5_1a658256d93cbb6e78b8b0ecb319e38ad5" prot="public" virt="non-virtual"><scope>Graphics</scope><name>clearShaderSlots</name></member>
      <member refid="classGraphics_a4d6cdd9c40b62e88ede5f063b3192d29_1a4d6cdd9c40b62e88ede5f063b3192d29" prot="public" virt="non-virtual"><scope>Graphics</scope><name>cpuBuffer</name></member>
      <member refid="classGraphics_a80cc8527cd2fab207205fc3962fba585_1a80cc8527cd2fab207205fc3962fba585" prot="public" virt="non-virtual"><scope>Graphics</scope><name>createAdapters</name></member>
      <member refid="classGraphics_a355c17321d44862d7ef0f93416492d6a_1a355c17321d44862d7ef0f93416492d6a" prot="public" virt="non-virtual"><scope>Graphics</scope><name>createFactory</name></member>
      <member refid="classGraphics_a3c4a1c6f6675b97cedf9a0f45901212d_1a3c4a1c6f6675b97cedf9a0f45901212d" prot="public" virt="non-virtual"><scope>Graphics</scope><name>draw</name></member>
      <member refid="classGraphics_ad6ed9684c70ad5a7c5bd5335a1776d17_1ad6ed9684c70ad5a7c5bd5335a1776d17" prot="public" virt="non-virtual"><scope>Graphics</scope><name>drawCircle</name></member>
      <member refid="classGraphics_a29fa45ba5e44f5e574e4d0c0298bd02b_1a29fa45ba5e44f5e574e4d0c0298bd02b" prot="public" virt="non-virtual"><scope>Graphics</scope><name>drawIndexed</name></member>
      <member refid="classGraphics_a1e53b789df983b36aedcc1357eae4bf8_1a1e53b789df983b36aedcc1357eae4bf8" prot="public" virt="non-virtual"><scope>Graphics</scope><name>drawIndexedInstanced</name></member>
      <member refid="classGraphics_a0cd69139e91c30dcf1db018d3093dcf9_1a0cd69139e91c30dcf1db018d3093dcf9" prot="public" virt="non-virtual"><scope>Graphics</scope><name>drawLine</name></member>
      <member refid="classGraphics_aa7d408ae4c83eac1858dafa707e84799_1aa7d408ae4c83eac1858dafa707e84799" prot="public" virt="non-virtual"><scope>Graphics</scope><name>drawRectangle</name></member>
      <member refid="classGraphics_a3e92d46a1cf734a4916a45485775b5b0_1a3e92d46a1cf734a4916a45485775b5b0" prot="public" virt="non-virtual"><scope>Graphics</scope><name>drawRectangle</name></member>
      <member refid="classGraphics_ad2c624508f0ca102a2af94d107c7d697_1ad2c624508f0ca102a2af94d107c7d697" prot="public" virt="non-virtual"><scope>Graphics</scope><name>drawRectWH</name></member>
      <member refid="classGraphics_a679fdec87f220496e1e9a9fb96abb8ce_1a679fdec87f220496e1e9a9fb96abb8ce" prot="public" virt="non-virtual"><scope>Graphics</scope><name>drawStar</name></member>
      <member refid="classGraphics_aed08b42d035efb0db4a31fa39acd28c0_1aed08b42d035efb0db4a31fa39acd28c0" prot="public" virt="non-virtual"><scope>Graphics</scope><name>drawTriangle</name></member>
      <member refid="classGraphics_a3db48982641ea1fb21947e1524af9648_1a3db48982641ea1fb21947e1524af9648" prot="public" virt="non-virtual"><scope>Graphics</scope><name>endFrame</name></member>
      <member refid="classGraphics_a6b1ed076f5063af9f5814d23df30dc24_1a6b1ed076f5063af9f5814d23df30dc24" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getClientHeight</name></member>
      <member refid="classGraphics_af1489a7a2f0b6cf0f94f31ccb03943fa_1af1489a7a2f0b6cf0f94f31ccb03943fa" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getClientWidth</name></member>
      <member refid="classGraphics_aecb2784a1b3b55dd7b1f90f52cd09297_1aecb2784a1b3b55dd7b1f90f52cd09297" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getDepthBufferFromBackBuffer</name></member>
      <member refid="classGraphics_a084646abddc266bd1098f7fec6fc6d93_1a084646abddc266bd1098f7fec6fc6d93" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getDepthBufferOffscreen</name></member>
      <member refid="classGraphics_a01fc5b831899ec962977d6e132575283_1a01fc5b831899ec962977d6e132575283" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getDisplayMode</name></member>
      <member refid="classGraphics_a871f96e949cae3f78aeb35f441e4fe7a_1a871f96e949cae3f78aeb35f441e4fe7a" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getDisplayMode</name></member>
      <member refid="classGraphics_ace65c05b562f91e3270dc6c12836e0d8_1ace65c05b562f91e3270dc6c12836e0d8" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getFpsTimer</name></member>
      <member refid="classGraphics_a320484260cb43b55ed1c4e0a468a1fa2_1a320484260cb43b55ed1c4e0a468a1fa2" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getFrameNum</name></member>
      <member refid="classGraphics_a772e015f5d4e2838186d75f7fff38537_1a772e015f5d4e2838186d75f7fff38537" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getPixel</name></member>
      <member refid="classGraphics_a89eb80f0fd26a04206c4654c9928ca57_1a89eb80f0fd26a04206c4654c9928ca57" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getProjectionMatrix</name></member>
      <member refid="classGraphics_a537fbfc5679f9f4001cdaa53ac233bb7_1a537fbfc5679f9f4001cdaa53ac233bb7" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getRealTimer</name></member>
      <member refid="classGraphics_ac24292486c6316265844e447ecf3fe6d_1ac24292486c6316265844e447ecf3fe6d" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getRefreshRate</name></member>
      <member refid="classGraphics_ad411222985a4f1db857bbd79a9d324db_1ad411222985a4f1db857bbd79a9d324db" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getRenderer</name></member>
      <member refid="classGraphics_ab1d1528c7a038c5ed47d392718603a7c_1ab1d1528c7a038c5ed47d392718603a7c" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getRenderer2d</name></member>
      <member refid="classGraphics_a2318eb0a55cbadf1eeeb7fe565b6b5cb_1a2318eb0a55cbadf1eeeb7fe565b6b5cb" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getRenderer3d</name></member>
      <member refid="classGraphics_a937fe925bd73dc37c24c0b728fabacee_1a937fe925bd73dc37c24c0b728fabacee" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getRenderTargetFromBackBuffer</name></member>
      <member refid="classGraphics_a506691019858e4dbe5c5b4477f73f38f_1a506691019858e4dbe5c5b4477f73f38f" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getRenderTargetOffscreen</name></member>
      <member refid="classGraphics_a51c3473e1b393df2a67432a10a8979cc_1a51c3473e1b393df2a67432a10a8979cc" prot="public" virt="non-virtual"><scope>Graphics</scope><name>getViewMatrix</name></member>
      <member refid="classGraphics_ad5811b30333f3f4918b4d8d52fe19002_1ad5811b30333f3f4918b4d8d52fe19002" prot="public" virt="non-virtual"><scope>Graphics</scope><name>Graphics</name></member>
      <member refid="classGraphics_ae895ca46466a7d73fa1d852bc5a89c2f_1ae895ca46466a7d73fa1d852bc5a89c2f" prot="private" virt="non-virtual"><scope>Graphics</scope><name>GraphicsFriend</name></member>
      <member refid="classGraphics_a5cc0d3b4dd8e0c60c55a67c31b3b64f9_1a5cc0d3b4dd8e0c60c55a67c31b3b64f9" prot="private" virt="non-virtual"><scope>Graphics</scope><name>interrogateDirectxFeatures</name></member>
      <member refid="classGraphics_ae0c36774c2093f5cfc1424187b0e1c31_1ae0c36774c2093f5cfc1424187b0e1c31" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_bFullscreenMode</name></member>
      <member refid="classGraphics_a2e75ada04a8515bf3504a539112bba05_1a2e75ada04a8515bf3504a539112bba05" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_commandLists</name></member>
      <member refid="classGraphics_ae0b5cbf6ca77fd072fbd23ad50c9336d_1ae0b5cbf6ca77fd072fbd23ad50c9336d" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_currentFrame</name></member>
      <member refid="classGraphics_ab66e3729912e3c267d200d7d1ee35af2_1ab66e3729912e3c267d200d7d1ee35af2" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_deferredContexts</name></member>
      <member refid="classGraphics_ad6709c3134a823fa8ef55de9542cf2f9_1ad6709c3134a823fa8ef55de9542cf2f9" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_fpsTimer</name></member>
      <member refid="classGraphics_abeb2d8d4b81e71ad34102c1526ef28b6_1abeb2d8d4b81e71ad34102c1526ef28b6" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_height</name></member>
      <member refid="classGraphics_a0082e76df00907ea297d37abccd21d8f_1a0082e76df00907ea297d37abccd21d8f" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_hParentWnd</name></member>
      <member refid="classGraphics_a974483c4adc9f12211ca4916594f47f8_1a974483c4adc9f12211ca4916594f47f8" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pBackBufferDsv</name></member>
      <member refid="classGraphics_a02e3b57e9a06dca3b04e368cae000820_1a02e3b57e9a06dca3b04e368cae000820" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pBackBufferRtv</name></member>
      <member refid="classGraphics_a756515d158986ac14d289551b3531ed8_1a756515d158986ac14d289551b3531ed8" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pCpuBuffer</name></member>
      <member refid="classGraphics_a575747a53aa1953a098aa64992149188_1a575747a53aa1953a098aa64992149188" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pDevice</name></member>
      <member refid="classGraphics_ad5ab15e2a2efd332ba0a1a67ba232c83_1ad5ab15e2a2efd332ba0a1a67ba232c83" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pDxgiFactory</name></member>
      <member refid="classGraphics_a6305d6fcb9798d15ed15dead4c3fc3a5_1a6305d6fcb9798d15ed15dead4c3fc3a5" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pDxgiOutput</name></member>
      <member refid="classGraphics_aaa529cec9fbc7cb5b9914e0c1f431efe_1aaa529cec9fbc7cb5b9914e0c1f431efe" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pImmediateContext</name></member>
      <member refid="classGraphics_a22e51ce136cf34e39ac7745c4490de4d_1a22e51ce136cf34e39ac7745c4490de4d" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pOffscreenDsv</name></member>
      <member refid="classGraphics_a38b40521639124e322cf9b63c1b6c26f_1a38b40521639124e322cf9b63c1b6c26f" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pOffscreenRtv</name></member>
      <member refid="classGraphics_a31c3e0ab1991c2693da1295f1e4f6702_1a31c3e0ab1991c2693da1295f1e4f6702" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pRenderer</name></member>
      <member refid="classGraphics_ae24eda5d4c47a906eafa9555bf76c70e_1ae24eda5d4c47a906eafa9555bf76c70e" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pRenderer2d</name></member>
      <member refid="classGraphics_a23f562aa7303bb49e73bb104a7d50271_1a23f562aa7303bb49e73bb104a7d50271" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pRenderer3d</name></member>
      <member refid="classGraphics_a6492e28efe827048fcf68db711c33e69_1a6492e28efe827048fcf68db711c33e69" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_projection</name></member>
      <member refid="classGraphics_addd97d44d286a2a1960a0d25883bb6fa_1addd97d44d286a2a1960a0d25883bb6fa" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_pSwapChain</name></member>
      <member refid="classGraphics_ab51ca0bbae080a1912493a2ef70cdec1_1ab51ca0bbae080a1912493a2ef70cdec1" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_realTimer</name></member>
      <member refid="classGraphics_a691874fb352051093a2ec88f3c5a3d11_1a691874fb352051093a2ec88f3c5a3d11" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_swapChainFlags</name></member>
      <member refid="classGraphics_a953a1c18c19e3ff6a84e43ddab99da2a_1a953a1c18c19e3ff6a84e43ddab99da2a" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_view</name></member>
      <member refid="classGraphics_a1a6c82a84419185a87858541fa094066_1a1a6c82a84419185a87858541fa094066" prot="private" virt="non-virtual"><scope>Graphics</scope><name>m_width</name></member>
      <member refid="classGraphics_a9901788d977a1cb176ffc589bc7a9488_1a9901788d977a1cb176ffc589bc7a9488" prot="public" virt="non-virtual"><scope>Graphics</scope><name>makeWindowAssociationWithFactory</name></member>
      <member refid="classNonCopyableAndNonMovable_a0f3fc95f2c582514d58832b7c14d2965_1a0f3fc95f2c582514d58832b7c14d2965" prot="private" virt="non-virtual"><scope>Graphics</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_a3502311a2435129e171eb36ba05f0b2f_1a3502311a2435129e171eb36ba05f0b2f" prot="private" virt="non-virtual"><scope>Graphics</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_a259655d15f1887d015c6d77a0f09f4ff_1a259655d15f1887d015c6d77a0f09f4ff" prot="private" virt="non-virtual"><scope>Graphics</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_acadc47621b689b1b95bef13a35f18572_1acadc47621b689b1b95bef13a35f18572" prot="private" virt="non-virtual"><scope>Graphics</scope><name>NonCopyableAndNonMovable</name></member>
      <member refid="classNonCopyableAndNonMovable_a6541862f56b2fcaa89155f08b8adaf11_1a6541862f56b2fcaa89155f08b8adaf11" prot="private" virt="non-virtual"><scope>Graphics</scope><name>operator=</name></member>
      <member refid="classNonCopyableAndNonMovable_aa3af41edbd14c886cdec335b22254829_1aa3af41edbd14c886cdec335b22254829" prot="private" virt="non-virtual"><scope>Graphics</scope><name>operator=</name></member>
      <member refid="classNonCopyableAndNonMovable_a972632a389e0f2370de9604df60ea9d6_1a972632a389e0f2370de9604df60ea9d6" prot="private" virt="non-virtual"><scope>Graphics</scope><name>operator=</name></member>
      <member refid="classGraphics_ada2873db798d493f4bb95d4ccb25c203_1ada2873db798d493f4bb95d4ccb25c203" prot="public" virt="non-virtual"><scope>Graphics</scope><name>playbackDeferredCommandList</name></member>
      <member refid="classGraphics_aefe40c94ce078f84342864b959543c99_1aefe40c94ce078f84342864b959543c99" prot="private" virt="non-virtual"><scope>Graphics</scope><name>present</name></member>
      <member refid="classGraphics_a9c3fa6f796b990c8d62a77bb2146740c_1a9c3fa6f796b990c8d62a77bb2146740c" prot="public" virt="non-virtual"><scope>Graphics</scope><name>profile</name></member>
      <member refid="classGraphics_a1f8c50c04b66e7d32fc0ddd29791ffdf_1a1f8c50c04b66e7d32fc0ddd29791ffdf" prot="public" virt="non-virtual"><scope>Graphics</scope><name>putPixel</name></member>
      <member refid="classGraphics_ad425ade3dafccfc45cbd83ff960d34e9_1ad425ade3dafccfc45cbd83ff960d34e9" prot="public" virt="non-virtual"><scope>Graphics</scope><name>putPixel</name></member>
      <member refid="classGraphics_ac0920b9480e1d140de868e7526d62074_1ac0920b9480e1d140de868e7526d62074" prot="public" virt="non-virtual"><scope>Graphics</scope><name>recordDeferredCommandList</name></member>
      <member refid="classGraphics_a02c044c5edb7ba86edb3b480ae2b2938_1a02c044c5edb7ba86edb3b480ae2b2938" prot="public" virt="non-virtual"><scope>Graphics</scope><name>resize</name></member>
      <member refid="classGraphics_a48c55f80bdfdba34f8282ddc4c656e8a_1a48c55f80bdfdba34f8282ddc4c656e8a" prot="public" virt="non-virtual"><scope>Graphics</scope><name>runRenderer</name></member>
      <member refid="classGraphics_a0b498c6167c3a63bf4539d04110ca63f_1a0b498c6167c3a63bf4539d04110ca63f" prot="private" virt="non-virtual"><scope>Graphics</scope><name>s_adapters</name></member>
      <member refid="classGraphics_aed265fd9f7b2e9eeb65f184260037e3d_1aed265fd9f7b2e9eeb65f184260037e3d" prot="private" virt="non-virtual"><scope>Graphics</scope><name>s_featureLevel</name></member>
      <member refid="classGraphics_a2ae47898ec3e6e2a64b3a8149a26ca6d_1a2ae47898ec3e6e2a64b3a8149a26ca6d" prot="public" virt="non-virtual"><scope>Graphics</scope><name>setProjectionMatrix</name></member>
      <member refid="classGraphics_a7dce5b31ab15931acd9812956a118ab2_1a7dce5b31ab15931acd9812956a118ab2" prot="public" virt="non-virtual"><scope>Graphics</scope><name>setupMonitors</name></member>
      <member refid="classGraphics_a1318c2c7f400f63a1b70391bebab4673_1a1318c2c7f400f63a1b70391bebab4673" prot="public" virt="non-virtual"><scope>Graphics</scope><name>setViewMatrix</name></member>
      <member refid="classGraphics_a7841c9a961ac9bca33bd30ddf8066cdb_1a7841c9a961ac9bca33bd30ddf8066cdb" prot="public" virt="non-virtual"><scope>Graphics</scope><name>~Graphics</name></member>
      <member refid="classNonCopyableAndNonMovable_aa6874bb9a99fe151e8c2eda429fe5867_1aa6874bb9a99fe151e8c2eda429fe5867" prot="private" virt="non-virtual"><scope>Graphics</scope><name>~NonCopyableAndNonMovable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
