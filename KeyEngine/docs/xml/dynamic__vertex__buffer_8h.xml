<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="dynamic__vertex__buffer_8h" kind="file" language="C++">
    <compoundname>dynamic_vertex_buffer.h</compoundname>
    <includes refid="winner_8h" local="yes">winner.h</includes>
    <includes local="no">DirectXMath.h</includes>
    <includes local="no">d3d11.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes refid="color_8h" local="yes">color.h</includes>
    <includes local="yes">assimp/scene.h</includes>
    <includes refid="assertions__console_8h" local="yes">assertions_console.h</includes>
    <includedby refid="geometry_8h" local="yes">inc/geometry.h</includedby>
    <includedby refid="input__layout_8h" local="yes">inc/input_layout.h</includedby>
    <includedby refid="material__loader_8h" local="yes">inc/material_loader.h</includedby>
    <includedby refid="triangle__mesh_8h" local="yes">inc/triangle_mesh.h</includedby>
    <includedby refid="vertex__buffer_8h" local="yes">inc/vertex_buffer.h</includedby>
    <includedby refid="bmp__loader_8cpp" local="yes">src/bmp_loader.cpp</includedby>
    <includedby refid="dynamic__vertex__buffer_8cpp" local="yes">src/dynamic_vertex_buffer.cpp</includedby>
    <includedby refid="pass__2d_8cpp" local="yes">src/pass_2d.cpp</includedby>
    <incdepgraph>
      <node id="12">
        <label>assertions_console.h</label>
        <link refid="assertions__console_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="1">
        <label>inc/dynamic_vertex_buffer.h</label>
        <link refid="dynamic__vertex__buffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>winner.h</label>
        <link refid="winner_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>DirectXMath.h</label>
      </node>
      <node id="4">
        <label>Windows.h</label>
      </node>
      <node id="11">
        <label>assimp/scene.h</label>
      </node>
      <node id="6">
        <label>d3d11.h</label>
      </node>
      <node id="13">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>sdkddkver.h</label>
      </node>
      <node id="8">
        <label>type_traits</label>
      </node>
      <node id="9">
        <label>utility</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>inc/dynamic_vertex_buffer.h</label>
        <link refid="dynamic__vertex__buffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>inc/geometry.h</label>
        <link refid="geometry_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>inc/input_layout.h</label>
        <link refid="input__layout_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>inc/material_loader.h</label>
        <link refid="material__loader_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>inc/triangle_mesh.h</label>
        <link refid="triangle__mesh_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>inc/vertex_buffer.h</label>
        <link refid="vertex__buffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/MODEL.CPP</label>
        <link refid="MODEL_8CPP"/>
      </node>
      <node id="26">
        <label>src/bmp_loader.cpp</label>
        <link refid="bmp__loader_8cpp"/>
      </node>
      <node id="3">
        <label>src/camera.cpp</label>
        <link refid="camera_8cpp"/>
      </node>
      <node id="4">
        <label>src/camera_frustum.cpp</label>
        <link refid="camera__frustum_8cpp"/>
      </node>
      <node id="5">
        <label>src/camera_widget.cpp</label>
        <link refid="camera__widget_8cpp"/>
      </node>
      <node id="6">
        <label>src/cube.cpp</label>
        <link refid="cube_8cpp"/>
      </node>
      <node id="27">
        <label>src/dynamic_vertex_buffer.cpp</label>
        <link refid="dynamic__vertex__buffer_8cpp"/>
      </node>
      <node id="14">
        <label>src/fullscreen_pass.cpp</label>
        <link refid="fullscreen__pass_8cpp"/>
      </node>
      <node id="7">
        <label>src/geometry.cpp</label>
        <link refid="geometry_8cpp"/>
      </node>
      <node id="15">
        <label>src/input_layout.cpp</label>
        <link refid="input__layout_8cpp"/>
      </node>
      <node id="8">
        <label>src/line.cpp</label>
        <link refid="line_8cpp"/>
      </node>
      <node id="16">
        <label>src/material_loader.cpp</label>
        <link refid="material__loader_8cpp"/>
      </node>
      <node id="21">
        <label>src/mesh.cpp</label>
        <link refid="mesh_8cpp"/>
      </node>
      <node id="17">
        <label>src/pass_2d.cpp</label>
        <link refid="pass__2d_8cpp"/>
      </node>
      <node id="9">
        <label>src/plane.cpp</label>
        <link refid="plane_8cpp"/>
      </node>
      <node id="10">
        <label>src/sky_pass.cpp</label>
        <link refid="sky__pass_8cpp"/>
      </node>
      <node id="11">
        <label>src/sphere.cpp</label>
        <link refid="sphere_8cpp"/>
      </node>
      <node id="12">
        <label>src/terrain.cpp</label>
        <link refid="terrain_8cpp"/>
      </node>
      <node id="18">
        <label>src/testing.cpp</label>
        <link refid="testing_8cpp"/>
      </node>
      <node id="23">
        <label>src/triangle_mesh.cpp</label>
        <link refid="triangle__mesh_8cpp"/>
      </node>
      <node id="25">
        <label>src/vertex_buffer.cpp</label>
        <link refid="vertex__buffer_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classver_1_1VertexInputLayout" prot="public">ver::VertexInputLayout</innerclass>
    <innerclass refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position2D_01_4" prot="public">ver::VertexInputLayout::ElementProperties&lt; Position2D &gt;</innerclass>
    <innerclass refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position3D_01_4" prot="public">ver::VertexInputLayout::ElementProperties&lt; Position3D &gt;</innerclass>
    <innerclass refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Texture2D_01_4" prot="public">ver::VertexInputLayout::ElementProperties&lt; Texture2D &gt;</innerclass>
    <innerclass refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Normal_01_4" prot="public">ver::VertexInputLayout::ElementProperties&lt; Normal &gt;</innerclass>
    <innerclass refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Tangent_01_4" prot="public">ver::VertexInputLayout::ElementProperties&lt; Tangent &gt;</innerclass>
    <innerclass refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Bitangent_01_4" prot="public">ver::VertexInputLayout::ElementProperties&lt; Bitangent &gt;</innerclass>
    <innerclass refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float3Color_01_4" prot="public">ver::VertexInputLayout::ElementProperties&lt; Float3Color &gt;</innerclass>
    <innerclass refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float4Color_01_4" prot="public">ver::VertexInputLayout::ElementProperties&lt; Float4Color &gt;</innerclass>
    <innerclass refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01BGRAColor_01_4" prot="public">ver::VertexInputLayout::ElementProperties&lt; BGRAColor &gt;</innerclass>
    <innerclass refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Count_01_4" prot="public">ver::VertexInputLayout::ElementProperties&lt; Count &gt;</innerclass>
    <innerclass refid="classver_1_1VertexInputLayout_1_1ILElement" prot="public">ver::VertexInputLayout::ILElement</innerclass>
    <innerclass refid="classver_1_1VBElementView" prot="public">ver::VBElementView</innerclass>
    <innerclass refid="structver_1_1VBElementView_1_1ElementSetter" prot="private">ver::VBElementView::ElementSetter</innerclass>
    <innerclass refid="classver_1_1VBElementConstView" prot="public">ver::VBElementConstView</innerclass>
    <innerclass refid="classver_1_1VBuffer" prot="public">ver::VBuffer</innerclass>
    <innernamespace refid="namespacever">ver</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" prot="public" static="no">
        <name>ASSIMP_EXTRACT_AIMESH</name>
        <param><defname>element</defname></param>
        <initializer>	static CPUType extract( const aiMesh &amp;mesh,\
		const size_t i ) noexcept\
	{\
		return *reinterpret_cast&lt;const CPUType*&gt;( &amp;mesh.element[i] );\
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_vertex_buffer.h" line="15" column="9" bodyfile="inc/dynamic_vertex_buffer.h" bodystart="15" bodyend="20"/>
      </memberdef>
      <memberdef kind="define" id="dynamic__vertex__buffer_8h_a423bfa02373fec04c54b75d70d37be1c_1a423bfa02373fec04c54b75d70d37be1c" prot="public" static="no">
        <name>VERTEX_INPUT_LAYOUT_ELEMENT_TYPES</name>
        <initializer>	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Position2D ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Position3D ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Texture2D ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Normal ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Tangent ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Bitangent ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Float3Color ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Float4Color ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( BGRAColor ) \
	<ref refid="dynamic__constant__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" kindref="member">X</ref>( Count )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_vertex_buffer.h" line="22" column="9" bodyfile="inc/dynamic_vertex_buffer.h" bodystart="22" bodyend="32"/>
      </memberdef>
      <memberdef kind="define" id="dynamic__vertex__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" prot="public" static="no">
        <name>X</name>
        <param><defname>el</defname></param>
        <initializer>el,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_vertex_buffer.h" line="50" column="9" bodyfile="inc/dynamic_vertex_buffer.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dynamic__vertex__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" prot="public" static="no">
        <name>X</name>
        <param><defname>el</defname></param>
        <initializer>			case VertexInputLayout::el: \
			{ \
				return T&lt;VertexInputLayout::el&gt;::exec( std::forward&lt;Args&gt;( args )... ); \
			}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/dynamic_vertex_buffer.h" line="176" column="9" bodyfile="inc/dynamic_vertex_buffer.h" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="winner_8h" kindref="compound">winner.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DirectXMath.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;d3d11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="color_8h" kindref="compound">color.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;assimp/scene.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assertions__console_8h" kindref="compound">assertions_console.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tapping<sp/>into<sp/>Assimp<sp/>aiMesh<sp/>elements<sp/>given<sp/>ElementProperties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSIMP_EXTRACT_AIMESH(<sp/>element<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>CPUType<sp/>extract(<sp/>const<sp/>aiMesh<sp/>&amp;mesh,\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>size_t<sp/>i<sp/>)<sp/>noexcept\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>*reinterpret_cast&lt;const<sp/>CPUType*&gt;(<sp/>&amp;mesh.element[i]<sp/>);\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="dynamic__vertex__buffer_8h_a423bfa02373fec04c54b75d70d37be1c_1a423bfa02373fec04c54b75d70d37be1c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERTEX_INPUT_LAYOUT_ELEMENT_TYPES<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Position2D<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Position3D<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Texture2D<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Normal<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Tangent<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Bitangent<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Float3Color<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Float4Color<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>BGRAColor<sp/>)<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>X(<sp/>Count<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacever" kindref="compound">ver</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>example<sp/>VertexInputLayout:<sp/>P3NT2<sp/>signifying:<sp/>Position3,<sp/>Normal,<sp/>UV<sp/>Tex<sp/>Coords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>assembled<sp/>by<sp/>appending<sp/>ILElement<sp/>`tag`s<sp/>next<sp/>to<sp/>each<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>careful<sp/>the<sp/>Direct3d<sp/>runtime<sp/>will<sp/>check<sp/>at<sp/>runtime<sp/>that<sp/>there<sp/>are<sp/>not<sp/>multiple<sp/>hlslSemantics<sp/>on<sp/>a<sp/>single<sp/>Vertex<sp/>Buffer<sp/>Input<sp/>Layout!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classver_1_1VertexInputLayout" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref><sp/>final</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classver_1_1VertexInputLayout_1_1ILElement" kindref="compound">ILElement</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="classver_1_1VertexInputLayout_a3e560d20053a7a9a8b9696170b8e7e71_1a3e560d20053a7a9a8b9696170b8e7e71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ILElement&gt;<sp/><ref refid="classver_1_1VertexInputLayout_a3e560d20053a7a9a8b9696170b8e7e71_1a3e560d20053a7a9a8b9696170b8e7e71" kindref="member">m_vertexLayoutElements</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48" refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50" refid="dynamic__vertex__buffer_8h_abded13e89fb148f56b327029ac1b3042_1abded13e89fb148f56b327029ac1b3042" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X(<sp/>el<sp/>)<sp/>el,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1aa1e76919a8e9feb0228ed99dd30683544" kindref="member">VERTEX_INPUT_LAYOUT_ELEMENT_TYPES</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1aa1e76919a8e9feb0228ed99dd30683544" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;ILEementType&gt;</highlight></codeline>
<codeline lineno="56" refid="structver_1_1VertexInputLayout_1_1ElementProperties" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">ElementProperties</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="59" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position2D_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Position2D&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position2D_01_4_a465d797915a46774ff65328f0ed4c3a5_1a465d797915a46774ff65328f0ed4c3a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position2D_01_4_a465d797915a46774ff65328f0ed4c3a5_1a465d797915a46774ff65328f0ed4c3a5" kindref="member">CPUType</ref><sp/>=<sp/>DirectX::XMFLOAT2;</highlight></codeline>
<codeline lineno="62" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position2D_01_4_aab9119681a4be52b60a1c5e95e35d55c_1aab9119681a4be52b60a1c5e95e35d55c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>DXGI_FORMAT<sp/>dxgiFormat<sp/>=<sp/>DXGI_FORMAT_R32G32_FLOAT;</highlight></codeline>
<codeline lineno="63" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position2D_01_4_a65cf7e18c5d05cbcd522fe27c0017587_1a65cf7e18c5d05cbcd522fe27c0017587" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hlslSemantic<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Position&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position2D_01_4_a9c57b40f22f4decd3e7f6e8e34d04dc7_1a9c57b40f22f4decd3e7f6e8e34d04dc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;P2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" kindref="member">ASSIMP_EXTRACT_AIMESH</ref>(<sp/>mVertices<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="69" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position3D_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Position3D&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position3D_01_4_a0ec0f028f0fe963cfbd8086b3a9e4739_1a0ec0f028f0fe963cfbd8086b3a9e4739" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position3D_01_4_a0ec0f028f0fe963cfbd8086b3a9e4739_1a0ec0f028f0fe963cfbd8086b3a9e4739" kindref="member">CPUType</ref><sp/>=<sp/>DirectX::XMFLOAT3;</highlight></codeline>
<codeline lineno="72" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position3D_01_4_a5d64e930aeff213ed3c43ad313353033_1a5d64e930aeff213ed3c43ad313353033" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>DXGI_FORMAT<sp/>dxgiFormat<sp/>=<sp/>DXGI_FORMAT_R32G32B32_FLOAT;</highlight></codeline>
<codeline lineno="73" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position3D_01_4_ab4198f641919af5022a6fd7c61b6f7c9_1ab4198f641919af5022a6fd7c61b6f7c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hlslSemantic<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Position&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Position3D_01_4_a63c4f6dc12d4940f1c80eed65af3493f_1a63c4f6dc12d4940f1c80eed65af3493f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;P3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" kindref="member">ASSIMP_EXTRACT_AIMESH</ref>(<sp/>mVertices<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="79" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Texture2D_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Texture2D&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Texture2D_01_4_a34415efd0cad322d9cfda28b0c3c55fd_1a34415efd0cad322d9cfda28b0c3c55fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Texture2D_01_4_a34415efd0cad322d9cfda28b0c3c55fd_1a34415efd0cad322d9cfda28b0c3c55fd" kindref="member">CPUType</ref><sp/>=<sp/>DirectX::XMFLOAT2;</highlight></codeline>
<codeline lineno="82" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Texture2D_01_4_ac99474922703a1c037e3d3206a25b594_1ac99474922703a1c037e3d3206a25b594" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>DXGI_FORMAT<sp/>dxgiFormat<sp/>=<sp/>DXGI_FORMAT_R32G32_FLOAT;</highlight></codeline>
<codeline lineno="83" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Texture2D_01_4_ad566a4727e02d8bdd34ce5a16b8107d6_1ad566a4727e02d8bdd34ce5a16b8107d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hlslSemantic<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Texcoord&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Texture2D_01_4_a47e21c29f8f2480e5372b1ff5e118393_1a47e21c29f8f2480e5372b1ff5e118393" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" kindref="member">ASSIMP_EXTRACT_AIMESH</ref>(<sp/>mTextureCoords[0]<sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="89" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Normal_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Normal&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Normal_01_4_abe0c9880c26e9f7a0bb5d3173102c86d_1abe0c9880c26e9f7a0bb5d3173102c86d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Normal_01_4_abe0c9880c26e9f7a0bb5d3173102c86d_1abe0c9880c26e9f7a0bb5d3173102c86d" kindref="member">CPUType</ref><sp/>=<sp/>DirectX::XMFLOAT3;</highlight></codeline>
<codeline lineno="92" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Normal_01_4_a675181af0c126dbb1c7479e11ee5e9e7_1a675181af0c126dbb1c7479e11ee5e9e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>DXGI_FORMAT<sp/>dxgiFormat<sp/>=<sp/>DXGI_FORMAT_R32G32B32_FLOAT;</highlight></codeline>
<codeline lineno="93" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Normal_01_4_ade760e0f547a65451d200225539f1e93_1ade760e0f547a65451d200225539f1e93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hlslSemantic<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Normal_01_4_a2348acaa071130e1372aa6bc84393262_1a2348acaa071130e1372aa6bc84393262" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" kindref="member">ASSIMP_EXTRACT_AIMESH</ref>(<sp/>mNormals<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="99" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Tangent_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Tangent&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Tangent_01_4_ae08536ead954c3a4cd7758a24eaa46c9_1ae08536ead954c3a4cd7758a24eaa46c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Tangent_01_4_ae08536ead954c3a4cd7758a24eaa46c9_1ae08536ead954c3a4cd7758a24eaa46c9" kindref="member">CPUType</ref><sp/>=<sp/>DirectX::XMFLOAT3;</highlight></codeline>
<codeline lineno="102" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Tangent_01_4_ad2f16266d5e4c9e4dc05619b6a121939_1ad2f16266d5e4c9e4dc05619b6a121939" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>DXGI_FORMAT<sp/>dxgiFormat<sp/>=<sp/>DXGI_FORMAT_R32G32B32_FLOAT;</highlight></codeline>
<codeline lineno="103" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Tangent_01_4_ad67e091ca8a4aefbb09f44658ecba7a4_1ad67e091ca8a4aefbb09f44658ecba7a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hlslSemantic<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Tangent&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Tangent_01_4_adb984348c8d3eb0ce38bd52b1db28960_1adb984348c8d3eb0ce38bd52b1db28960" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Nt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" kindref="member">ASSIMP_EXTRACT_AIMESH</ref>(<sp/>mTangents<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="109" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Bitangent_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Bitangent&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Bitangent_01_4_adb91cb0470996d97b5c1d8d3f271eece_1adb91cb0470996d97b5c1d8d3f271eece" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Bitangent_01_4_adb91cb0470996d97b5c1d8d3f271eece_1adb91cb0470996d97b5c1d8d3f271eece" kindref="member">CPUType</ref><sp/>=<sp/>DirectX::XMFLOAT3;</highlight></codeline>
<codeline lineno="112" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Bitangent_01_4_a8c9a582bd121629bd2b41d3be8c5746b_1a8c9a582bd121629bd2b41d3be8c5746b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>DXGI_FORMAT<sp/>dxgiFormat<sp/>=<sp/>DXGI_FORMAT_R32G32B32_FLOAT;</highlight></codeline>
<codeline lineno="113" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Bitangent_01_4_ac95c000b6ffd6abcdfc047df0a8d20a7_1ac95c000b6ffd6abcdfc047df0a8d20a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hlslSemantic<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Bitangent&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Bitangent_01_4_a9749fe3d9eef7028828cf5f3c18206b5_1a9749fe3d9eef7028828cf5f3c18206b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Nb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" kindref="member">ASSIMP_EXTRACT_AIMESH</ref>(<sp/>mBitangents<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="119" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float3Color_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Float3Color&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float3Color_01_4_a13f8d53bc2c2c9cfe5c986b672692d4e_1a13f8d53bc2c2c9cfe5c986b672692d4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float3Color_01_4_a13f8d53bc2c2c9cfe5c986b672692d4e_1a13f8d53bc2c2c9cfe5c986b672692d4e" kindref="member">CPUType</ref><sp/>=<sp/>DirectX::XMFLOAT3;</highlight></codeline>
<codeline lineno="122" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float3Color_01_4_a8871a0ad2b7ce00ba6159c2d79dbbb5a_1a8871a0ad2b7ce00ba6159c2d79dbbb5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>DXGI_FORMAT<sp/>dxgiFormat<sp/>=<sp/>DXGI_FORMAT_R32G32B32_FLOAT;</highlight></codeline>
<codeline lineno="123" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float3Color_01_4_a808a7988f6d91819ddec927ffa0620ee_1a808a7988f6d91819ddec927ffa0620ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hlslSemantic<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Color&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float3Color_01_4_a76b994e782fb6fd6e0a1431cdc11d096_1a76b994e782fb6fd6e0a1431cdc11d096" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;C3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" kindref="member">ASSIMP_EXTRACT_AIMESH</ref>(<sp/>mColors[0]<sp/>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="129" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float4Color_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Float4Color&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float4Color_01_4_ac581b9b5fce47297324373c8a4f0fd4a_1ac581b9b5fce47297324373c8a4f0fd4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float4Color_01_4_ac581b9b5fce47297324373c8a4f0fd4a_1ac581b9b5fce47297324373c8a4f0fd4a" kindref="member">CPUType</ref><sp/>=<sp/>DirectX::XMFLOAT4;</highlight></codeline>
<codeline lineno="132" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float4Color_01_4_aba632495d713a54e722e54ba82896c5f_1aba632495d713a54e722e54ba82896c5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>DXGI_FORMAT<sp/>dxgiFormat<sp/>=<sp/>DXGI_FORMAT_R32G32B32A32_FLOAT;</highlight></codeline>
<codeline lineno="133" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float4Color_01_4_ae4d3a36c836f402e6a4935d39c929e20_1ae4d3a36c836f402e6a4935d39c929e20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hlslSemantic<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Color&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Float4Color_01_4_a9f35c317799fd24c84640ab6f148095f_1a9f35c317799fd24c84640ab6f148095f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;C4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" kindref="member">ASSIMP_EXTRACT_AIMESH</ref>(<sp/>mColors[0]<sp/>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="139" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01BGRAColor_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;BGRAColor&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01BGRAColor_01_4_a8eec32e73b3be7366aa126468ef8b457_1a8eec32e73b3be7366aa126468ef8b457" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structColorBGRA" kindref="compound">CPUType</ref><sp/>=<sp/><ref refid="structColorBGRA" kindref="compound">ColorBGRA</ref>;</highlight></codeline>
<codeline lineno="142" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01BGRAColor_01_4_afc6cd4b310ec378c3a54d4e3c3dd1263_1afc6cd4b310ec378c3a54d4e3c3dd1263" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>DXGI_FORMAT<sp/>dxgiFormat<sp/>=<sp/>DXGI_FORMAT_B8G8R8A8_UNORM;</highlight></codeline>
<codeline lineno="143" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01BGRAColor_01_4_a9aa21b9d0bb5217e6ccaae49a4d1b8a8_1a9aa21b9d0bb5217e6ccaae49a4d1b8a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hlslSemantic<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Color&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01BGRAColor_01_4_a55def6d64fa99e2a1a3a9f699b575137_1a55def6d64fa99e2a1a3a9f699b575137" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;C9&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" kindref="member">ASSIMP_EXTRACT_AIMESH</ref>(<sp/>mColors[0]<sp/>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//template&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//struct<sp/>ElementProperties&lt;RGBAColor&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>using<sp/>CPUType<sp/>=<sp/>col::RGBAColor;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>static<sp/>constexpr<sp/>DXGI_FORMAT<sp/>dxgiFormat<sp/>=<sp/>DXGI_FORMAT_R8G8B8A8_UNORM;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>static<sp/>constexpr<sp/>const<sp/>char<sp/>*hlslSemantic<sp/>=<sp/>&quot;Color&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>static<sp/>constexpr<sp/>const<sp/>char<sp/>*tag<sp/>=<sp/>&quot;C8&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>ASSIMP_EXTRACT_AIMESH(<sp/>mColors[0]<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="159" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Count_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">ElementProperties</ref>&lt;Count&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Count_01_4_aea89dbcf50f63b63b2b94a6a35964e65_1aea89dbcf50f63b63b2b94a6a35964e65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Count_01_4_aea89dbcf50f63b63b2b94a6a35964e65_1aea89dbcf50f63b63b2b94a6a35964e65" kindref="member">CPUType</ref><sp/>=<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>double;</highlight></codeline>
<codeline lineno="162" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Count_01_4_ad3671505e20c9fc51135076878aafe8b_1ad3671505e20c9fc51135076878aafe8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>DXGI_FORMAT<sp/>dxgiFormat<sp/>=<sp/>DXGI_FORMAT_UNKNOWN;</highlight></codeline>
<codeline lineno="163" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Count_01_4_a948569c8d19b942c280aa890a0f8f737_1a948569c8d19b942c280aa890a0f8f737" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hlslSemantic<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invalid&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164" refid="structver_1_1VertexInputLayout_1_1ElementProperties_3_01Count_01_4_ac3bf1943b645b178aa91d3d152b34c9d_1ac3bf1943b645b178aa91d3d152b34c9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;INV&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dynamic__vertex__buffer_8h_aa9ae34007b2412618c1be887ff7a2e79_1aa9ae34007b2412618c1be887ff7a2e79" kindref="member">ASSIMP_EXTRACT_AIMESH</ref>(<sp/>mFaces<sp/>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`template&lt;VertexInputLayout::ILEementType&gt;<sp/>class<sp/>T;<sp/>`<sp/>is<sp/>a<sp/>pimpl<sp/>with<sp/>an<sp/>exec()<sp/>method<sp/>queyring<sp/>one<sp/>of<sp/>those<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;VertexInputLayout::ILEementType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="171" refid="classver_1_1VertexInputLayout_a452fe701708b2ce80a4b957de00b5640_1a452fe701708b2ce80a4b957de00b5640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a452fe701708b2ce80a4b957de00b5640_1a452fe701708b2ce80a4b957de00b5640" kindref="member">bridge</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">VertexInputLayout::ILEementType</ref><sp/>type,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Args&amp;&amp;...<sp/>args<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>type<sp/>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X(<sp/>el<sp/>)<sp/>case<sp/>VertexInputLayout::el:<sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>T&lt;VertexInputLayout::el&gt;::exec(<sp/>std::forward&lt;Args&gt;(<sp/>args<sp/>)...<sp/>);<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1aa1e76919a8e9feb0228ed99dd30683544" kindref="member">VERTEX_INPUT_LAYOUT_ELEMENT_TYPES</ref></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>element<sp/>type<sp/>query.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T&lt;VertexInputLayout::Count&gt;::exec(<sp/>std::forward&lt;Args&gt;(<sp/>args<sp/>)...<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="classver_1_1VertexInputLayout_1_1ILElement" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classver_1_1VertexInputLayout_1_1ILElement" kindref="compound">ILElement</ref><sp/>final</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196" refid="classver_1_1VertexInputLayout_1_1ILElement_a6faed9c2324cb3801ae6c3aedf140f78_1a6faed9c2324cb3801ae6c3aedf140f78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_a6faed9c2324cb3801ae6c3aedf140f78_1a6faed9c2324cb3801ae6c3aedf140f78" kindref="member">m_type</ref>;</highlight></codeline>
<codeline lineno="197" refid="classver_1_1VertexInputLayout_1_1ILElement_aea007302404ed22f54b3805f60c43cb9_1aea007302404ed22f54b3805f60c43cb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_aea007302404ed22f54b3805f60c43cb9_1aea007302404ed22f54b3805f60c43cb9" kindref="member">m_offset</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>byte<sp/>offset<sp/>of<sp/>this<sp/>ILElement<sp/>inside<sp/>VertexInputLayout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_a0f6e5ba8edb16bab19476ca9af242e03_1a0f6e5ba8edb16bab19476ca9af242e03" kindref="member">getElementTypeSize</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref><sp/>type<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_a300e5339c189e1bd42b353d94c14c515_1a300e5339c189e1bd42b353d94c14c515" kindref="member">ILElement</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_aafcbf5036b53d4facb76513fbeb369b1_1aafcbf5036b53d4facb76513fbeb369b1" kindref="member">getOffsetAfterThis</ref>()<sp/>const<sp/>cond_noex;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>byte<sp/>offset<sp/>after<sp/>this<sp/>ILElement<sp/>inside<sp/>VertexInputLayout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_ae00f05f297640e6c0abff8c4d3c9f427_1ae00f05f297640e6c0abff8c4d3c9f427" kindref="member">getOffset</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_a0003dedeefe176499659b929def6a030_1a0003dedeefe176499659b929def6a030" kindref="member">getType</ref>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>D3D11_INPUT_ELEMENT_DESC<sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_a70dd3eb7bd8279a8171b33b2213f5491_1a70dd3eb7bd8279a8171b33b2213f5491" kindref="member">getD3dDesc</ref>()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_ab12096f4ca21416fbdcc3bbb4e521504_1ab12096f4ca21416fbdcc3bbb4e521504" kindref="member">getTag</ref>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="210"><highlight class="normal">public:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;<ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref><sp/>layoutType&gt;</highlight></codeline>
<codeline lineno="212" refid="classver_1_1VertexInputLayout_ac7399fc698252e90645b4afc155c284b_1ac7399fc698252e90645b4afc155c284b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement" kindref="compound">ILElement</ref>&amp;<sp/><ref refid="classver_1_1VertexInputLayout_ac7399fc698252e90645b4afc155c284b_1ac7399fc698252e90645b4afc155c284b" kindref="member">fetch</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;e<sp/>:<sp/><ref refid="classver_1_1VertexInputLayout_a3e560d20053a7a9a8b9696170b8e7e71_1a3e560d20053a7a9a8b9696170b8e7e71" kindref="member">m_vertexLayoutElements</ref><sp/>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>e.getType()<sp/>==<sp/>layoutType<sp/>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>requeted<sp/>Element&apos;s<sp/>type&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a3e560d20053a7a9a8b9696170b8e7e71_1a3e560d20053a7a9a8b9696170b8e7e71" kindref="member">m_vertexLayoutElements</ref>.front();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_1_1ILElement_a300e5339c189e1bd42b353d94c14c515_1a300e5339c189e1bd42b353d94c14c515" kindref="member">ILElement</ref>&amp;<sp/><ref refid="classver_1_1VertexInputLayout_a08e18188f08b7631be3e7901b8b5ee3b_1a08e18188f08b7631be3e7901b8b5ee3b" kindref="member">getElementByIndex</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cond_noex;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref>&amp;<sp/><ref refid="classver_1_1VertexInputLayout_a7adfb63eeb82ed86d1144d70fddc0dee_1a7adfb63eeb82ed86d1144d70fddc0dee" kindref="member">add</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref><sp/>type<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_aa4d03e06b3df44cd4b80095f57f01aa2_1aa4d03e06b3df44cd4b80095f57f01aa2" kindref="member">getSizeInBytes</ref>()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a0864ab48170f7826b431314283b20ab9_1a0864ab48170f7826b431314283b20ab9" kindref="member">getElementCount</ref>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;D3D11_INPUT_ELEMENT_DESC&gt;<sp/><ref refid="classver_1_1VertexInputLayout_a7e6126ae398fd20640edf6a42c2b744b_1a7e6126ae398fd20640edf6a42c2b744b" kindref="member">getD3DInputElementDescs</ref>()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_aad3d42fc8e63ce215f8b9965bc0bb699_1aad3d42fc8e63ce215f8b9965bc0bb699" kindref="member">calcSignature</ref>()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout_a2185ef30b26586b87f40fa3905c37c38_1a2185ef30b26586b87f40fa3905c37c38" kindref="member">hasType</ref>(<sp/>const<sp/><ref refid="classver_1_1VertexInputLayout_a7582c10f2c7a3ac24f95015bcbeb8c1a_1a7582c10f2c7a3ac24f95015bcbeb8c1a" kindref="member">ILEementType</ref>&amp;<sp/>type<sp/>)<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">};</highlight><highlight class="comment">//VertexInputLayout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classver_1_1VBElementView" refkind="compound"><highlight class="normal">class<sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref><sp/>final</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236" refid="classver_1_1VBElementView_a25191be4c1e30f41d17897205b27ff4d_1a25191be4c1e30f41d17897205b27ff4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classver_1_1VBuffer" kindref="compound">VBuffer</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classver_1_1VBElementView_aaf18fa2f15edbc27b0513e28db4ff8d2_1aaf18fa2f15edbc27b0513e28db4ff8d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*m_p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239" refid="classver_1_1VBElementView_a6b6f42e976f3918c4a7e08ff97bf930f_1a6b6f42e976f3918c4a7e08ff97bf930f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref><sp/>&amp;<ref refid="classver_1_1VBElementView_a6b6f42e976f3918c4a7e08ff97bf930f_1a6b6f42e976f3918c4a7e08ff97bf930f" kindref="member">m_layout</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;VertexInputLayout::ILEementType<sp/>layoutType&gt;</highlight></codeline>
<codeline lineno="242" refid="structver_1_1VBElementView_1_1ElementSetter" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structver_1_1VBElementView_1_1ElementSetter" kindref="compound">ElementSetter</ref><sp/>final</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="246" refid="structver_1_1VBElementView_1_1ElementSetter_ac6eb62e37603bdcadda0196cd2488240_1ac6eb62e37603bdcadda0196cd2488240" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structver_1_1VBElementView_1_1ElementSetter_ac6eb62e37603bdcadda0196cd2488240_1ac6eb62e37603bdcadda0196cd2488240" kindref="member">exec</ref>(<sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref><sp/>*pVertex,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pElement,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>&amp;&amp;val<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pVertex-&gt;setElement&lt;layoutType&gt;(<sp/>pElement,<sp/>std::forward&lt;T&gt;(<sp/>val<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="256" refid="classver_1_1VBElementView_a0985e157553a8dfe4fdd37443295f5f7_1a0985e157553a8dfe4fdd37443295f5f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBElementView_a0985e157553a8dfe4fdd37443295f5f7_1a0985e157553a8dfe4fdd37443295f5f7" kindref="member">setElementByIndex</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>&amp;&amp;val<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;element<sp/>=<sp/>m_layout.<ref refid="classver_1_1VertexInputLayout_a08e18188f08b7631be3e7901b8b5ee3b_1a08e18188f08b7631be3e7901b8b5ee3b" kindref="member">getElementByIndex</ref>(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pElement<sp/>=<sp/>m_p<sp/>+<sp/>element.<ref refid="classver_1_1VertexInputLayout_1_1ILElement_ae00f05f297640e6c0abff8c4d3c9f427_1ae00f05f297640e6c0abff8c4d3c9f427" kindref="member">getOffset</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classver_1_1VertexInputLayout_a452fe701708b2ce80a4b957de00b5640_1a452fe701708b2ce80a4b957de00b5640" kindref="member">VertexInputLayout::bridge&lt;ElementSetter&gt;</ref>(<sp/>element.getType(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>pElement,<sp/>std::forward&lt;T&gt;(<sp/>val<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>First,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Rest&gt;</highlight></codeline>
<codeline lineno="266" refid="classver_1_1VBElementView_a8e75c1b364fa38cbbcb51c0837bed523_1a8e75c1b364fa38cbbcb51c0837bed523" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBElementView_a8e75c1b364fa38cbbcb51c0837bed523_1a8e75c1b364fa38cbbcb51c0837bed523" kindref="member">setElementByIndex</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>First<sp/>&amp;&amp;first,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rest&amp;&amp;...<sp/>rest<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setElementByIndex(<sp/>i,<sp/>std::forward&lt;First&gt;(<sp/>first<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>base<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setElementByIndex(<sp/>i<sp/>+<sp/>1,<sp/>std::forward&lt;Rest&gt;(<sp/>rest<sp/>)...<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>recursive<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;VertexInputLayout::ILEementType<sp/>layoutType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcType&gt;</highlight></codeline>
<codeline lineno="276" refid="classver_1_1VBElementView_aee66ecea0394f7d0e5244ad70223abef_1aee66ecea0394f7d0e5244ad70223abef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBElementView_aee66ecea0394f7d0e5244ad70223abef_1aee66ecea0394f7d0e5244ad70223abef" kindref="member">setElement</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pElement,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcType<sp/>&amp;&amp;val<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Dest<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">VertexInputLayout::ElementProperties&lt;layoutType&gt;::CPUType</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal">(<sp/>std::is_assignable&lt;Dest,<sp/>SrcType&gt;::value<sp/>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">Dest*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pElement<sp/>)<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>ASSERT(<sp/>false,<sp/>&quot;Element<sp/>type<sp/>mismatch!&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pData,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref><sp/>&amp;layout<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;VertexInputLayout::ILEementType<sp/>layoutType&gt;</highlight></codeline>
<codeline lineno="291" refid="classver_1_1VBElementView_ac9e037ac6b0fd340869a0f26e88ab3a3_1ac9e037ac6b0fd340869a0f26e88ab3a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classver_1_1VBElementView_ac9e037ac6b0fd340869a0f26e88ab3a3_1ac9e037ac6b0fd340869a0f26e88ab3a3" kindref="member">getElement</ref>()<sp/>cond_noex</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/>m_p,<sp/></highlight><highlight class="stringliteral">&quot;Element<sp/>not<sp/>in<sp/>View<sp/>of<sp/>Input<sp/>Layout!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pElement<sp/>=<sp/>m_p<sp/>+<sp/>m_layout.<ref refid="classver_1_1VertexInputLayout_ac7399fc698252e90645b4afc155c284b_1ac7399fc698252e90645b4afc155c284b" kindref="member">fetch</ref>&lt;layoutType&gt;().<ref refid="classver_1_1VertexInputLayout_1_1ILElement_ae00f05f297640e6c0abff8c4d3c9f427_1ae00f05f297640e6c0abff8c4d3c9f427" kindref="member">getOffset</ref>();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">typename<sp/><ref refid="structver_1_1VertexInputLayout_1_1ElementProperties" kindref="compound">VertexInputLayout::ElementProperties&lt;layoutType&gt;::CPUType</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pElement<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal">};</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classver_1_1VBElementConstView" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classver_1_1VBElementConstView" kindref="compound">VBElementConstView</ref><sp/>final</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301" refid="classver_1_1VBElementConstView_a2272c4ae2e1df217da1a6c75fe30b486_1a2272c4ae2e1df217da1a6c75fe30b486" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref><sp/><ref refid="classver_1_1VBElementConstView_a2272c4ae2e1df217da1a6c75fe30b486_1a2272c4ae2e1df217da1a6c75fe30b486" kindref="member">m_vertexView</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBElementConstView" kindref="compound">VBElementConstView</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref><sp/>&amp;v<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;VertexInputLayout::ILEementType<sp/>layoutType&gt;</highlight></codeline>
<codeline lineno="306" refid="classver_1_1VBElementConstView_a40724c98236104c30ffb6a60ebd2ee41_1a40724c98236104c30ffb6a60ebd2ee41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classver_1_1VBElementConstView_a40724c98236104c30ffb6a60ebd2ee41_1a40724c98236104c30ffb6a60ebd2ee41" kindref="member">getElement</ref>()<sp/>const<sp/>cond_noex</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_vertexView<sp/>).getElement&lt;layoutType&gt;();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal">};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classver_1_1VBuffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classver_1_1VBuffer" kindref="compound">VBuffer</ref><sp/>final</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315" refid="classver_1_1VBuffer_a04387a33b0b38a4eda64c4d84d314558_1a04387a33b0b38a4eda64c4d84d314558" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;char&gt;<sp/><ref refid="classver_1_1VBuffer_a04387a33b0b38a4eda64c4d84d314558_1a04387a33b0b38a4eda64c4d84d314558" kindref="member">m_data</ref>;</highlight></codeline>
<codeline lineno="316" refid="classver_1_1VBuffer_a151ec260bf0f942b1f67517558fa179b_1a151ec260bf0f942b1f67517558fa179b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref><sp/><ref refid="classver_1_1VBuffer_a151ec260bf0f942b1f67517558fa179b_1a151ec260bf0f942b1f67517558fa179b" kindref="member">m_vertexLayout</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBuffer" kindref="compound">VBuffer</ref>(<sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref><sp/>layout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vertexCount<sp/>=<sp/>0u<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBuffer" kindref="compound">VBuffer</ref>(<sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref><sp/>layout,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>aiMesh<sp/>&amp;<ref refid="namespacemesh" kindref="compound">mesh</ref><sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/><ref refid="classver_1_1VertexInputLayout" kindref="compound">VertexInputLayout</ref>&amp;<sp/>getLayout()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize(<sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newVertexCount<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>getVertexCount()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>getSizeInBytes()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>...TArgs&gt;</highlight></codeline>
<codeline lineno="327" refid="classver_1_1VBuffer_a72b7cf6963ccaa7dc23de132233b3c15_1a72b7cf6963ccaa7dc23de132233b3c15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>emplaceVertex(<sp/>TArgs&amp;&amp;...<sp/>args<sp/>)<sp/>cond_noex</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions__console_8h_af3e11288cb5021b91949be5058816137_1af3e11288cb5021b91949be5058816137" kindref="member">ASSERT</ref>(<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(<sp/>args<sp/>)<sp/>==<sp/>m_vertexLayout.<ref refid="classver_1_1VertexInputLayout_a0864ab48170f7826b431314283b20ab9_1a0864ab48170f7826b431314283b20ab9" kindref="member">getElementCount</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>count<sp/>doesn&apos;t<sp/>match<sp/>the<sp/>amount<sp/>of<sp/>vertex<sp/>Elements<sp/>in<sp/>the<sp/>layout&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_data.resize(<sp/>m_data.size()<sp/>+<sp/>m_vertexLayout.<ref refid="classver_1_1VertexInputLayout_aa4d03e06b3df44cd4b80095f57f01aa2_1aa4d03e06b3df44cd4b80095f57f01aa2" kindref="member">getSizeInBytes</ref>()<sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>back().setElementByIndex(<sp/>0u,<sp/>std::forward&lt;TArgs&gt;(<sp/>args<sp/>)...<sp/>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref><sp/>back()<sp/>cond_noex;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBElementConstView" kindref="compound">VBElementConstView</ref><sp/>back()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref><sp/>front()<sp/>cond_noex;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBElementConstView" kindref="compound">VBElementConstView</ref><sp/>front()<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBElementView" kindref="compound">VBElementView</ref><sp/>operator[](<sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>)<sp/>cond_noex;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classver_1_1VBElementConstView" kindref="compound">VBElementConstView</ref><sp/>operator[](<sp/>const<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>)<sp/>const<sp/>cond_noex;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>namespace<sp/>ver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ASSIMP_EXTRACT_AIMESH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VERTEX_INPUT_LAYOUT_ELEMENT_TYPES</highlight></codeline>
    </programlisting>
    <location file="inc/dynamic_vertex_buffer.h"/>
  </compounddef>
</doxygen>
