<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classVertexShaderConstantBuffer" kind="class" language="C++" prot="public" final="yes">
    <compoundname>VertexShaderConstantBuffer</compoundname>
    <basecompoundref refid="classIConstantBuffer" prot="public" virt="non-virtual">IConstantBuffer&lt; CB &gt;</basecompoundref>
    <includes refid="constant__buffer_8h" local="no">constant_buffer.h</includes>
    <templateparamlist>
      <param>
        <type>typename CB</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classVertexShaderConstantBuffer_a8fd934cdf536ab8de284fb5ce1850a20_1a8fd934cdf536ab8de284fb5ce1850a20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void VertexShaderConstantBuffer&lt; CB &gt;::bind</definition>
        <argsstring>(Graphics &amp;gfx) cond_noex override</argsstring>
        <name>bind</name>
        <qualifiedname>VertexShaderConstantBuffer::bind</qualifiedname>
        <reimplements refid="classIBindable_add4560f78e76629ee81ba701ba1052e1_1add4560f78e76629ee81ba701ba1052e1">bind</reimplements>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <briefdescription>
<para>bind graphics resource to a certain stage of the graphics pipeline </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/constant_buffer.h" line="122" column="6" bodyfile="inc/constant_buffer.h" bodystart="122" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classVertexShaderConstantBuffer_a0ce115989b6228614b3cfe00cdc14140_1a0ce115989b6228614b3cfe00cdc14140" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string VertexShaderConstantBuffer&lt; CB &gt;::getUid</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>getUid</name>
        <qualifiedname>VertexShaderConstantBuffer::getUid</qualifiedname>
        <reimplements refid="classIBindable_a7d88cdbd5d500d6d7f1bfabe16927855_1a7d88cdbd5d500d6d7f1bfabe16927855">getUid</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/constant_buffer.h" line="153" column="13" bodyfile="inc/constant_buffer.h" bodystart="153" bodyend="156"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classVertexShaderConstantBuffer_af6a9b7538d1904ff2bf05aa1b4ec7cbd_1af6a9b7538d1904ff2bf05aa1b4ec7cbd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classVertexShaderConstantBuffer" kindref="compound">VertexShaderConstantBuffer</ref> &gt;</type>
        <definition>static std::shared_ptr&lt; VertexShaderConstantBuffer &gt; VertexShaderConstantBuffer&lt; CB &gt;::fetch</definition>
        <argsstring>(Graphics &amp;gfx, const CB &amp;cb, const unsigned slot)</argsstring>
        <name>fetch</name>
        <qualifiedname>VertexShaderConstantBuffer::fetch</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>const CB &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/constant_buffer.h" line="128" column="24" bodyfile="inc/constant_buffer.h" bodystart="128" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classVertexShaderConstantBuffer_a065880d910fae01cf5cd996379b2a846_1a065880d910fae01cf5cd996379b2a846" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classVertexShaderConstantBuffer" kindref="compound">VertexShaderConstantBuffer</ref> &gt;</type>
        <definition>static std::shared_ptr&lt; VertexShaderConstantBuffer &gt; VertexShaderConstantBuffer&lt; CB &gt;::fetch</definition>
        <argsstring>(Graphics &amp;gfx, const unsigned slot)</argsstring>
        <name>fetch</name>
        <qualifiedname>VertexShaderConstantBuffer::fetch</qualifiedname>
        <param>
          <type><ref refid="classGraphics" kindref="compound">Graphics</ref> &amp;</type>
          <declname>gfx</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/constant_buffer.h" line="135" column="24" bodyfile="inc/constant_buffer.h" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classVertexShaderConstantBuffer_ab479a1329c5a7fd39075582f2d89262a_1ab479a1329c5a7fd39075582f2d89262a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string VertexShaderConstantBuffer&lt; CB &gt;::calcUid</definition>
        <argsstring>(const CB &amp;cb, const unsigned slot)</argsstring>
        <name>calcUid</name>
        <qualifiedname>VertexShaderConstantBuffer::calcUid</qualifiedname>
        <param>
          <type>const CB &amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/constant_buffer.h" line="141" column="20" bodyfile="inc/constant_buffer.h" bodystart="141" bodyend="145"/>
        <referencedby refid="classVertexShaderConstantBuffer_ab479a1329c5a7fd39075582f2d89262a_1ab479a1329c5a7fd39075582f2d89262a" compoundref="constant__buffer_8h" startline="141" endline="145">VertexShaderConstantBuffer&lt; CB &gt;::calcUid</referencedby>
        <referencedby refid="classVertexShaderConstantBuffer_a0ce115989b6228614b3cfe00cdc14140_1a0ce115989b6228614b3cfe00cdc14140" compoundref="constant__buffer_8h" startline="153" endline="156">VertexShaderConstantBuffer&lt; CB &gt;::getUid</referencedby>
      </memberdef>
      <memberdef kind="function" id="classVertexShaderConstantBuffer_aceeaed4fc258eabd881987d05d598385_1aceeaed4fc258eabd881987d05d598385" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string VertexShaderConstantBuffer&lt; CB &gt;::calcUid</definition>
        <argsstring>(const unsigned slot)</argsstring>
        <name>calcUid</name>
        <qualifiedname>VertexShaderConstantBuffer::calcUid</qualifiedname>
        <param>
          <type>const unsigned</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/constant_buffer.h" line="147" column="20" bodyfile="inc/constant_buffer.h" bodystart="147" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classVertexShaderConstantBuffer_a1ea067e61588936bf6140ad036683f6b_1a1ea067e61588936bf6140ad036683f6b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVertexShaderConstantBuffer" kindref="compound">VertexShaderConstantBuffer</ref>&lt; CB &gt;</type>
        <definition>static VertexShaderConstantBuffer&lt; CB &gt; VertexShaderConstantBuffer&lt; CB &gt;::makeCopy</definition>
        <argsstring>(ID3D11Buffer *srcBuf, const unsigned slot)</argsstring>
        <name>makeCopy</name>
        <qualifiedname>VertexShaderConstantBuffer::makeCopy</qualifiedname>
        <param>
          <type>ID3D11Buffer *</type>
          <declname>srcBuf</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/constant_buffer.h" line="158" column="35" bodyfile="inc/constant_buffer.h" bodystart="158" bodyend="173"/>
        <referencedby refid="classTransformVSCB_aebd2c428362577bb3bb4a6333355af03_1aebd2c428362577bb3bb4a6333355af03" compoundref="transform__vscb_8cpp" startline="33" endline="38">TransformVSCB::TransformVSCB</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>GraphicsFriend</label>
        <link refid="classGraphicsFriend"/>
      </node>
      <node id="3">
        <label>IBindable</label>
        <link refid="classIBindable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>IConstantBuffer&lt; CB &gt;</label>
        <link refid="classIConstantBuffer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>VertexShaderConstantBuffer&lt; CB &gt;</label>
        <link refid="classVertexShaderConstantBuffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12">
        <label>ColorBGRA</label>
        <link refid="structColorBGRA"/>
      </node>
      <node id="5">
        <label>Graphics</label>
        <link refid="classGraphics"/>
        <childnode refid="6" relation="private-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_pRenderer3d</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_pRenderer2d</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_fpsTimer</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_realTimer</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_pCpuBuffer</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>GraphicsFriend</label>
        <link refid="classGraphicsFriend"/>
      </node>
      <node id="3">
        <label>IBindable</label>
        <link refid="classIBindable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>IConstantBuffer&lt; CB &gt;</label>
        <link refid="classIConstantBuffer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>s_gph</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>KeyTimer&lt; std::chrono::microseconds &gt;</label>
        <link refid="classKeyTimer"/>
        <childnode refid="6" relation="private-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>KeyTimer&lt; std::chrono::seconds &gt;</label>
        <link refid="classKeyTimer"/>
        <childnode refid="6" relation="private-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>NonCopyableAndNonMovable</label>
        <link refid="classNonCopyableAndNonMovable"/>
      </node>
      <node id="1">
        <label>VertexShaderConstantBuffer&lt; CB &gt;</label>
        <link refid="classVertexShaderConstantBuffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>ren::Renderer</label>
        <link refid="classren_1_1Renderer"/>
      </node>
      <node id="9">
        <label>ren::Renderer2d</label>
        <link refid="classren_1_1Renderer2d"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>ren::Renderer3d</label>
        <link refid="classren_1_1Renderer3d"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/constant_buffer.h" line="107" column="1" bodyfile="inc/constant_buffer.h" bodystart="109" bodyend="174"/>
    <listofallmembers>
      <member refid="classIBindable_a608c5066b829febbd49cd82d1d1fa353_1a608c5066b829febbd49cd82d1d1fa353" prot="public" virt="virtual"><scope>VertexShaderConstantBuffer</scope><name>accept</name></member>
      <member refid="classVertexShaderConstantBuffer_a8fd934cdf536ab8de284fb5ce1850a20_1a8fd934cdf536ab8de284fb5ce1850a20" prot="public" virt="virtual"><scope>VertexShaderConstantBuffer</scope><name>bind</name></member>
      <member refid="classVertexShaderConstantBuffer_ab479a1329c5a7fd39075582f2d89262a_1ab479a1329c5a7fd39075582f2d89262a" prot="public" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>calcUid</name></member>
      <member refid="classVertexShaderConstantBuffer_aceeaed4fc258eabd881987d05d598385_1aceeaed4fc258eabd881987d05d598385" prot="public" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>calcUid</name></member>
      <member refid="classVertexShaderConstantBuffer_af6a9b7538d1904ff2bf05aa1b4ec7cbd_1af6a9b7538d1904ff2bf05aa1b4ec7cbd" prot="public" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>fetch</name></member>
      <member refid="classVertexShaderConstantBuffer_a065880d910fae01cf5cd996379b2a846_1a065880d910fae01cf5cd996379b2a846" prot="public" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>fetch</name></member>
      <member refid="classIConstantBuffer_a234c7460e626f1659945d4aace6783af_1a234c7460e626f1659945d4aace6783af" prot="public" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>getCb</name></member>
      <member refid="classGraphicsFriend_a175df79f82ab5a6dad1df24b5a242ef7_1a175df79f82ab5a6dad1df24b5a242ef7" prot="protected" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>getDevice</name></member>
      <member refid="classGraphicsFriend_a619e32893ab49ea6c5200e7c2d52e2f2_1a619e32893ab49ea6c5200e7c2d52e2f2" prot="protected" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>getDeviceContext</name></member>
      <member refid="classIConstantBuffer_a01dc2ed3fe56e398466da0eac8476086_1a01dc2ed3fe56e398466da0eac8476086" prot="public" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>getSlot</name></member>
      <member refid="classVertexShaderConstantBuffer_a0ce115989b6228614b3cfe00cdc14140_1a0ce115989b6228614b3cfe00cdc14140" prot="public" virt="virtual"><scope>VertexShaderConstantBuffer</scope><name>getUid</name></member>
      <member refid="classIConstantBuffer_aaf8166466c78ea1d4a6895a311f1b35c_1aaf8166466c78ea1d4a6895a311f1b35c" prot="public" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>IConstantBuffer</name></member>
      <member refid="classIConstantBuffer_a2d580772f74b4ea190687b3f0284607e_1a2d580772f74b4ea190687b3f0284607e" prot="public" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>IConstantBuffer</name></member>
      <member refid="classIConstantBuffer_a6205d2c03344895735375508cc215983_1a6205d2c03344895735375508cc215983" prot="public" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>IConstantBuffer</name></member>
      <member refid="classIConstantBuffer_af9cbf846b484e990f92dcbf2f8c36ad0_1af9cbf846b484e990f92dcbf2f8c36ad0" prot="protected" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>m_pD3dCb</name></member>
      <member refid="classIConstantBuffer_a82ee09da1156dbb8d18d6fe580af6448_1a82ee09da1156dbb8d18d6fe580af6448" prot="protected" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>m_slot</name></member>
      <member refid="classVertexShaderConstantBuffer_a1ea067e61588936bf6140ad036683f6b_1a1ea067e61588936bf6140ad036683f6b" prot="public" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>makeCopy</name></member>
      <member refid="classIConstantBuffer_a7de4ee448a807aa113186ff83757a425_1a7de4ee448a807aa113186ff83757a425" prot="protected" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>s_gph</name></member>
      <member refid="classIConstantBuffer_a6ad5e0bb4786aa200f8f99d91b1e8f60_1a6ad5e0bb4786aa200f8f99d91b1e8f60" prot="protected" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>setBufferDesc</name></member>
      <member refid="classIBindable_a4d590eebe80fa4e0aa865a875ff86c02_1a4d590eebe80fa4e0aa865a875ff86c02" prot="public" virt="virtual"><scope>VertexShaderConstantBuffer</scope><name>setDebugObjectName</name></member>
      <member refid="classIBindable_a12fe8725cb3f4836f22d1592b07e2c91_1a12fe8725cb3f4836f22d1592b07e2c91" prot="public" virt="virtual"><scope>VertexShaderConstantBuffer</scope><name>setMesh</name></member>
      <member refid="classIConstantBuffer_a01fb34eedba302e40cc4a4ad9889bcf3_1a01fb34eedba302e40cc4a4ad9889bcf3" prot="public" virt="non-virtual"><scope>VertexShaderConstantBuffer</scope><name>update</name></member>
      <member refid="classIBindable_a7f68262ff85e25e9f826eae7c01bbfa1_1a7f68262ff85e25e9f826eae7c01bbfa1" prot="public" virt="virtual"><scope>VertexShaderConstantBuffer</scope><name>~IBindable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
